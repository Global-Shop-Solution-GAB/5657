Program.Sub.ScreenSU.Start
Gui.FrmMaster..Create(DashForm)
Gui.FrmMaster..Size(19215,9990)
Gui.FrmMaster..MinX(15360)
Gui.FrmMaster..MinY(9390)
Gui.FrmMaster..Position(0,0)
Gui.FrmMaster..BackColor(-2147483633)
Gui.FrmMaster..MousePointer(0)
Gui.FrmMaster..Event(UnLoad,FrmMaster_UnLoad)
Gui.FrmMaster..Caption("Open Work Orders/Project [5657]")
Gui.FrmMaster..Event(Resize,FrmMaster_Resize)
Gui.FrmMaster..AlwaysOnTop(False)
Gui.FrmMaster..FontName("Tahoma")
Gui.FrmMaster..FontSize(8.25)
Gui.FrmMaster..ControlBox(True)
Gui.FrmMaster..MaxButton(True)
Gui.FrmMaster..MinButton(True)
Gui.FrmMaster..Moveable(True)
Gui.FrmMaster..Sizeable(True)
Gui.FrmMaster..ShowInTaskBar(True)
Gui.FrmMaster..TitleBar(True)
Gui.FrmMaster..BarRefreshButton(True)
Gui.FrmMaster..BarExportButton(True)
Gui.FrmMaster..Event(RefreshClick,FrmMaster_RefreshClick)
Gui.FrmMaster..Event(ExportClick,FrmMaster_ExportClick)
Gui.FrmMaster..Event(UserButtonClicked,FrmMaster_UserButtonClicked)
Gui.FrmMaster..Event(UserTextBoxEditValueChanged,FrmMaster_UserTextBoxEditValueChanged)
Gui.FrmMaster..BarInternalButton(False)
Gui.FrmMaster..AccentColor(2)
Gui.FrmMaster..BarHelpButton(False,"","","",1.0.0,"1/01/0001 12:00:00 am","",0,0,False)
Gui.FrmMaster.lblDateUpdated.Create(Label,"",True,3500,500,0,135,320,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmMaster.lblDateUpdated.BorderStyle(0)
Gui.FrmMaster.prgBar.Create(ProgressBar)
Gui.FrmMaster.prgBar.Size(6060,300)
Gui.FrmMaster.prgBar.Position(150,45)
Gui.FrmMaster.prgBar.Visible(True)
Gui.FrmMaster.tabProd.Create(Tab)
Gui.FrmMaster.tabProd.Size(19215,9000)
Gui.FrmMaster.tabProd.Position(0,0)
Gui.FrmMaster.tabProd.DefaultValue("All Work Orders")
Gui.FrmMaster.tabProd.Enabled(True)
Gui.FrmMaster.tabProd.Visible(False)
Gui.FrmMaster.tabProd.Zorder(0)
Gui.FrmMaster.tabProd.FontName("Tahoma")
Gui.FrmMaster.tabProd.FontSize(8.25)
Gui.FrmMaster.tabProd.Dock(5)
Gui.FrmMaster.tabProd.Tabs(4)
Gui.FrmMaster.tabProd.SetTab(0)
Gui.FrmMaster.tabProd.Caption("All Work Orders")
Gui.FrmMaster.tabProd.SetTab(1)
Gui.FrmMaster.tabProd.Caption("Materials")
Gui.FrmMaster.tabProd.SetTab(2)
Gui.FrmMaster.tabProd.Caption("Subcontract")
Gui.FrmMaster.tabProd.SetTab(3)
Gui.FrmMaster.tabProd.Caption("Work Centre Priority")
Gui.FrmMaster.tabProd.Event(Click,tabProd_Click)
Gui.FrmMaster.gsgcAllM.Create(GsGridControl)
Gui.FrmMaster.gsgcAllM.Enabled(True)
Gui.FrmMaster.gsgcAllM.Visible(True)
Gui.FrmMaster.gsgcAllM.Zorder(0)
Gui.FrmMaster.gsgcAllM.Size(19185,8565)
Gui.FrmMaster.gsgcAllM.Position(0,0)
Gui.FrmMaster.gsgcAllM.Dock(5)
Gui.FrmMaster.gsgcAllM.Parent("tabProd",1)
Gui.FrmMaster.gsgcAllM.Event(RowCellClick,gsgcAllM_RowCellClick)
Gui.FrmMaster.gsgcAllM.Event(CellValueChanged,gsgcAllM_CellValueChanged)
gui.FrmMaster.gsgcAllM.event(ColumnFilterChanged,gsgcAllM_ColumnFilterChanged)
Gui.FrmMaster.GsGCAll.Create(GsGridControl)
Gui.FrmMaster.GsGCAll.Size(15540,9675)
Gui.FrmMaster.GsGCAll.Position(0,0)
Gui.FrmMaster.GsGCAll.Event(RowCellClick,GsGCAll_RowCellClick)
Gui.FrmMaster.GsGCAll.Event(CellValueChanged,GsGCAll_CellValueChanged)
gui.FrmMaster.gsgcAll.event(ColumnFilterChanged,gsgcAll_ColumnFilterChanged)
Gui.FrmMaster.GsGCAll.Parent("tabProd",0)
Gui.FrmMaster.GsGCAll.dock(5)
Gui.FrmMaster.GsGCAll.Enabled(True)
Gui.FrmMaster.GsGCAll.Visible(True)
Gui.FrmMaster.GsGCAll.Zorder(0)
Gui.FrmMaster.gsgcAllO.Create(GsGridControl)
Gui.FrmMaster.gsgcAllO.Enabled(True)
Gui.FrmMaster.gsgcAllO.Visible(True)
Gui.FrmMaster.gsgcAllO.Zorder(0)
Gui.FrmMaster.gsgcAllO.Size(19185,8565)
Gui.FrmMaster.gsgcAllO.Position(0,0)
Gui.FrmMaster.gsgcAllO.Parent("tabProd",2)
Gui.FrmMaster.gsgcAllO.Dock(5)
Gui.FrmMaster.gsgcAllO.Event(RowCellClick,gsgcAllO_RowCellClick)
gui.FrmMaster.gsgcAllO.event(ColumnFilterChanged,gsgcAllO_ColumnFilterChanged)
Gui.FrmMaster.accAllWO.Create(AccordionControl)
Gui.FrmMaster.accAllWO.Enabled(True)
Gui.FrmMaster.accAllWO.Visible(True)
Gui.FrmMaster.accAllWO.Size(3900,8130)
Gui.FrmMaster.accAllWO.Position(0,0)
Gui.FrmMaster.accAllWO.Minimized(False)
Gui.FrmMaster.accAllWO.Parent("tabProd",0)
Gui.FrmMaster.accAllWO.Dock(3)
Gui.FrmMaster.accAllWO.Event(ElementClick,accAllWO_ElementClick)
Gui.FrmMaster.accAllWO.AddElement(aceAllBWD,"Backwards Schedule","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accAllWO.AddElement(aceAllCloseSeq,"Close WO Seq","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accAllWO.AddElement(aceAllCompleteTask,"Complete Task","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accAllWO.AddElement(aceAllIssue,"Issue Material","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accAllWO.AddElement(aceAllNewWO,"New WO","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accAllWO.AddElement(aceAllWIPFGE,"WIP to FG (Expedited)","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accMat.Create(AccordionControl)
Gui.FrmMaster.accMat.Enabled(True)
Gui.FrmMaster.accMat.Visible(True)
Gui.FrmMaster.accMat.Size(3585,8565)
Gui.FrmMaster.accMat.Position(0,0)
Gui.FrmMaster.accMat.Minimized(False)
Gui.FrmMaster.accMat.Parent("tabProd",1)
Gui.FrmMaster.accMat.Dock(3)
Gui.FrmMaster.accMat.Event(ElementClick,accMat_ElementClick)
Gui.FrmMaster.accMat.AddElement(aceMatAutoPO,"Automated Purchasing","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accMat.AddElement(aceMatCloseWOSeq,"Close WO Seq","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accMat.AddElement(aceMatIssueMat,"Issue Material","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accMat.AddElement(aceMatIssueMatBF,"Issue Material (Backflush)","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accOut.Create(AccordionControl)
Gui.FrmMaster.accOut.Enabled(True)
Gui.FrmMaster.accOut.Visible(True)
Gui.FrmMaster.accOut.Size(3900,8565)
Gui.FrmMaster.accOut.Position(0,-60)
Gui.FrmMaster.accOut.Minimized(False)
Gui.FrmMaster.accOut.Event(ElementClick,accOut_ElementClick)
Gui.FrmMaster.accOut.Dock(3)
Gui.FrmMaster.accOut.Parent("tabProd",2)
Gui.FrmMaster.accOut.AddElement(aceOutAutoPO,"Automated Purchasing","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accOut.AddElement(aceOutCloseWOSeq,"Close WO Seq","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.gsgcAllO.Event(CellValueChanged,gsgcAllO_CellValueChanged)
Gui.FrmMaster.gsgcOper.Create(GsGridControl)
Gui.FrmMaster.gsgcOper.Size(19185,8565)
Gui.FrmMaster.gsgcOper.Position(0,0)
Gui.FrmMaster.gsgcOper.Event(RowCellClick,gsgcOper_RowCellClick)
Gui.FrmMaster.gsgcOper.Parent("tabProd",3)
Gui.FrmMaster.gsgcOper.Dock(5)
Gui.FrmMaster.gsgcOper.Enabled(True)
Gui.FrmMaster.gsgcOper.Visible(True)
Gui.FrmMaster.gsgcOper.Zorder(-1)
Gui.FrmMaster.accOper.Create(AccordionControl)
Gui.FrmMaster.accOper.Enabled(True)
Gui.FrmMaster.accOper.Visible(True)
Gui.FrmMaster.accOper.Size(3900,8565)
Gui.FrmMaster.accOper.Position(0,-60)
Gui.FrmMaster.accOper.Minimized(False)
Gui.FrmMaster.accOper.Event(ElementClick,accOper_ElementClick)
Gui.FrmMaster.accOper.Dock(3)
Gui.FrmMaster.accOper.Parent("tabProd",3)
'Gui.FrmMaster.accOper.AddElement(aceOperAutoPO,"Automated Purchasing","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accOper.AddElement(aceOperAutoPO,"Close WO Seq","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.accOper.AddElement(aceOperAutoPO,"Backflush Labour","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmMaster.chkClosed.Create(CheckBox)
Gui.FrmMaster.chkClosed.Size(2220,300)
Gui.FrmMaster.chkClosed.Position(13500,45)
Gui.FrmMaster.chkClosed.Caption("Closed WOs")
Gui.FrmMaster.chkClosed.Enabled(True)
Gui.FrmMaster.chkClosed.Visible(True)
Gui.FrmMaster.chkClosed.Zorder(1)
Gui.FrmMaster.chkClosed.FontName("Tahoma")
Gui.FrmMaster.chkClosed.FontSize(8.25)
Gui.FrmMaster.chkForce.Create(CheckBox)
Gui.FrmMaster.chkForce.Size(2220,300)
Gui.FrmMaster.chkForce.Position(15000,45)
Gui.FrmMaster.chkForce.Caption("Cache Mode")
Gui.FrmMaster.chkForce.Enabled(True)
Gui.FrmMaster.chkForce.Visible(False)
Gui.FrmMaster.chkForce.Zorder(1)
Gui.FrmMaster.chkForce.FontName("Tahoma")
Gui.FrmMaster.chkForce.FontSize(8.25)
Gui.FrmMaster.cmdCache.Create(Button)
Gui.FrmMaster.cmdCache.Size(2220,300)
Gui.FrmMaster.cmdCache.Position(16500,45)
Gui.FrmMaster.cmdCache.Caption("Load Cache")
Gui.FrmMaster.cmdCache.Enabled(True)
Gui.FrmMaster.cmdCache.Visible(False)
Gui.FrmMaster.cmdCache.Zorder(1)
Gui.FrmMaster.cmdCache.FontName("Tahoma")
Gui.FrmMaster.cmdCache.FontSize(8.25)
Gui.FrmMaster.cmdCache.Event(click,cmdCache_click)
Gui.FrmMaster.lblCache.Create(Label,"timestamp",False,1850,250,0,16500,450,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmMaster.framePermissions.Create(Frame)
Gui.FrmMaster.framePermissions.Size(3390,450)
Gui.FrmMaster.framePermissions.Position(15765,-15)
Gui.FrmMaster.framePermissions.Enabled(True)
Gui.FrmMaster.framePermissions.Visible(True)
Gui.FrmMaster.framePermissions.Zorder(1)
Gui.FrmMaster.framePermissions.Caption("")
Gui.FrmMaster.framePermissions.FontName("Tahoma")
Gui.FrmMaster.framePermissions.FontSize(8.25)
Gui.FrmMaster.optEdit.Create(Option)
Gui.FrmMaster.optEdit.Enabled(False)
Gui.FrmMaster.optEdit.Size(645,270)
Gui.FrmMaster.optEdit.Position(810,150)
Gui.FrmMaster.optEdit.Caption("Edit")
Gui.FrmMaster.optEdit.Parent("framePermissions")
Gui.FrmMaster.optEdit.Visible(True)
Gui.FrmMaster.optEdit.Zorder(1)
Gui.FrmMaster.optEdit.FontName("Tahoma")
Gui.FrmMaster.optEdit.FontSize(8.25)
Gui.FrmMaster.optView.Create(Option)
Gui.FrmMaster.optView.Size(720,240)
Gui.FrmMaster.optView.Position(75,150)
Gui.FrmMaster.optView.Caption("View")
Gui.FrmMaster.optView.Parent("framePermissions")
Gui.FrmMaster.optView.Enabled(True)
Gui.FrmMaster.optView.Visible(True)
Gui.FrmMaster.optView.Zorder(1)
Gui.FrmMaster.optView.FontName("Tahoma")
Gui.FrmMaster.optView.FontSize(8.25)
Gui.FrmMaster.optWiptoFG.Create(Option)
Gui.FrmMaster.optWiptoFG.Size(1110,255)
Gui.FrmMaster.optWiptoFG.Position(2265,150)
Gui.FrmMaster.optWiptoFG.Caption("WIP to FG")
Gui.FrmMaster.optWiptoFG.Enabled(False)
Gui.FrmMaster.optWiptoFG.Parent("framePermissions")
Gui.FrmMaster.optWiptoFG.Visible(True)
Gui.FrmMaster.optWiptoFG.Zorder(1)
Gui.FrmMaster.optWiptoFG.FontName("Tahoma")
Gui.FrmMaster.optWiptoFG.FontSize(8.25)
Gui.FrmMaster.optIssue.Create(Option)
Gui.FrmMaster.optIssue.Size(765,255)
Gui.FrmMaster.optIssue.Position(1470,150)
Gui.FrmMaster.optIssue.Caption("Issue")
Gui.FrmMaster.optIssue.Enabled(False)
Gui.FrmMaster.optIssue.Parent("framePermissions")
Gui.FrmMaster.optIssue.Visible(True)
Gui.FrmMaster.optIssue.Zorder(1)
Gui.FrmMaster.optIssue.FontName("Tahoma")
Gui.FrmMaster.optIssue.FontSize(8.25)
Gui.FrmMaster.cmdSerialize.Create(Button)
Gui.FrmMaster.cmdSerialize.Enabled(True)
Gui.FrmMaster.cmdSerialize.Visible(False)
Gui.FrmMaster.cmdSerialize.Zorder(0)
Gui.FrmMaster.cmdSerialize.Size(1125,345)
Gui.FrmMaster.cmdSerialize.Position(4875,1095)
Gui.FrmMaster.cmdSerialize.Caption("Serialize")
Gui.FrmMaster.cmdSerialize.FontName("Tahoma")
Gui.FrmMaster.cmdSerialize.FontSize(8.25)
Gui.FrmMaster.cmdSerialize.Event(Click,cmdSerialize_Click)
Gui.FrmMaster.cmdDeserialize.Create(Button)
Gui.FrmMaster.cmdDeserialize.Enabled(True)
Gui.FrmMaster.cmdDeserialize.Visible(False)
Gui.FrmMaster.cmdDeserialize.Zorder(0)
Gui.FrmMaster.cmdDeserialize.Size(1125,345)
Gui.FrmMaster.cmdDeserialize.Position(6135,1095)
Gui.FrmMaster.cmdDeserialize.Caption("Deserialize")
Gui.FrmMaster.cmdDeserialize.FontName("Tahoma")
Gui.FrmMaster.cmdDeserialize.FontSize(8.25)
Gui.FrmMaster.cmdDeserialize.Event(Click,cmdDeserialize_Click)
Gui.FrmMaster.cmdSaveOutput.Create(Button)
Gui.FrmMaster.cmdSaveOutput.Enabled(True)
Gui.FrmMaster.cmdSaveOutput.Visible(False)
Gui.FrmMaster.cmdSaveOutput.Zorder(0)
Gui.FrmMaster.cmdSaveOutput.Size(1125,345)
Gui.FrmMaster.cmdSaveOutput.Position(7395,1110)
Gui.FrmMaster.cmdSaveOutput.Caption("Save Output")
Gui.FrmMaster.cmdSaveOutput.FontName("Tahoma")
Gui.FrmMaster.cmdSaveOutput.FontSize(8.25)
Gui.FrmMaster.cmdSaveOutput.Event(Click,cmdSaveOutput_Click)
Gui.FrmMaster.txtCustomer.Create(TextBox,"",True,1725,420,0,6660,45,True,0,"Tahoma",8,,1)
Gui.FrmMaster.txtSO.Create(TextBox,"",True,1785,420,0,9255,60,True,0,"Tahoma",8,,1)
Gui.FrmMaster.cmdBrowseCust.Create(Button)
Gui.FrmMaster.cmdBrowseCust.Enabled(True)
Gui.FrmMaster.cmdBrowseCust.Visible(True)
Gui.FrmMaster.cmdBrowseCust.Zorder(0)
Gui.FrmMaster.cmdBrowseCust.Size(525,345)
Gui.FrmMaster.cmdBrowseCust.Position(8430,45)
Gui.FrmMaster.cmdBrowseCust.Caption("^")
Gui.FrmMaster.cmdBrowseCust.FontName("Tahoma")
Gui.FrmMaster.cmdBrowseCust.FontSize(8)
Gui.FrmMaster.cmdBrowseCust.Event(Click,cmdBrowseCust_Click)
Gui.FrmMaster.cmdBrowseSO.Create(Button)
Gui.FrmMaster.cmdBrowseSO.Enabled(True)
Gui.FrmMaster.cmdBrowseSO.Visible(True)
Gui.FrmMaster.cmdBrowseSO.Zorder(0)
Gui.FrmMaster.cmdBrowseSO.Size(465,345)
Gui.FrmMaster.cmdBrowseSO.Position(11070,45)
Gui.FrmMaster.cmdBrowseSO.Caption("^")
Gui.FrmMaster.cmdBrowseSO.FontName("Tahoma")
Gui.FrmMaster.cmdBrowseSO.FontSize(8)
Gui.FrmMaster.cmdBrowseSO.Event(Click,cmdBrowseSO_Click)
Gui.FrmMaster.cmdProcess.Create(Button)
Gui.FrmMaster.cmdProcess.Enabled(True)
Gui.FrmMaster.cmdProcess.Visible(True)
Gui.FrmMaster.cmdProcess.Zorder(0)
Gui.FrmMaster.cmdProcess.Size(1680,360)
Gui.FrmMaster.cmdProcess.Position(11670,30)
Gui.FrmMaster.cmdProcess.Caption("Process")
Gui.FrmMaster.cmdProcess.FontName("Tahoma")
Gui.FrmMaster.cmdProcess.FontSize(8)
Gui.FrmMaster.cmdProcess.Event(Click,cmdProcess_Click)
Gui.FrmMaster.cmdSelectAll.Create(Button)
Gui.FrmMaster.cmdSelectAll.Enabled(True)
Gui.FrmMaster.cmdSelectAll.Visible(False)
Gui.FrmMaster.cmdSelectAll.Zorder(0)
Gui.FrmMaster.cmdSelectAll.Size(1680,360)
Gui.FrmMaster.cmdSelectAll.Position(13400,30)
Gui.FrmMaster.cmdSelectAll.Caption("Select All")
Gui.FrmMaster.cmdSelectAll.FontName("Tahoma")
Gui.FrmMaster.cmdSelectAll.FontSize(8)
Gui.FrmMaster.cmdSelectAll.Event(Click,cmdSelectAll_Click)
Gui.FrmMaster.lookupVendor.Create(Lookup)
Gui.FrmMaster.lookupVendor.Enabled(True)
Gui.FrmMaster.lookupVendor.PopulateMode(4)
Gui.FrmMaster.lookupVendor.Title("GSS Lookup")
Gui.FrmMaster.lookupVendor.StringBasis("")
Gui.FrmMaster.lookupVendor.FileBasis("")
Gui.FrmMaster.lookupVendor.ColumnDelim("")
Gui.FrmMaster.lookupVendor.RowDelim("")
Gui.FrmMaster.lookupVendor.PreferredStyle(1)
Gui.FrmMaster.lookupVendor.Event(SelectionMade,lookupVendor_SelectionMade)
Gui.FrmMaster.lookupVendorOut.Create(Lookup)
Gui.FrmMaster.lookupVendorOut.Enabled(True)
Gui.FrmMaster.lookupVendorOut.PopulateMode(4)
Gui.FrmMaster.lookupVendorOut.Title("GSS Lookup")
Gui.FrmMaster.lookupVendorOut.StringBasis("")
Gui.FrmMaster.lookupVendorOut.FileBasis("")
Gui.FrmMaster.lookupVendorOut.ColumnDelim("")
Gui.FrmMaster.lookupVendorOut.RowDelim("")
Gui.FrmMaster.lookupVendorOut.PreferredStyle(1)
Gui.FrmMaster.lookupVendorOut.Event(SelectionMade,lookupVendorOut_SelectionMade)
Gui.frmMulti..Create(BaseForm)
Gui.frmMulti..Caption("Work Order: ")
Gui.frmMulti..Size(7845,7230)
Gui.frmMulti..MinX(0)
Gui.frmMulti..MinY(0)
Gui.frmMulti..Position(0,0)
Gui.frmMulti..BackColor(-2147483633)
Gui.frmMulti..MousePointer(0)
Gui.frmMulti..Event(UnLoad,frmMulti_UnLoad)
Gui.frmMulti..AlwaysOnTop(False)
Gui.frmMulti..FontName("Tahoma")
Gui.frmMulti..FontSize(8.25)
Gui.frmMulti..ControlBox(True)
Gui.frmMulti..MaxButton(True)
Gui.frmMulti..MinButton(True)
Gui.frmMulti..Moveable(True)
Gui.frmMulti..Sizeable(True)
Gui.frmMulti..ShowInTaskBar(True)
Gui.frmMulti..TitleBar(True)
Gui.frmMulti.GsGCMulti.Create(GsGridControl)
Gui.frmMulti.GsGCMulti.Size(7710,6930)
Gui.frmMulti.GsGCMulti.Position(0,0)
Gui.frmMulti.GsGCMulti.Enabled(True)
Gui.frmMulti.GsGCMulti.Visible(True)
Gui.frmMulti.GsGCMulti.Zorder(0)
Gui.frmNewWO..Create(BaseForm)
Gui.frmNewWO..Caption("New Work Order")
Gui.frmNewWO..Size(4425,1770)
Gui.frmNewWO..MinX(0)
Gui.frmNewWO..MinY(0)
Gui.frmNewWO..Position(0,0)
Gui.frmNewWO..BackColor(-2147483633)
Gui.frmNewWO..MaxButton(False)
Gui.frmNewWO..MinButton(False)
Gui.frmNewWO..MousePointer(0)
Gui.frmNewWO..Sizeable(False)
Gui.frmNewWO..Event(UnLoad,frmNewWO_UnLoad)
Gui.frmNewWO..AlwaysOnTop(False)
Gui.frmNewWO..FontName("Tahoma")
Gui.frmNewWO..FontSize(8.25)
Gui.frmNewWO..ControlBox(True)
Gui.frmNewWO..Moveable(True)
Gui.frmNewWO..ShowInTaskBar(True)
Gui.frmNewWO..TitleBar(True)
Gui.frmNewWO.cmdManualWO.Create(Button)
Gui.frmNewWO.cmdManualWO.Size(4155,375)
Gui.frmNewWO.cmdManualWO.Position(90,60)
Gui.frmNewWO.cmdManualWO.Caption("New Work Order")
Gui.frmNewWO.cmdManualWO.Event(Click,cmdManualWO_Click)
Gui.frmNewWO.cmdManualWO.Enabled(True)
Gui.frmNewWO.cmdManualWO.Visible(True)
Gui.frmNewWO.cmdManualWO.Zorder(0)
Gui.frmNewWO.cmdManualWO.FontName("Tahoma")
Gui.frmNewWO.cmdManualWO.FontSize(8.25)
Gui.frmNewWO.cmdAutoWO.Create(Button)
Gui.frmNewWO.cmdAutoWO.Size(4170,375)
Gui.frmNewWO.cmdAutoWO.Position(90,480)
Gui.frmNewWO.cmdAutoWO.Caption("Automated Work Order Generation")
Gui.frmNewWO.cmdAutoWO.Event(Click,cmdAutoWO_Click)
Gui.frmNewWO.cmdAutoWO.Enabled(True)
Gui.frmNewWO.cmdAutoWO.Visible(True)
Gui.frmNewWO.cmdAutoWO.Zorder(0)
Gui.frmNewWO.cmdAutoWO.FontName("Tahoma")
Gui.frmNewWO.cmdAutoWO.FontSize(8.25)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.External.Include.Library("2003.lib")
Program.External.Include.Library("175200.lib")
Program.External.Include.Library("450150.lib")
Program.External.Include.Library("450100.lib")
'Program.External.Include.Library("GAB_5657_LIBRARY_V2.lib")
Program.External.Include.Library("GAB_5657_UPLPUROR.lib")
Program.External.Include.Library("JB0455.lib")
V.Global.bExists.Declare
V.Global.iPrintAudit.Declare
V.Global.bLongPart.Declare
V.Global.bLoadData.Declare
v.Global.bCustomMultiPartTrack.Declare
v.Global.bEditWO.Declare(boolean)
v.Global.bEditPart.Declare(boolean)
v.Global.bViewWO.Declare(boolean)
v.Global.bViewPart.Declare(boolean)
v.Global.bReplUpdReschedUtility.Declare(boolean)
v.Global.bIssue.Declare(boolean)
v.Global.bWipToFG.Declare(boolean)
v.Global.bPONotes.Declare(boolean)

v.Global.sSalesPerson.Declare(string)
v.Global.sCustomers.Declare(string)
v.Global.sProjects.Declare(string)
v.Global.sPhases.Declare(string)
v.Global.sSQLQueries.Declare(string)
v.Global.sRows.Declare(string)
v.Global.sCustomer.Declare
v.Global.sSalesOrder.Declare

V.Global.sAllWOFilter.Declare
v.Global.sAllMatFilter.Declare
v.Global.sAllOutFilter.Declare

v.Global.iVendRow.Declare

Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sIcon.Declare
	V.Local.sGssLogo.Declare
	v.Local.sret.Declare
	v.Local.sChkForce.Declare
	
	'Open company connection
	'George Sandoval 9 March 2022 - remove connection timeout
'	F.ODBC.Connection!con.opencompanyconnection(60)
	F.ODBC.Connection!con.opencompanyconnection
	gui.FrmMaster.prgBar.Max(40)
	'Check and make sure custom tables exist
	F.Intrinsic.Control.CallSub(checktable)
	
	'Set anchors and check long part
	F.Intrinsic.Control.CallSub(CheckLongPart)
	
	'Check Print Audit Option
	F.Global.General.ReadOption(400367,3,0000,V.Global.iPrintAudit)

	
	'Load Vendors
	f.Data.DataTable.CreateFromSQL("dtVendors","con","SELECT NAME_VENDOR, VENDOR FROM V_VENDOR_MASTER ORDER BY NAME_VENDOR",true)
	gui.FrmMaster.lookupVendor.DataTableBasis("dtVendors")
	gui.FrmMaster.lookupVendorOut.DataTableBasis("dtVendors")
	
	'Check PO/WO Note Option
	f.ODBC.Connection!con.ExecuteAndReturn("SELECT F_BOOLEAN FROM OP_HEADER WHERE ID='080001' AND SEQUENCE='0001'",v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sret.trim,=,"1")
		v.global.bPONotes.Set(true)
	f.Intrinsic.Control.EndIf
	
	'General Options
	gui.FrmMaster.tabProd.SetTab(0)
	Gui.FrmMaster.optEdit.Value(False)
	Gui.FrmMaster.optView.Value(True)
	Gui.FrmMaster.framePermissions.Anchor(9)
	f.Intrinsic.UI.SetBrowserHotTypeAhead(true)
	
	'Check User Permissions
	f.Intrinsic.Control.CallSub(CheckPermissions)

	'Check if Cache mode is turned on
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"chkForce",5657,1000,6,"",V.Local.sChkForce)
	F.Intrinsic.Control.If(V.Local.sChkForce.Trim,<>,"")
		gui.FrmMaster.chkForce.Value(v.Local.sChkForce)
	F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Local.sChkForce,=,"1")
		f.Intrinsic.Control.CallSub("LoadCache")
	f.Intrinsic.Control.EndIf

	'Show Form and add context menus
	Gui.FrmMaster..Show
	f.Intrinsic.Control.If(v.Caller.User,=,"SUPERVSR")
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVOPER",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvAllM",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvAllO",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
	f.Intrinsic.Control.EndIf
	
	v.Local.sFile.Declare
	v.Local.dDate.Declare
	'f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtall2.xml",v.Local.sFile)
	'f.Intrinsic.File.GetFileDateTime(v.Local.sfile,v.Local.dDate)
	gui.FrmMaster.lblCache.Caption(v.Local.dDate)
	F.Intrinsic.Control.CallSub(SetContextMenus)
	

F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaster_unload)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.PrelimCheck.Start
f.Intrinsic.Control.Try
	v.Local.sret.Declare
	
	'Check PO/WO Note Option
	f.ODBC.Connection!con.ExecuteAndReturn("SELECT F_BOOLEAN FROM OP_HEADER WHERE ID='080001' AND SEQUENCE='0001'",v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sret.trim,=,"1")
		v.global.bPONotes.Set(true)
	f.Intrinsic.Control.EndIf
	
	'Check and make sure custom tables exist
	F.Intrinsic.Control.CallSub(checktable)
	
	'Set anchors and check long part
	F.Intrinsic.Control.CallSub(CheckLongPart)
	
	'Check Print Audit Option
	F.Global.General.ReadOption(400367,3,0000,V.Global.iPrintAudit)
	
	'Load Vendors
	f.Data.DataTable.CreateFromSQL("dtVendors","con","SELECT NAME_VENDOR, VENDOR FROM V_VENDOR_MASTER ORDER BY NAME_VENDOR",true)
	
	'Check User Permissions
	f.Intrinsic.Control.CallSub(CheckPermissions)
	
	'Check for long part
	f.Intrinsic.Control.CallSub(CheckLongPart)
	
f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.PrelimCheck.End

Program.Sub.cleanQuery.Start
f.Intrinsic.Control.Try
	v.Local.sRet.Declare
	v.Local.sRet.Set(v.Args.Query)
	f.Intrinsic.Control.If(v.Args.Active,=,True)
		f.Intrinsic.String.Replace(v.Local.sRet,"C.DATE_CLOSED='1900-01-01'","1=1",v.Local.sRet)
		F.Intrinsic.String.Replace(V.Local.sRet,"E.DATE_CLOSED='1900-01-01'","1=1",v.Local.sRet)
		f.Intrinsic.String.Replace(v.Local.sRet,"DATE_CLOSED = '1900-1-1'","1=1",v.Local.sRet)
		f.Intrinsic.String.Replace(v.Local.sRet,"A.FLAG_CLOSED <> 'Y'","1=1",v.Local.sRet)
		f.Intrinsic.String.Replace(v.Local.sRet,"FLAG_CLOSED <> 'Y'","1=1",v.Local.sRet)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Variable.AddRV("rSQL",v.Local.sRet)
f.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
f.Intrinsic.Control.EndTry
Program.Sub.cleanQuery.End

Program.Sub.CheckTable.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.bTable.Declare(Boolean)

	F.ODBC.Connection!con.TableExists("GAB_4169_WO_NOTES",V.Local.bTable)
	F.Intrinsic.Control.If(v.Local.bTable,=,False)
		F.ODBC.Connection!Con.Execute("CREATE TABLE GAB_4169_WO_NOTES(JOB CHAR(6),SUFFIX CHAR(3),NOTES LONGVARCHAR);")
		F.ODBC.Connection!Con.Execute("CREATE INDEX GAB_4169_WO_NOTES01 USING 1 ON GAB_4169_WO_NOTES(JOB);")
		F.ODBC.Connection!Con.Execute("CREATE INDEX GAB_4169_WO_NOTES02 USING 2 ON GAB_4169_WO_NOTES(SUFFIX);")
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con.TableExists("GAB_4169_WO_NOTESLOG",V.Local.bTable)
	f.Intrinsic.Control.If(v.Local.bTable,=,False)
		F.ODBC.Connection!Con.Execute("CREATE TABLE GAB_4169_WO_NOTESLOG  ( JOB_PO CHAR(7), SUFFIX CHAR(4), NOTES LONGVARCHAR, USERID VARCHAR(8), DATECHANGE DATETIME DEFAULT NOW(), FIELD VARCHAR(50) );")
		f.ODBC.Connection!con.Execute("CREATE INDEX GAB_4169_WO_NOTESL01 USING 1 ON GAB_4169_WO_NOTESLOG ( JOB_PO );")
		f.ODBC.Connection!con.Execute("CREATE INDEX GAB_4169_WO_NOTESL02 USING 2 ON GAB_4169_WO_NOTESLOG ( SUFFIX );")
	f.Intrinsic.Control.EndIf
	
	
	F.ODBC.Connection!con.TableExists("GAB_5657_DTALL",V.Local.bTable)
	f.Intrinsic.Control.If(v.Local.bTable,=,False)
		F.ODBC.Connection!Con.Execute("CREATE TABLE GAB_5657_DTOPER  (SelectWO BIT NOT NULL,DISPLAY_PART LONGVARCHAR,PRINTED BIT NOT NULL,RELEASED BIT NOT NULL,FLAG_HOLD BIT NOT NULL,PrtDocCntrl VARCHAR(20),MaterialIssue VARCHAR(20),WOLabel VARCHAR(20),Seq VARCHAR(6),SEQRES LONGVARCHAR,StartDate DATE,DueDate DATE,SALES_ORDER VARCHAR(7),SALES_ORDER_LINE VARCHAR(4),SALESORDERLINE VARCHAR(11),JobStatus VARCHAR(20),NAME_CUSTOMER VARCHAR(30),CodeSort VARCHAR(30),DISPLAY_PART1 LONGVARCHAR,DESCRIPTION VARCHAR(30),QTY_ORDER DOUBLE,DATE_DUE DATE,CUR_OPER VARCHAR(20),EST_HRS DOUBLE,ACT_HRS DOUBLE,REM_HRS DOUBLE,NEXT_OPER VARCHAR(20),OUTSIDE LONGVARCHAR,DAYS_LATE INTEGER,JobSteps LONGVARCHAR,CUSTOMER_PO VARCHAR(20),PROJECT VARCHAR(7),SALESPERSON VARCHAR(3),PartFriendly LONGVARCHAR,PCS_REM1 DOUBLE,DATE_DUE_FLOAT DATE,DATE_DUE_NO_FLOAT DATE,SCHEDULED_DUE_DATE DATE,DATE_ORIG_DUE DATE,DAYS_LATE_NO_FLOAT DATE,TOT_HRS_REM DOUBLE,DEPT VARCHAR(4),CUR_OPER_DATE DATE,SHIP_TO_OP LONGVARCHAR,WO_NOTE LONGVARCHAR,WO_NOTE2 LONGVARCHAR,PRICE_EXT DOUBLE,AMT_MATERIAL DOUBLE,AMT_LABOR DOUBLE,AMT_OVERHEAD DOUBLE,OUTS DOUBLE,FREIGHT DOUBLE,OTHER DOUBLE,TOTALCOST DOUBLE,CodeSort2 VARCHAR(30),PRIORITY VARCHAR(20),PART LONGVARCHAR,LOCATION VARCHAR(2),PRODUCT_LINE VARCHAR(3),DATE_OPENED DATE,DATE_START DATE,JS VARCHAR(9),IND_FLAG VARCHAR(20),LATE VARCHAR(20),PCS_REM VARCHAR(20) NOT NULL,SOUSER_3 VARCHAR(30),SOUSER_4 VARCHAR(30),SOUSER_5 VARCHAR(30),SONotes LONGVARCHAR,RowChange VARCHAR(50),SODate DATE,SOTerms VARCHAR(20),PHASE VARCHAR(4),JOB VARCHAR(6),SUFFIX VARCHAR(3),AMT_PRICE_PER_UNIT DOUBLE,JSS VARCHAR(15) NOT NULL )")
		F.ODBC.Connection!con.Execute("CREATE TABLE GAB_5657_DTALL  (SelectWO BIT NOT NULL,DISPLAY_PART LONGVARCHAR,PRINTED BIT NOT NULL,RELEASED BIT NOT NULL,FLAG_HOLD BIT NOT NULL,PrtDocCntrl VARCHAR(20),WOLabel VARCHAR(20),MaterialIssue VARCHAR(20),JobStatus VARCHAR(20),NAME_CUSTOMER VARCHAR(30),CodeSort VARCHAR(30),SALES_ORDER VARCHAR(7),SALES_ORDER_LINE VARCHAR(4),SALESORDERLINE VARCHAR(12),CUSTOMER_PO VARCHAR(20),PROJECT VARCHAR(7),SALESPERSON VARCHAR(3),DISPLAY_PART1 VARCHAR(50),PartFriendly VARCHAR(50),DESCRIPTION VARCHAR(30),QTY_ORDER DOUBLE,PCS_REM1 DOUBLE,DATE_DUE DATE,DATE_DUE_FLOAT DATE,DATE_DUE_NO_FLOAT DATE,SCHEDULED_DUE_DATE DATE,DATE_ORIG_DUE DATE,DAYS_LATE INTEGER,DAYS_LATE_NO_FLOAT INTEGER,EST_HRS DOUBLE,ACT_HRS DOUBLE,REM_HRS DOUBLE,TOT_HRS_REM DOUBLE,DEPT VARCHAR(4),CUR_OPER_DATE DATE,JobSteps LONGVARCHAR,CUR_OPER VARCHAR(20),NEXT_OPER VARCHAR(20),OUTSIDE LONGVARCHAR,SHIP_TO_OP LONGVARCHAR,WO_NOTE LONGVARCHAR,WO_NOTE2 LONGVARCHAR,PRICE_EXT DOUBLE,AMT_MATERIAL DOUBLE,AMT_LABOR DOUBLE,AMT_OVERHEAD DOUBLE,OUTS DOUBLE,FREIGHT DOUBLE,OTHER DOUBLE,TOTALCOST DOUBLE,CodeSort2 VARCHAR(100),PRIORITY VARCHAR(10),PART LONGVARCHAR,LOCATION VARCHAR(2),PRODUCT_LINE VARCHAR(2),DATE_OPENED DATE,DATE_START DATE,JS VARCHAR(10) NOT NULL,IND_FLAG BIT NOT NULL,LATE BIT NOT NULL,PCS_REM VARCHAR(20),SOUser_3 VARCHAR(30),SOUser_4 VARCHAR(30),SOUser_5 VARCHAR(30),SONotes LONGVARCHAR,RowChange VARCHAR(10),SODate DATE,SOTerms VARCHAR(20),PHASE VARCHAR(4),JOB VARCHAR(6),SUFFIX VARCHAR(3),AMT_PRICE_PER_UNIT DOUBLE,MyRowID INTEGER )")
	f.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con.TableExists("GAB_6196_MULTI_PART_TRACK",v.Global.bCustomMultiPartTrack)
	
	'Check Index
	f.Intrinsic.Control.CallSub("Check_Index","sTable","Job_Operations","sIndex","JOBOP565701")
	f.Intrinsic.Control.If(v.Args.bExist,=,False)
		f.ODBC.Connection!con.Execute("CREATE INDEX JOBOP565701  ON JOB_OPERATIONS ( FLAG_CLOSED, LMO, SEQ, JOB );")
	f.Intrinsic.Control.EndIf	
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckTable.End

Program.Sub.Check_Index.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	v.Local.bExist.Declare
	
	f.Intrinsic.String.Build("Select Xf$Name As TableName,F1.XE$Name As FieldName,F1.Xe$DataType as DataType FROM X$File INNER JOIN X$Field F1 On F1.XE$File = XF$ID WHERE Xf$Name = '{0}' and F1.XE$Name = '{1}'",v.Args.sTable,v.Args.sIndex,v.Local.sSQL)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF.Not)
		v.Local.bExist.Set(True)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Variable.AddRV("bExist",v.Local.bExist)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		'if any error, assume the index exists
		f.Intrinsic.Variable.AddRV("bExist",True)		
	F.Intrinsic.Control.EndTry	

Program.Sub.Check_Index.End

Program.Sub.CheckLongPart.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	' System Support > Administration > Company Options (Advanced) > Inventory
	'	At the bottom, either Use Long Part (Large Inventory) or Use Long Part (Small Inventory)
	F.Global.General.ReadOption("400861",0,False,"0000",V.Global.bLongPart)
	F.Intrinsic.Control.If(V.Global.bLongPart,=,False)
		F.Global.General.ReadOption("400861",0,False,"0004",V.Global.bLongPart)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckLongPart.End

Program.Sub.ProgramData.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.iCnt.Declare
	V.Local.iProgress.Declare
	v.Local.iMax.Declare
	V.Local.i2.Declare
	v.Local.iHolder.Declare
	v.Local.bActive.Declare
	
	V.Local.sSQL.Declare
	v.Local.sSql2.Declare
	v.Local.sSql3.Declare
	v.Local.sSql4.Declare
	v.Local.sRetVar.Declare
	V.Local.sRet.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	V.Local.sGabpath.Declare
	V.Local.fEstHrs.Declare
	V.Local.fRemHrs.Declare
	V.Local.fPcsRem.Declare
	V.Local.sDept.Declare
	V.Local.sCurOper.Declare
	V.Local.dCurOperDate.Declare
	V.Local.sNextOper.Declare
	V.Local.sOutside.Declare
	v.Local.sfile.Declare
	v.Local.sCMarkFile.Declare
	v.Local.sJobSteps.Declare
	v.Local.sMark.Declare
	v.Local.sFilter.Declare
	v.Local.sMinJob.Declare
	v.Local.sUser4.Declare
	v.Local.sUser5.Declare
	V.Local.sNotes.Declare
	v.Local.sDay.Declare
	v.Local.sMonth.Declare
	v.Local.sYear.Declare
	v.Local.sSeq.Declare
	V.Local.sStep.Declare
	V.Local.sJS.Declare
	V.Local.sXML.Declare
	
	v.Local.dDateFull.Declare
	v.Local.dNewDate.Declare
	v.Local.dNewDateNoFloat.Declare
	v.Local.dNewDateWithFloat.Declare
	v.Local.sCustPO.Declare
	v.Local.sSearch.Declare
	v.Local.sJobStatus.Declare
	v.Local.sFileDt.Declare
	v.Local.x.Declare(long)
	v.Local.lret.Declare
	v.Local.lMax.Declare
	v.Local.iDaysLate.Declare
	v.Local.iDaysLateNoFloat.Declare
	v.Local.iDaysLateRecip.Declare
	v.Local.iDaysLateNoFloatRecip.Declare
	v.Local.iDaysSub.Declare
	v.Local.j.Declare(long)
	v.Local.fTotRemain.Declare
	v.Local.fTotRemainNoFloat.Declare
	v.Local.fTotRemainRecip.Declare
	v.Local.fTotRemainNoFloatRecip.Declare
	v.Local.fTemp.Declare
	
	V.Local.dShipDate.Declare
	V.Local.dDateCheck.Declare(Date,01/01/1900)
	V.Local.bDictExists.Declare

	F.Intrinsic.Control.If(V.DataTable.dtAll.Exists,=,True)
		F.Data.DataTable.Close("dtAll")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.DTALL2.Exists,=,True)
		f.Data.DataTable.Close("dtAll2")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtAllX.Exists,=,True)
		f.Data.DataTable.Close("dtAllX")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtOper.Exists,=,True)
		f.Data.DataTable.Close("dtOper")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtAllO.Exists,=,True)
		f.Data.DataTable.Close("dtAllO")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtAllM.Exists,=,True)
		f.Data.DataTable.Close("dtAllM")
	F.Intrinsic.Control.EndIf
	
'	f.Intrinsic.Control.If(v.DataTable.MO.Exists)
'		f.Data.DataTable.Close("MO")
'	f.Intrinsic.Control.EndIf
'	
'	f.Intrinsic.Control.If(v.Dataview.MO!dvMO.Exists)
'		f.Data.Dataview.Close("MO","dvMO")
'	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.FrmMaster!chkClosed.Value,=,"1")
		v.Local.bActive.Set(True)
	f.Intrinsic.Control.EndIf
	
	'SQL is All Work Orders
	'SQL2 is work centre tab
	'SQL3 is materials purchasing
	'SQL4 is outside process purchasing
	f.Intrinsic.Control.if(v.Args.salesorder.Trim,=,"")
	f.Intrinsic.Control.AndIf(v.Args.Customer.Trim,=,"")
		v.Local.ssql.Set("SELECT CAST(0 AS BIT) AS 'SelectWO', ' ' AS 'DISPLAY_PART', CAST(CASE WHEN FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS PRINTED, CAST(CASE WHEN FLAG_WO_RELEASED = 'Y' THEN 1 ELSE 0 END AS BIT) AS RELEASED, CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD, ' ' as 'PrtDocCntrl', CONCAT(VJH.JOB,CONCAT('-',VJH.SUFFIX)) AS 'WOLabel',  ' ' AS 'MaterialIssue', ' ' AS 'JobStatus', VCM.NAME_CUSTOMER AS NAME_CUSTOMER,  ' ' AS 'CodeSort', if(VJH.SALES_ORDER='0000000','',VJH.SALES_ORDER) AS 'SALES_ORDER', if(VJH.SALES_ORDER_LINE='000','',VJH.SALES_ORDER_LINE) AS 'SALES_ORDER_LINE',  CONCAT(VJH.SALES_ORDER,concat(VJH.SALES_ORDER_LINE,0)) AS 'SALESORDERLINE',  CUSTOMER_PO, VJH.PROJECT, VJH.SALESPERSON, ' ' As DISPLAY_PART, '' AS 'PartFriendly', VJH.PART_DESCRIPTION AS DESCRIPTION, QTY_ORDER, QTY_ORDER - QTY_COMPLETED AS PCS_REM1, DATE_DUE, DATE_DUE-1 AS 'DATE_DUE_NEW', CONVERT('1900-01-01',SQL_DATE) AS 'DATE_DUE_FLOAT', CONVERT('1900-01-01',SQL_DATE) AS 'DATE_DUE_NO_FLOAT', SCHEDULED_DUE_DATE, DATE_ORIG_DUE, CONVERT(0,SQL_FLOAT) AS 'DAYS_LATE', CONVERT(0,SQL_FLOAT) as 'DAYS_LATE_NO_FLOAT',  CONVERT(0.00,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0.00,SQL_FLOAT) AS REM_HRS,CONVERT(0.00,SQL_FLOAT) AS TOT_HRS_REM,' ' AS DEPT, CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE, ' ' as 'JobSteps', ' ' AS CUR_OPER, ' ' AS NEXT_OPER, ' ' AS OUTSIDE, CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP, GWN.NOTES AS 'WO_NOTE', RTRIM(VWUF.USER_1) AS 'User1', RTRIM(VWUF.USER_6) AS 'WO_NOTE2', (VJH.AMT_PRICE_PER_UNIT * QTY_ORDER) AS 'PRICE_EXT', VJH.AMT_MATERIAL, VJH.AMT_LABOR, VJH.AMT_OVERHEAD, VJH.OUTS, VJH.FREIGHT, VJH.OTHER, (VJH.AMT_MATERIAL + VJH.AMT_LABOR + VJH.AMT_OVERHEAD + VJH.OUTS + VJH.FREIGHT + VJH.OTHER) AS 'TOTALCOST', ' ' AS 'CodeSort2', PRIORITY,  RTRIM(COALESCE(VJH.PART,'')) AS PART,VJH.LOCATION,VJH.PRODUCT_LINE, DATE_OPENED,(SELECT TOP 1 VJO.DATE_START FROM V_JOB_OPERATIONS VJO WHERE VJO.LMO = 'L' AND VJO.JOB = VJH.JOB AND VJO.SUFFIX = VJH.SUFFIX AND VJO.SEQ < '990000') AS DATE_START, CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS LATE,'' AS PCS_REM, '' as 'SOUSER_3', '' as 'SOUSER_4', '' as 'SOUSER_5', '' as 'SONotes', '' AS 'RowChange', CONVERT('1900-01-01',SQL_DATE) as 'SODate', ' ' as 'SOTerms', VJH.PHASE, VJH.JOB, VJH.SUFFIX, VJH.AMT_PRICE_PER_UNIT FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER  LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO WHERE DATE_CLOSED = '1900-1-1' AND LEFT(VJH.JOB,1)<>'Z'  ORDER BY WOLabel, DATE_DUE;")
		v.Local.ssql2.Set("SELECT CAST(0 AS BIT) AS 'SelectWO',' ' AS 'DISPLAY_PART',CAST(CASE WHEN FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS PRINTED, CAST(CASE WHEN FLAG_WO_RELEASED = 'Y' THEN 1 ELSE 0 END AS BIT) AS RELEASED, CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD, ' ' as 'PrtDocCntrl', ' ' AS 'MaterialIssue', CONCAT(VJH.JOB,CONCAT('-',VJH.SUFFIX)) AS 'WOLabel', APS.SEQ, RTRIM(APS.SEQRES) AS 'SEQRES', APS.StartDate, APS.DueDate, if(VJH.SALES_ORDER='0000000','',VJH.SALES_ORDER) AS 'SALES_ORDER', if(VJH.SALES_ORDER_LINE='000','',VJH.SALES_ORDER_LINE) AS 'SALES_ORDER_LINE',   CONCAT(VJH.SALES_ORDER,concat(VJH.SALES_ORDER_LINE,0)) AS 'SALESORDERLINE', ' ' AS 'JobStatus', VCM.NAME_CUSTOMER AS NAME_CUSTOMER,  ' ' AS 'CodeSort', ' ' As DISPLAY_PART, VJH.PART_DESCRIPTION AS DESCRIPTION, QTY_ORDER, DATE_DUE, ' ' AS CUR_OPER, (InitSU+HoursOrig) AS EST_HRS, HoursAppl AS ACT_HRS, (InitSU+HoursOrig) - HoursAppl AS REM_HRS, ' ' AS NEXT_OPER, ' ' AS OUTSIDE, CONVERT(0,SQL_FLOAT) AS 'DAYS_LATE', ' ' as 'JobSteps', CUSTOMER_PO, VJH.PROJECT, VJH.SALESPERSON, '' AS 'PartFriendly', QTY_ORDER - QTY_COMPLETED AS PCS_REM1, CONVERT('1900-01-01',SQL_DATE) AS 'DATE_DUE_FLOAT', CONVERT('1900-01-01',SQL_DATE) AS 'DATE_DUE_NO_FLOAT', SCHEDULED_DUE_DATE, DATE_ORIG_DUE, CONVERT(0,SQL_FLOAT) as 'DAYS_LATE_NO_FLOAT', CONVERT(0.00,SQL_FLOAT) AS TOT_HRS_REM,' ' AS DEPT, CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE,   CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP, GWN.NOTES AS 'WO_NOTE',RTRIM(VWUF.USER_1) AS 'User1', RTRIM(VWUF.USER_6) AS 'WO_NOTE2', (VJH.AMT_PRICE_PER_UNIT * QTY_ORDER) AS 'PRICE_EXT', VJH.AMT_MATERIAL, VJH.AMT_LABOR, VJH.AMT_OVERHEAD, VJH.OUTS, VJH.FREIGHT, VJH.OTHER, (VJH.AMT_MATERIAL + VJH.AMT_LABOR + VJH.AMT_OVERHEAD + VJH.OUTS + VJH.FREIGHT + VJH.OTHER) AS 'TOTALCOST', ' ' AS 'CodeSort2', PRIORITY,  RTRIM(COALESCE(VJH.PART,'')) AS PART,VJH.LOCATION,VJH.PRODUCT_LINE, DATE_OPENED,(SELECT TOP 1 VJO.DATE_START FROM V_JOB_OPERATIONS VJO WHERE VJO.LMO = 'L' AND VJO.JOB = VJH.JOB AND VJO.SUFFIX = VJH.SUFFIX AND VJO.SEQ < '990000') AS DATE_START, CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS LATE,'' AS PCS_REM,  '' as 'SOUSER_3', '' as 'SOUSER_4', '' as 'SOUSER_5', '' as 'SONotes', '' AS 'RowChange', CONVERT('1900-01-01',SQL_DATE) as 'SODate', ' ' as 'SOTerms', VJH.PHASE, VJH.JOB, VJH.SUFFIX, VJH.AMT_PRICE_PER_UNIT, APS.JSS FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER  LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO LEFT JOIN APSV3_JBLines APS ON VJH.JOB = APS.JOB AND VJH.SUFFIX = APS.SFX AND APS.SEQTYPE = 1 AND IFNULL(APS.COMPLDATE,'1900-01-01')='1900-01-01' WHERE DATE_CLOSED = '1900-1-1' AND LEFT(VJH.JOB,1)<>'Z'  ORDER BY WOLabel, SEQ, DATE_DUE")
		v.Local.ssql3.Set("SELECT DISTINCT A.LMO,CAST(0 AS BIT) AS 'SelectWO',' ' AS 'DISPLAY_PART', ' ' as 'PrtDocCntrl',  C.DATE_DUE, ' ' AS 'CUR_OPER', ' ' AS 'MaterialIssue', ' ' AS 'MaterialManage', ' ' AS 'JobStatus', CONCAT(A.JOB,CONCAT('-',rtrim(A.SUFFIX))) AS 'WOLabel', C.SALES_ORDER, C.SALES_ORDER_LINE, CONCAT(C.SALES_ORDER,C.SALES_ORDER_LINE) AS 'SALESORDERLINE', RTRIM(C.PART) AS 'Part', C.PART_DESCRIPTION, ' ' AS 'CodeSort', A.SEQ, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'DISPLAY_MAT', RTRIM(A.PART) as 'MatPart',  IFNULL(D.PRODUCT_LINE,'') AS 'PL', IFNULL(D.code_sort,'') AS 'InvCodeSort', A.DESCRIPTION AS DESCR, IF(F.CODE_SOURCE='P','PS',IF(F.CODE_SOURCE='J','PJ','PJ')) AS 'CODE_SOURCE', A.BURDEN, B.PCSTOPROD, IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND, B.PCSCOMPL,  (B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN, IFNULL(RTRIM(E.VENDOR),(SELECT RTRIM(NAME_VENDOR) FROM V_INVENTORY_ALL Y WHERE D.PART=Y.PART and D.LOCATION = Y.LOCATION)) AS 'VENDOR',IFNULL(E.VENDOR,A.OPERATION) AS 'OutsideVENDOR', 'BROWSE' AS 'VendorSearch',  '' AS 'VendorName', IF(A.LEAD_TIME=0,0,A.LEAD_TIME/40) AS 'LEAD_TIME', '' as 'PartFriendly', E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,If(IsNull(G.TEXT,'') <> '',G.TEXT,W.Text) as Text, CONCAT(PURCHASE_ORDER,LEFT(E.RECORD_NO,3)) AS 'POANDLINE',  CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE, IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE, A.DATE_DUE AS 'LINEDUE', D.AMT_COST, D.AMT_ALT_COST, IF(RTRIM(D.UM_PURCHASING)='',D.UM_INVENTORY,D.UM_PURCHASING) AS 'PURUM', IFNULL(E.COST,(SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST) FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART AND Z.LOCATION=D.LOCATION)) AS 'COST', IFNULL(E.Extension, (SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST)*B.PCSTOPROD FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART AND Z.LOCATION=D.LOCATION)) AS 'EXTENSION',' ' as 'JobSteps', CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, A.JOB, A.SUFFIX, C.LOCATION FROM V_JOB_OPERATIONS A LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN INVENTORY_MST2 F ON A.PART = F.PART AND C.LOCATION = F.LOCATION LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE LEFT JOIN PO_LN_TEXT G ON E.PURCHASE_ORDER = G.PO_NUM AND E.RECORD_NO = G.LINE left join WO_Seq_Comments w on A.Job = w.WO and  A.Suffix = w.WO_Suffix and A.seq = w.WO_Seq WHERE A.FLAG_CLOSED <> 'Y'  AND A.LMO in ('M','O') AND (A.SEQ NOT IN ('995000','998000') AND LEFT(A.SEQ,1)<>'9' ) AND LEFT(A.JOB,1)<>  'Z'  AND  C.DATE_CLOSED='1900-01-01'  AND PL<>'53' ORDER BY A.SEQ;")		
		V.Local.sSql4.Set("SELECT DISTINCT CAST(0 AS BIT) AS 'SelectWO',' ' AS 'DISPLAY_PART', ' ' as 'PrtDocCntrl',  C.DATE_DUE, ' ' AS 'CUR_OPER', ' ' AS 'MaterialIssue', ' ' AS 'MaterialManage', ' ' AS 'JobStatus', CONCAT(A.JOB,CONCAT('-',rtrim(A.SUFFIX))) AS 'WOLabel', C.SALES_ORDER, C.SALES_ORDER_LINE, CONCAT(C.SALES_ORDER,C.SALES_ORDER_LINE) AS 'SALESORDERLINE', RTRIM(C.PART) AS 'Part', C.PART_DESCRIPTION, ' ' AS 'CodeSort', A.SEQ, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'DISPLAY_MAT', RTRIM(A.PART) as 'MatPart',  IFNULL(D.PRODUCT_LINE,C.PRODUCT_LINE) AS 'PL', A.DESCRIPTION AS DESCR, IF(F.CODE_SOURCE='P','PS',IF(F.CODE_SOURCE='J','PJ','PJ')) AS 'CODE_SOURCE', A.BURDEN, B.PCSTOPROD, IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND, B.PCSCOMPL,  (B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN, IFNULL(E.VENDOR,A.OPERATION) AS 'VENDOR', 'BROWSE' AS 'VendorSearch',  '' AS 'VendorName', IF(A.LEAD_TIME=0,0,A.LEAD_TIME/40) AS 'LEAD_TIME', '' as 'PartFriendly', E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,G.TEXT,  CONCAT(PURCHASE_ORDER,LEFT(E.RECORD_NO,3)) AS 'POANDLINE', IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE, A.DATE_DUE AS 'LINEDUE',  CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE, D.AMT_COST, D.AMT_ALT_COST, IF(RTRIM(D.UM_PURCHASING)='',D.UM_INVENTORY,D.UM_PURCHASING) AS 'PURUM', IFNULL(E.COST,(SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST) FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART)) AS 'COST', IFNULL(E.Extension, (SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST)*B.PCSTOPROD FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART)) AS 'EXTENSION',' ' as 'JobSteps', CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, A.JOB, A.SUFFIX, C.LOCATION FROM V_JOB_OPERATIONS A LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN INVENTORY_MST2 F ON A.PART = F.PART AND C.LOCATION = F.LOCATION LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE LEFT JOIN PO_LN_TEXT G ON E.PURCHASE_ORDER = G.PO_NUM AND E.RECORD_NO = G.LINE WHERE A.LMO = 'O' AND A.SEQ NOT IN ('995000','998000') AND C.DATE_CLOSED='1900-01-01' AND LEFT(A.JOB,1)<>'Z' AND FLAG_CLOSED <> 'Y' AND PL<>'53' AND LEFT(A.SEQ,1)<>'9' ORDER BY A.SEQ")
	f.Intrinsic.Control.elseIf(v.Args.SalesOrder.Trim,=,"")
		F.Intrinsic.String.Build("SELECT CAST(0 AS BIT) AS 'SelectWO',' ' AS 'DISPLAY_PART',CAST(CASE WHEN FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS PRINTED, CAST(CASE WHEN FLAG_WO_RELEASED = 'Y' THEN 1 ELSE 0 END AS BIT) AS RELEASED, CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD, ' ' as 'PrtDocCntrl', ' ' AS 'MaterialIssue', CONCAT(VJH.JOB,CONCAT('-',VJH.SUFFIX)) AS 'WOLabel', APS.SEQ, RTRIM(APS.SEQRES) AS 'SEQRES', APS.StartDate, APS.DueDate, if(VJH.SALES_ORDER='0000000','',VJH.SALES_ORDER) AS 'SALES_ORDER', if(VJH.SALES_ORDER_LINE='000','',VJH.SALES_ORDER_LINE) AS 'SALES_ORDER_LINE',   CONCAT(VJH.SALES_ORDER,concat(VJH.SALES_ORDER_LINE,0)) AS 'SALESORDERLINE', ' ' AS 'JobStatus', VCM.NAME_CUSTOMER AS NAME_CUSTOMER,  ' ' AS 'CodeSort', ' ' As DISPLAY_PART, VJH.PART_DESCRIPTION AS DESCRIPTION, QTY_ORDER, DATE_DUE, ' ' AS CUR_OPER, (InitSU+HoursOrig) AS EST_HRS, HoursAppl AS ACT_HRS, (InitSU+HoursOrig) - HoursAppl AS REM_HRS, ' ' AS NEXT_OPER, ' ' AS OUTSIDE, CONVERT(0,SQL_FLOAT) AS 'DAYS_LATE', ' ' as 'JobSteps', CUSTOMER_PO, VJH.PROJECT, VJH.SALESPERSON, '' AS 'PartFriendly', QTY_ORDER - QTY_COMPLETED AS PCS_REM1, CONVERT('1900-01-01',SQL_DATE) AS 'DATE_DUE_FLOAT', CONVERT('1900-01-01',SQL_DATE) AS 'DATE_DUE_NO_FLOAT', SCHEDULED_DUE_DATE, DATE_ORIG_DUE, CONVERT(0,SQL_FLOAT) as 'DAYS_LATE_NO_FLOAT', CONVERT(0.00,SQL_FLOAT) AS TOT_HRS_REM,' ' AS DEPT, CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE,   CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP, GWN.NOTES AS 'WO_NOTE',RTRIM(VWUF.USER_1) AS 'User1', RTRIM(VWUF.USER_6) AS 'WO_NOTE2', (VJH.AMT_PRICE_PER_UNIT * QTY_ORDER) AS 'PRICE_EXT', VJH.AMT_MATERIAL, VJH.AMT_LABOR, VJH.AMT_OVERHEAD, VJH.OUTS, VJH.FREIGHT, VJH.OTHER, (VJH.AMT_MATERIAL + VJH.AMT_LABOR + VJH.AMT_OVERHEAD + VJH.OUTS + VJH.FREIGHT + VJH.OTHER) AS 'TOTALCOST', ' ' AS 'CodeSort2', PRIORITY,  RTRIM(COALESCE(VJH.PART,'')) AS PART,VJH.LOCATION,VJH.PRODUCT_LINE, DATE_OPENED,(SELECT TOP 1 VJO.DATE_START FROM V_JOB_OPERATIONS VJO WHERE VJO.LMO = 'L' AND VJO.JOB = VJH.JOB AND VJO.SUFFIX = VJH.SUFFIX AND VJO.SEQ < '990000') AS DATE_START, CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS LATE,'' AS PCS_REM,  '' as 'SOUSER_3', '' as 'SOUSER_4', '' as 'SOUSER_5', '' as 'SONotes', '' AS 'RowChange', CONVERT('1900-01-01',SQL_DATE) as 'SODate', ' ' as 'SOTerms', VJH.PHASE, VJH.JOB, VJH.SUFFIX, VJH.AMT_PRICE_PER_UNIT, APS.JSS FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER  LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO LEFT JOIN APSV3_JBLines APS ON VJH.JOB = APS.JOB AND VJH.SUFFIX = APS.SFX AND APS.SEQTYPE = 1 AND IFNULL(APS.COMPLDATE,'1900-01-01')='1900-01-01' WHERE DATE_CLOSED = '1900-1-1' AND LEFT(VJH.JOB,1)<>'Z' AND VJH.Customer='{0}' ORDER BY WOLabel, SEQ, DATE_DUE",v.Args.Customer,v.Local.ssql2)
		F.Intrinsic.String.Build("SELECT DISTINCT A.LMO,CAST(0 AS BIT) AS 'SelectWO',' ' AS 'DISPLAY_PART', ' ' as 'PrtDocCntrl',  C.DATE_DUE, ' ' AS 'CUR_OPER', ' ' AS 'MaterialIssue', ' ' AS 'MaterialManage', ' ' AS 'JobStatus', CONCAT(A.JOB,CONCAT('-',rtrim(A.SUFFIX))) AS 'WOLabel', C.SALES_ORDER, C.SALES_ORDER_LINE, CONCAT(C.SALES_ORDER,C.SALES_ORDER_LINE) AS 'SALESORDERLINE', RTRIM(C.PART) AS 'Part', C.PART_DESCRIPTION, ' ' AS 'CodeSort', A.SEQ, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'DISPLAY_MAT', RTRIM(A.PART) as 'MatPart',  IFNULL(D.PRODUCT_LINE,'') AS 'PL', IFNULL(D.code_sort,'') AS 'InvCodeSort', A.DESCRIPTION AS DESCR, IF(F.CODE_SOURCE='P','PS',IF(F.CODE_SOURCE='J','PJ','PJ')) AS 'CODE_SOURCE', A.BURDEN, B.PCSTOPROD, IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND, B.PCSCOMPL,  (B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN, IFNULL(RTRIM(E.VENDOR),(SELECT RTRIM(NAME_VENDOR) FROM V_INVENTORY_ALL Y WHERE D.PART=Y.PART and D.LOCATION = Y.LOCATION)) AS 'VENDOR',IFNULL(E.VENDOR,A.OPERATION) AS 'OutsideVENDOR', 'BROWSE' AS 'VendorSearch',  '' AS 'VendorName', IF(A.LEAD_TIME=0,0,A.LEAD_TIME/40) AS 'LEAD_TIME', '' as 'PartFriendly', E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,If(IsNull(G.TEXT,'') <> '',G.TEXT,W.Text) as Text, CONCAT(PURCHASE_ORDER,LEFT(E.RECORD_NO,3)) AS 'POANDLINE', CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE, IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE, A.DATE_DUE AS 'LINEDUE', D.AMT_COST, D.AMT_ALT_COST, IF(RTRIM(D.UM_PURCHASING)='',D.UM_INVENTORY,D.UM_PURCHASING) AS 'PURUM', IFNULL(E.COST,(SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST) FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART AND Z.LOCATION=D.LOCATION)) AS 'COST', IFNULL(E.Extension, (SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST)*B.PCSTOPROD FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART AND Z.LOCATION=D.LOCATION)) AS 'EXTENSION',' ' as 'JobSteps', CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, A.JOB, A.SUFFIX, C.LOCATION FROM V_JOB_OPERATIONS A LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN INVENTORY_MST2 F ON A.PART = F.PART AND C.LOCATION = F.LOCATION LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE LEFT JOIN PO_LN_TEXT G ON E.PURCHASE_ORDER = G.PO_NUM AND E.RECORD_NO = G.LINE left join WO_Seq_Comments w on A.Job = w.WO and  A.Suffix = w.WO_Suffix and A.seq = w.WO_Seq WHERE A.FLAG_CLOSED <> 'Y'  AND A.LMO in ('M','O') AND (A.SEQ NOT IN ('995000','998000') AND LEFT(A.SEQ,1)<>'9' ) AND LEFT(A.JOB,1)<>  'Z'  AND  C.DATE_CLOSED='1900-01-01'  AND PL<>'53' AND C.CUSTOMER='{0}' ORDER BY A.SEQ;",v.Args.Customer,v.Local.ssql3)
		F.Intrinsic.String.Build("SELECT DISTINCT CAST(0 AS BIT) AS 'SelectWO',' ' AS 'DISPLAY_PART', ' ' as 'PrtDocCntrl',  C.DATE_DUE, ' ' AS 'CUR_OPER', ' ' AS 'MaterialIssue', ' ' AS 'MaterialManage', ' ' AS 'JobStatus', CONCAT(A.JOB,CONCAT('-',rtrim(A.SUFFIX))) AS 'WOLabel', C.SALES_ORDER, C.SALES_ORDER_LINE, CONCAT(C.SALES_ORDER,C.SALES_ORDER_LINE) AS 'SALESORDERLINE', RTRIM(C.PART) AS 'Part', C.PART_DESCRIPTION, ' ' AS 'CodeSort', A.SEQ, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'DISPLAY_MAT', RTRIM(A.PART) as 'MatPart',  IFNULL(D.PRODUCT_LINE,C.PRODUCT_LINE) AS 'PL', A.DESCRIPTION AS DESCR, IF(F.CODE_SOURCE='P','PS',IF(F.CODE_SOURCE='J','PJ','PJ')) AS 'CODE_SOURCE', A.BURDEN, B.PCSTOPROD, IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND, B.PCSCOMPL,  (B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN, IFNULL(E.VENDOR,A.OPERATION) AS 'VENDOR', 'BROWSE' AS 'VendorSearch',  '' AS 'VendorName', IF(A.LEAD_TIME=0,0,A.LEAD_TIME/40) AS 'LEAD_TIME', '' as 'PartFriendly', E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,G.TEXT,  CONCAT(PURCHASE_ORDER,LEFT(E.RECORD_NO,3)) AS 'POANDLINE', IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE, A.DATE_DUE AS 'LINEDUE',  CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE, D.AMT_COST, D.AMT_ALT_COST, IF(RTRIM(D.UM_PURCHASING)='',D.UM_INVENTORY,D.UM_PURCHASING) AS 'PURUM', IFNULL(E.COST,(SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST) FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART)) AS 'COST', IFNULL(E.Extension, (SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST)*B.PCSTOPROD FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART)) AS 'EXTENSION',' ' as 'JobSteps', CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, A.JOB, A.SUFFIX, C.LOCATION FROM V_JOB_OPERATIONS A LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN INVENTORY_MST2 F ON A.PART = F.PART AND C.LOCATION = F.LOCATION LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE LEFT JOIN PO_LN_TEXT G ON E.PURCHASE_ORDER = G.PO_NUM AND E.RECORD_NO = G.LINE WHERE A.LMO = 'O' AND A.SEQ NOT IN ('995000','998000') AND C.DATE_CLOSED='1900-01-01' AND LEFT(A.JOB,1)<>'Z' AND FLAG_CLOSED <> 'Y' AND PL<>'53' AND LEFT(A.SEQ,1)<>'9' AND VJH.CUSTOMER='{0}' ORDER BY A.SEQ",v.Args.Customer,v.Local.ssql4)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("SELECT CAST(0 AS BIT) AS 'SelectWO', ' ' AS 'DISPLAY_PART', CAST(CASE WHEN FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS PRINTED, CAST(CASE WHEN FLAG_WO_RELEASED = 'Y' THEN 1 ELSE 0 END AS BIT) AS RELEASED, CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD, ' ' as 'PrtDocCntrl', CONCAT(VJH.JOB,CONCAT('-',VJH.SUFFIX)) AS 'WOLabel',  ' ' AS 'MaterialIssue', ' ' AS 'JobStatus', VCM.NAME_CUSTOMER AS NAME_CUSTOMER,  ' ' AS 'CodeSort', if(VJH.SALES_ORDER='0000000','',VJH.SALES_ORDER) AS 'SALES_ORDER', if(VJH.SALES_ORDER_LINE='000','',VJH.SALES_ORDER_LINE) AS 'SALES_ORDER_LINE',  CONCAT(VJH.SALES_ORDER,concat(VJH.SALES_ORDER_LINE,0)) AS 'SALESORDERLINE',  CUSTOMER_PO, VJH.PROJECT, VJH.SALESPERSON, ' ' As DISPLAY_PART, '' AS 'PartFriendly', VJH.PART_DESCRIPTION AS DESCRIPTION, QTY_ORDER, QTY_ORDER - QTY_COMPLETED AS PCS_REM1, DATE_DUE, DATE_DUE-1 AS 'DATE_DUE_NEW', CONVERT('1900-01-01',SQL_DATE) AS 'DATE_DUE_FLOAT', CONVERT('1900-01-01',SQL_DATE) AS 'DATE_DUE_NO_FLOAT', SCHEDULED_DUE_DATE, DATE_ORIG_DUE, CONVERT(0,SQL_FLOAT) AS 'DAYS_LATE', CONVERT(0,SQL_FLOAT) as 'DAYS_LATE_NO_FLOAT',  CONVERT(0.00,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0.00,SQL_FLOAT) AS REM_HRS,CONVERT(0.00,SQL_FLOAT) AS TOT_HRS_REM,' ' AS DEPT, CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE, ' ' as 'JobSteps', ' ' AS CUR_OPER, ' ' AS NEXT_OPER, ' ' AS OUTSIDE, CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP, GWN.NOTES AS 'WO_NOTE', RTRIM(VWUF.USER_1) AS 'User1', RTRIM(VWUF.USER_6) AS 'WO_NOTE2', (VJH.AMT_PRICE_PER_UNIT * QTY_ORDER) AS 'PRICE_EXT', VJH.AMT_MATERIAL, VJH.AMT_LABOR, VJH.AMT_OVERHEAD, VJH.OUTS, VJH.FREIGHT, VJH.OTHER, (VJH.AMT_MATERIAL + VJH.AMT_LABOR + VJH.AMT_OVERHEAD + VJH.OUTS + VJH.FREIGHT + VJH.OTHER) AS 'TOTALCOST', ' ' AS 'CodeSort2', PRIORITY,  RTRIM(COALESCE(VJH.PART,'')) AS PART,VJH.LOCATION,VJH.PRODUCT_LINE, DATE_OPENED,(SELECT TOP 1 VJO.DATE_START FROM V_JOB_OPERATIONS VJO WHERE VJO.LMO = 'L' AND VJO.JOB = VJH.JOB AND VJO.SUFFIX = VJH.SUFFIX AND VJO.SEQ < '990000') AS DATE_START, CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS LATE,'' AS PCS_REM, '' as 'SOUSER_3', '' as 'SOUSER_4', '' as 'SOUSER_5', '' as 'SONotes', '' AS 'RowChange', CONVERT('1900-01-01',SQL_DATE) as 'SODate', ' ' as 'SOTerms', VJH.PHASE, VJH.JOB, VJH.SUFFIX, VJH.AMT_PRICE_PER_UNIT FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER  LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO WHERE DATE_CLOSED = '1900-1-1' AND LEFT(VJH.JOB,1)<>'Z' AND VJH.CUSTOMER='{0}' AND VJH.SALES_ORDER='{1}' ORDER BY WOLabel, DATE_DUE;",v.Args.Customer,V.Args.SalesOrder,v.Local.ssql)
		F.Intrinsic.String.Build("SELECT CAST(0 AS BIT) AS 'SelectWO',' ' AS 'DISPLAY_PART',CAST(CASE WHEN FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS PRINTED, CAST(CASE WHEN FLAG_WO_RELEASED = 'Y' THEN 1 ELSE 0 END AS BIT) AS RELEASED, CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD, ' ' as 'PrtDocCntrl', ' ' AS 'MaterialIssue', CONCAT(VJH.JOB,CONCAT('-',VJH.SUFFIX)) AS 'WOLabel', APS.SEQ, RTRIM(APS.SEQRES) AS 'SEQRES', APS.StartDate, APS.DueDate, if(VJH.SALES_ORDER='0000000','',VJH.SALES_ORDER) AS 'SALES_ORDER', if(VJH.SALES_ORDER_LINE='000','',VJH.SALES_ORDER_LINE) AS 'SALES_ORDER_LINE',   CONCAT(VJH.SALES_ORDER,concat(VJH.SALES_ORDER_LINE,0)) AS 'SALESORDERLINE', ' ' AS 'JobStatus', VCM.NAME_CUSTOMER AS NAME_CUSTOMER,  ' ' AS 'CodeSort', ' ' As DISPLAY_PART, VJH.PART_DESCRIPTION AS DESCRIPTION, QTY_ORDER, DATE_DUE, ' ' AS CUR_OPER, (InitSU+HoursOrig) AS EST_HRS, HoursAppl AS ACT_HRS, (InitSU+HoursOrig) - HoursAppl AS REM_HRS, ' ' AS NEXT_OPER, ' ' AS OUTSIDE, CONVERT(0,SQL_FLOAT) AS 'DAYS_LATE', ' ' as 'JobSteps', CUSTOMER_PO, VJH.PROJECT, VJH.SALESPERSON, '' AS 'PartFriendly', QTY_ORDER - QTY_COMPLETED AS PCS_REM1, CONVERT('1900-01-01',SQL_DATE) AS 'DATE_DUE_FLOAT', CONVERT('1900-01-01',SQL_DATE) AS 'DATE_DUE_NO_FLOAT', SCHEDULED_DUE_DATE, DATE_ORIG_DUE, CONVERT(0,SQL_FLOAT) as 'DAYS_LATE_NO_FLOAT', CONVERT(0.00,SQL_FLOAT) AS TOT_HRS_REM,' ' AS DEPT, CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE,   CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP, GWN.NOTES AS 'WO_NOTE',RTRIM(VWUF.USER_1) AS 'User1', RTRIM(VWUF.USER_6) AS 'WO_NOTE2', (VJH.AMT_PRICE_PER_UNIT * QTY_ORDER) AS 'PRICE_EXT', VJH.AMT_MATERIAL, VJH.AMT_LABOR, VJH.AMT_OVERHEAD, VJH.OUTS, VJH.FREIGHT, VJH.OTHER, (VJH.AMT_MATERIAL + VJH.AMT_LABOR + VJH.AMT_OVERHEAD + VJH.OUTS + VJH.FREIGHT + VJH.OTHER) AS 'TOTALCOST', ' ' AS 'CodeSort2', PRIORITY,  RTRIM(COALESCE(VJH.PART,'')) AS PART,VJH.LOCATION,VJH.PRODUCT_LINE, DATE_OPENED,(SELECT TOP 1 VJO.DATE_START FROM V_JOB_OPERATIONS VJO WHERE VJO.LMO = 'L' AND VJO.JOB = VJH.JOB AND VJO.SUFFIX = VJH.SUFFIX AND VJO.SEQ < '990000') AS DATE_START, CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS LATE,'' AS PCS_REM,  '' as 'SOUSER_3', '' as 'SOUSER_4', '' as 'SOUSER_5', '' as 'SONotes', '' AS 'RowChange', CONVERT('1900-01-01',SQL_DATE) as 'SODate', ' ' as 'SOTerms', VJH.PHASE, VJH.JOB, VJH.SUFFIX, VJH.AMT_PRICE_PER_UNIT, APS.JSS FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER  LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO LEFT JOIN APSV3_JBLines APS ON VJH.JOB = APS.JOB AND VJH.SUFFIX = APS.SFX AND APS.SEQTYPE = 1 AND IFNULL(APS.COMPLDATE,'1900-01-01')='1900-01-01' WHERE DATE_CLOSED = '1900-1-1' AND LEFT(VJH.JOB,1)<>'Z' AND VJH.Customer='{0}' AND VJH.SALES_ORDER='{1}' ORDER BY WOLabel, SEQ, DATE_DUE",v.Args.Customer,V.Args.SalesOrder,v.Local.ssql2)
		F.Intrinsic.String.Build("SELECT DISTINCT A.LMO,CAST(0 AS BIT) AS 'SelectWO',' ' AS 'DISPLAY_PART', ' ' as 'PrtDocCntrl',  C.DATE_DUE, ' ' AS 'CUR_OPER', ' ' AS 'MaterialIssue', ' ' AS 'MaterialManage', ' ' AS 'JobStatus', CONCAT(A.JOB,CONCAT('-',rtrim(A.SUFFIX))) AS 'WOLabel', C.SALES_ORDER, C.SALES_ORDER_LINE, CONCAT(C.SALES_ORDER,C.SALES_ORDER_LINE) AS 'SALESORDERLINE', RTRIM(C.PART) AS 'Part', C.PART_DESCRIPTION, ' ' AS 'CodeSort', A.SEQ, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'DISPLAY_MAT', RTRIM(A.PART) as 'MatPart',  IFNULL(D.PRODUCT_LINE,'') AS 'PL', IFNULL(D.code_sort,'') AS 'InvCodeSort', A.DESCRIPTION AS DESCR, IF(F.CODE_SOURCE='P','PS',IF(F.CODE_SOURCE='J','PJ','PJ')) AS 'CODE_SOURCE', A.BURDEN, B.PCSTOPROD, IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND, B.PCSCOMPL,  (B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN, IFNULL(RTRIM(E.VENDOR),(SELECT RTRIM(NAME_VENDOR) FROM V_INVENTORY_ALL Y WHERE D.PART=Y.PART and D.LOCATION = Y.LOCATION)) AS 'VENDOR',IFNULL(E.VENDOR,A.OPERATION) AS 'OutsideVENDOR', 'BROWSE' AS 'VendorSearch',  '' AS 'VendorName', IF(A.LEAD_TIME=0,0,A.LEAD_TIME/40) AS 'LEAD_TIME', '' as 'PartFriendly', E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,If(IsNull(G.TEXT,'') <> '',G.TEXT,W.Text) as Text, CONCAT(PURCHASE_ORDER,LEFT(E.RECORD_NO,3)) AS 'POANDLINE', CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE, IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE, A.DATE_DUE AS 'LINEDUE', D.AMT_COST, D.AMT_ALT_COST, IF(RTRIM(D.UM_PURCHASING)='',D.UM_INVENTORY,D.UM_PURCHASING) AS 'PURUM', IFNULL(E.COST,(SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST) FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART AND Z.LOCATION=D.LOCATION)) AS 'COST', IFNULL(E.Extension, (SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST)*B.PCSTOPROD FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART AND Z.LOCATION=D.LOCATION)) AS 'EXTENSION',' ' as 'JobSteps', CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, A.JOB, A.SUFFIX, C.LOCATION FROM V_JOB_OPERATIONS A LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN INVENTORY_MST2 F ON A.PART = F.PART AND C.LOCATION = F.LOCATION LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE LEFT JOIN PO_LN_TEXT G ON E.PURCHASE_ORDER = G.PO_NUM AND E.RECORD_NO = G.LINE left join WO_Seq_Comments w on A.Job = w.WO and  A.Suffix = w.WO_Suffix and A.seq = w.WO_Seq WHERE A.FLAG_CLOSED <> 'Y'  AND A.LMO in ('M','O') AND (A.SEQ NOT IN ('995000','998000') AND LEFT(A.SEQ,1)<>'9' ) AND LEFT(A.JOB,1)<>  'Z'  AND  C.DATE_CLOSED='1900-01-01'  AND PL<>'53' AND C.Customer='{0}' AND C.SALES_ORDER='{1}' ORDER BY A.SEQ;",v.Args.Customer,V.Args.SalesOrder,v.Local.ssql3)
		'F.Intrinsic.String.Build("SELECT DISTINCT A.LMO,CAST(0 AS BIT) AS 'SelectWO',' ' AS 'DISPLAY_PART', ' ' as 'PrtDocCntrl',  C.DATE_DUE, ' ' AS 'CUR_OPER', ' ' AS 'MaterialIssue', ' ' AS 'MaterialManage', ' ' AS 'JobStatus', CONCAT(A.JOB,CONCAT('-',rtrim(A.SUFFIX))) AS 'WOLabel', C.SALES_ORDER, C.SALES_ORDER_LINE, CONCAT(C.SALES_ORDER,C.SALES_ORDER_LINE) AS 'SALESORDERLINE', RTRIM(C.PART) AS 'Part', C.PART_DESCRIPTION, ' ' AS 'CodeSort', A.SEQ, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'DISPLAY_MAT', RTRIM(A.PART) as 'MatPart',  IFNULL(D.PRODUCT_LINE,'') AS 'PL', IFNULL(D.code_sort,'') AS 'InvCodeSort', A.DESCRIPTION AS DESCR, IF(F.CODE_SOURCE='P','PS',IF(F.CODE_SOURCE='J','PJ','PJ')) AS 'CODE_SOURCE', A.BURDEN, B.PCSTOPROD, IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND, B.PCSCOMPL,  (B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN, IFNULL(RTRIM(E.VENDOR),(SELECT RTRIM(NAME_VENDOR) FROM V_INVENTORY_ALL Y WHERE D.PART=Y.PART and D.LOCATION = Y.LOCATION)) AS 'VENDOR',IFNULL(E.VENDOR,A.OPERATION) AS 'OutsideVENDOR', 'BROWSE' AS 'VendorSearch',  '' AS 'VendorName', IF(A.LEAD_TIME=0,0,A.LEAD_TIME/40) AS 'LEAD_TIME', '' as 'PartFriendly', E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,If(IsNull(G.TEXT,'') <> '',G.TEXT,W.Text) as Text, CONCAT(PURCHASE_ORDER,LEFT(E.RECORD_NO,3)) AS 'POANDLINE', IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE, A.DATE_DUE AS 'LINEDUE', D.AMT_COST, D.AMT_ALT_COST, IF(RTRIM(D.UM_PURCHASING)='',D.UM_INVENTORY,D.UM_PURCHASING) AS 'PURUM', IFNULL(E.COST,(SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST) FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART AND Z.LOCATION=D.LOCATION)) AS 'COST', IFNULL(E.Extension, (SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST)*B.PCSTOPROD FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART AND Z.LOCATION=D.LOCATION)) AS 'EXTENSION',' ' as 'JobSteps', CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, A.JOB, A.SUFFIX, C.LOCATION FROM V_JOB_OPERATIONS A WITH (INDEX (JOBOP565701))LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN INVENTORY_MST2 F ON A.PART = F.PART AND C.LOCATION = F.LOCATION LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE LEFT JOIN PO_LN_TEXT G ON E.PURCHASE_ORDER = G.PO_NUM AND E.RECORD_NO = G.LINE left join WO_Seq_Comments w on A.Job = w.WO and  A.Suffix = w.WO_Suffix and A.seq = w.WO_Seq WHERE A.FLAG_CLOSED <> 'Y'  AND A.LMO in ('M','O') AND (A.SEQ NOT IN ('995000','998000') AND LEFT(A.SEQ,1)<>'9' ) AND LEFT(A.JOB,1)<>  'Z'  AND  C.DATE_CLOSED='1900-01-01'  AND PL<>'53' AND C.Customer='{0}' AND C.SALES_ORDER='{1}' ORDER BY A.SEQ;",v.Args.Customer,V.Args.SalesOrder,v.Local.ssql3)
		F.Intrinsic.String.Build("SELECT DISTINCT CAST(0 AS BIT) AS 'SelectWO',' ' AS 'DISPLAY_PART', ' ' as 'PrtDocCntrl',  C.DATE_DUE, ' ' AS 'CUR_OPER', ' ' AS 'MaterialIssue', ' ' AS 'MaterialManage', ' ' AS 'JobStatus', CONCAT(A.JOB,CONCAT('-',rtrim(A.SUFFIX))) AS 'WOLabel', C.SALES_ORDER, C.SALES_ORDER_LINE, CONCAT(C.SALES_ORDER,C.SALES_ORDER_LINE) AS 'SALESORDERLINE', RTRIM(C.PART) AS 'Part', C.PART_DESCRIPTION, ' ' AS 'CodeSort', A.SEQ, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'DISPLAY_MAT', RTRIM(A.PART) as 'MatPart',  IFNULL(D.PRODUCT_LINE,C.PRODUCT_LINE) AS 'PL', A.DESCRIPTION AS DESCR, IF(F.CODE_SOURCE='P','PS',IF(F.CODE_SOURCE='J','PJ','PJ')) AS 'CODE_SOURCE', A.BURDEN, B.PCSTOPROD, IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND, B.PCSCOMPL,  (B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN, IFNULL(E.VENDOR,A.OPERATION) AS 'VENDOR', 'BROWSE' AS 'VendorSearch',  '' AS 'VendorName', IF(A.LEAD_TIME=0,0,A.LEAD_TIME/40) AS 'LEAD_TIME', '' as 'PartFriendly', E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,G.TEXT,  CONCAT(PURCHASE_ORDER,LEFT(E.RECORD_NO,3)) AS 'POANDLINE', IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE, A.DATE_DUE AS 'LINEDUE', CONVERT(NULL,SQL_DATE) AS CUR_OPER_DATE, D.AMT_COST, D.AMT_ALT_COST, IF(RTRIM(D.UM_PURCHASING)='',D.UM_INVENTORY,D.UM_PURCHASING) AS 'PURUM', IFNULL(E.COST,(SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST) FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART)) AS 'COST', IFNULL(E.Extension, (SELECT IF(AMT_ALT_COST=0,AMT_COST,AMT_ALT_COST)*B.PCSTOPROD FROM V_INVENTORY_MSTR Z WHERE Z.PART=D.PART)) AS 'EXTENSION',' ' as 'JobSteps', CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, A.JOB, A.SUFFIX, C.LOCATION FROM V_JOB_OPERATIONS A LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN INVENTORY_MST2 F ON A.PART = F.PART AND C.LOCATION = F.LOCATION LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE LEFT JOIN PO_LN_TEXT G ON E.PURCHASE_ORDER = G.PO_NUM AND E.RECORD_NO = G.LINE WHERE A.LMO = 'O' AND A.SEQ NOT IN ('995000','998000') AND C.DATE_CLOSED='1900-01-01' AND LEFT(A.JOB,1)<>'Z' AND FLAG_CLOSED <> 'Y' AND PL<>'53' AND LEFT(A.SEQ,1)<>'9' C.CUSTOMER='{0}' AND C.SALES_ORDERS='{1}' ORDER BY A.SEQ",v.Args.Customer,V.Args.SalesOrder,v.Local.ssql4)
	f.Intrinsic.Control.EndIf
	
	'update the query accordingly and create datatable
	'For all records
	gui.FrmMaster.prgBar.Value(1)
	gui.FrmMaster.lblDateUpdated.Caption("Building Prelim WO Data")
	f.Intrinsic.Control.CallSub(cleanQuery,"Active",v.Local.bActive,"Query",v.Local.sSql)
	f.Intrinsic.Variable.ArgToVar("rSQL",v.Local.sSql)
	F.Data.DataTable.CreateFromSQL("dtAll","CON",v.Local.sSQL,True)

	
	'For workcentre dispatch
	gui.FrmMaster.prgBar.Value(2)
	gui.FrmMaster.lblDateUpdated.Caption("Building Prelim Workcentre Data")	
	f.Intrinsic.Control.CallSub(cleanQuery,"Active",v.Local.bActive,"Query",v.Local.sSql2)
	f.Intrinsic.Variable.ArgToVar("rSQL",v.Local.sSql2)
	F.Data.DataTable.CreateFromSQL("dtOper","CON",v.Local.sSQL2,True)
	f.Data.DataView.Create("dtOper","dvOper",22,"","SEQRES ASC, DAYS_LATE ASC")
	
	'For material list
	gui.FrmMaster.prgBar.Value(3)
	gui.FrmMaster.lblDateUpdated.Caption("Building Prelim Material Data")
	f.Intrinsic.Control.CallSub(cleanQuery,"Active",v.Local.bActive,"Query",v.Local.sSql3)
	f.Intrinsic.Variable.ArgToVar("rSQL",v.Local.sSql3)
	
	'Create table for Material and Outside then later filter for material dtAllM and outside dtAllO
	f.Intrinsic.Control.If(v.DataTable.dtMO.Exists)
		f.Data.DataTable.Close("dtMO")
	f.Intrinsic.Control.EndIf
	F.Data.DataTable.CreateFromSQL("dtMO","CON",v.Local.sSQL3,True)
	
	'For dtAllM from dtMO
	f.Data.DataView.Create("dtMO","vMO",22,"LMO = 'M'","")
	f.Data.DataView.ToDataTable("dtMO","vMO","dtAllM",True)
	f.Data.DataTable.RemoveColumn("dtAllM","OutsideVendor")
	f.Data.DataTable.RemoveColumn("dtAllM","LMO")
	'F.Data.DataTable.CreateFromSQL("dtAllM","CON",v.Local.sSQL3,True)
	f.Data.DataView.Create("dtAllM","dvAllM",22,"","")
	
	'For outside list - dtAllO from dtMO
	gui.FrmMaster.prgBar.Value(3)
	gui.FrmMaster.lblDateUpdated.Caption("Building Prelim Outside Data")
	f.Intrinsic.Control.CallSub(cleanQuery,"Active",v.Local.bActive,"Query",v.Local.sSql4)
	f.Intrinsic.Variable.ArgToVar("rSQL",v.Local.sSql4)
'	F.Data.DataTable.CreateFromSQL("dtAllO","CON",v.Local.sSql4,True)	
	f.Data.DataView.SetFilter("dtMO","vMO","LMO = 'O'")
	f.Data.DataView.ToDataTable("dtMO","vMO","dtAllO",True)
	f.Data.DataTable.RemoveColumn("dtAllO","Vendor")
	f.Data.DataTable.AddColumn("dtAllO","Vendor","String","")
	f.Data.DataTable.CopyColumn("dtAllO","OutsideVendor","Vendor")
	f.Data.DataTable.RemoveColumn("dtAllO","OutsideVendor")
	f.Data.DataTable.RemoveColumn("dtAllO","LMO")

	f.Data.DataView.Create("dtAllO","dvAllO",22,"","")



	
	'Long Part
	gui.FrmMaster.prgBar.Value(4)
	gui.FrmMaster.lblDateUpdated.Caption("Checking for Long Part")
	f.Intrinsic.Control.If(v.Global.bLongPart)
		F.Data.DataTable.CopyColumn("dtAll","PART","DISPLAY_PART")
		F.Data.DataTable.CopyColumn("dtAll","PART","PartFriendly")
		F.Data.DataTable.CopyColumn("dtOper","PART","DISPLAY_PART")
		F.Data.DataTable.CopyColumn("dtOper","PART","PartFriendly")
		F.Data.DataTable.CopyColumn("dtAllM","PART","DISPLAY_PART")
		F.Data.DataTable.CopyColumn("dtAllM","PART","PartFriendly")
		F.Data.DataTable.CopyColumn("dtAllO","PART","DISPLAY_PART")
		F.Data.DataTable.CopyColumn("dtAllO","PART","PartFriendly")
		F.Data.Dictionary.CreateFromSQL("dLongPart","con","select rtrim(GSS_PART) AS 'PART', rtrim(DISPLAY_PART) AS 'DISPLAY_PART' FROM INV_LXR")
		F.Data.Datatable.FillFromDictionary("dtAll","dLongPart","PART","DISPLAY_PART")
		F.Data.Datatable.FillFromDictionary("dtAll","dLongPart","PART","PartFriendly")
		F.Data.Datatable.FillFromDictionary("dtAllM","dLongPart","PART","DISPLAY_PART")
		F.Data.Datatable.FillFromDictionary("dtAllM","dLongPart","PART","PartFriendly")
		F.Data.Datatable.FillFromDictionary("dtAllO","dLongPart","PART","DISPLAY_PART")
		F.Data.Datatable.FillFromDictionary("dtAllO","dLongPart","PART","PartFriendly")
		F.Data.Datatable.FillFromDictionary("dtOper","dLongPart","PART","DISPLAY_PART")
		F.Data.Datatable.FillFromDictionary("dtOper","dLongPart","PART","PartFriendly")
		F.Data.Dictionary.Close("dLongPart")
	f.Intrinsic.Control.Else
		F.Data.DataTable.CopyColumn("dtAll","PART","DISPLAY_PART")
		F.Data.DataTable.CopyColumn("dtAll","PART","PartFriendly")
		F.Data.DataTable.CopyColumn("dtOper","PART","DISPLAY_PART")
		F.Data.DataTable.CopyColumn("dtOper","PART","PartFriendly")
		F.Data.DataTable.CopyColumn("dtAllM","PART","DISPLAY_PART")
		F.Data.DataTable.CopyColumn("dtAllM","PART","PartFriendly")
		F.Data.DataTable.CopyColumn("dtAllO","PART","DISPLAY_PART")
		F.Data.DataTable.CopyColumn("dtAllO","PART","PartFriendly")
	f.Intrinsic.Control.EndIf
	
	'Add expression column for vendor / cost
	f.Data.DataTable.AddExpressionColumn("dtAllM","Vendor2","String","Vendor")
	f.Data.DataTable.AddExpressionColumn("dtAllM","Cost2","Float","Cost")
	
	'Job Steps Logic
	gui.FrmMaster.prgBar.Value(5)
	gui.FrmMaster.lblDateUpdated.Caption("Building Prelim Job Steps")
	f.Intrinsic.Control.If(v.DataTable.dtAll.RowCount,>,0)
		f.Intrinsic.Math.Mult(v.DataTable.dtAll.RowCount,2,v.Local.iMax)
	f.Intrinsic.Control.EndIf
	
	'Get the mininum job number
	f.ODBC.Connection!CON.ExecuteAndReturn("Select Min(Job) as JobMin from v_Job_header WHERE DATE_CLOSED = '1900-1-1' ",v.Local.sMinJob)
	f.Intrinsic.Control.If(v.Local.sMinJob,=,"")
		v.Local.sMinJob.Set("000000")
	f.Intrinsic.Control.EndIf
	
	'Get all Job Operations where job >= minjob. This is to avoid getting the whole v_job_operations which is too big	
	f.Intrinsic.String.Build("Select Job, Suffix, Seq, LMO, Description, Part as PartWO, Flag_Closed, Units_Open, Date_Start, Date_Due, PO_Assigned,'' as POHead, Date_PO_Order,Job + '-' + Suffix + '-' + Seq as JobSuffixSeq from Job_Operations where Job >= '{0}' and LMO in ('L','O') and Seq < '990000' Order by Job,Suffix,Seq",v.Local.sMinJob,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.JobOp.Exists)
		f.Data.DataTable.close("JobOp")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("JobOp","CON",v.Local.sSQL,True)	
	
	'Get Order header Data
	gui.FrmMaster.prgBar.Value(6)
	gui.FrmMaster.lblDateUpdated.Caption("Building Prelim Order Header")
	f.Intrinsic.Control.If(v.DataTable.dtOrd.Exists)
		f.Data.DataTable.Close("dtOrd")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtOrd","con","SELECT * FROM ORDER_HEADER")
	f.Intrinsic.Control.If(v.DataTable.dtSONotes.Exists)
		f.Data.DataTable.Close("dtSONotes")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtSONotes","con","SELECT * FROM GAB_4167_SO_NOTES")
	
	'Get all Material steps
	gui.FrmMaster.prgBar.Value(7)
	gui.FrmMaster.lblDateUpdated.Caption("Building Prelim Material Status")
	f.Intrinsic.Control.If(v.DataTable.JobMat.Exists)
		f.Data.DataTable.close("JobMat")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("JobMat","Con","SELECT DISTINCT JOB, SUFFIX, FLAG_CLOSED FROM JOB_OPERATIONS WHERE LMO='M' and (seq<>'995000' and seq<>'998000')",true)
	
	'Vendor Master
	gui.FrmMaster.prgBar.Value(8)
	gui.FrmMaster.lblDateUpdated.Caption("Building Vendor Dictionary")
	F.Data.Dictionary.CreateFromSQL("dVend","con","Select RTRIM(VENDOR) AS 'Vendor', RTRIM(NAME_VENDOR) as 'VendorName' From V_VENDOR_MASTER")
	F.Data.DataTable.FillFromDictionary("dtAllO","dVend","Vendor","VendorName")
	F.Data.DataTable.FillFromDictionary("dtAllM","dVend","Vendor","VendorName")
	F.Data.Dictionary.Close("dVend")
	
	'Work Order Notes
	'nEEDS TO BE DONE LINE BY LINE!  IF no PO exists, then take the comments from WO Comments
	'If PO exists, take the comments from PO Comments
	gui.FrmMaster.prgBar.Value(9)
	gui.FrmMaster.lblDateUpdated.Caption("Building and Filling Work Order Extra Text  Dictionary")
'	F.Data.Dictionary.CreateFromSQL("dWOSQ","con","select CONCAT(WO,CONCAT(WO_SUFFIX,WO_SEQ)) AS JSS, IFNULL(TEXT, ' ') AS 'TEXT' from WO_SEQ_COMMENTS")
'	F.Data.Dictionary.SetDefaultReturn("dWOSQ","")
	'F.Data.Datatable.FillFromDictionary("dtAllM","dWOSQ","JSS","TEXT")
'	F.Data.Datatable.FillFromDictionary("dtAllO","dWOSQ","JSS","TEXT")
'	F.Data.Dictionary.Close("dWOSQ")
	
	'PO Notes
	gui.FrmMaster.prgBar.Value(10)
	gui.FrmMaster.lblDateUpdated.Caption("Building PO Extra Text Dictionary")
	F.Intrinsic.Control.If(V.DataTABLE.dtPOSQ.Exists)
		F.Data.DataTable.Close("dtPOSQ")
	F.Intrinsic.Control.EndIf
	F.Data.Datatable.CreateFromSQL("dtPOSQ","con","select CONCAT(PO_NUM,LEFT(LINE,3)) AS POANDLINE, IFNULL(TEXT, ' ') AS 'TEXT' from PO_LN_TEXT",true)
	
	'Get Job Steps	
	gui.FrmMaster.prgBar.Value(11)
	gui.FrmMaster.lblDateUpdated.Caption("Adding Completion Flag for Job Steps")
	
	f.Data.DataTable.AddExpressionColumn("JobOp","JobSteps","String","IIF(Flag_Closed = 'Y','~' + trim(PartWO),trim(PartWO))")
	'f.Data.DataTable.AddExpressionColumn("JobOp","JobSteps","String","IIF(Flag_Closed = 'Y',IIF(trim(PartWO) = 'TASK','~' + trim(Description),'~' + trim(PartWO)),IIF(trim(PartWO) = 'TASK',trim(Description),trim(PartWO)))")
	f.Data.DataView.Create("JobOp","dvJobOp")
	f.Intrinsic.Math.Add(v.DataTable.dtAll.RowCount,1,v.Local.lMax)
	F.Intrinsic.Control.If(v.Local.lMax,=,0)
		v.Local.lMax.Set(1)
	F.Intrinsic.Control.EndIf
	
	'Add Dataviews and MyRowID
	f.Data.DataView.Create("dtAll","dvAll")
	F.Data.DataView.ToDataTable("dtAll","dvAll","dtAll2",True)
	f.Data.DataView.Create("dtAll2","dvAll2")
	f.Data.DataTable.AddColumn("dtAll2","MyRowID",Integer)
	f.Data.DataTable.AddColumn("dtAllO","MyRowID",Integer)
	f.Data.DataTable.AddColumn("dtAllM","MyRowID",Integer)
	f.Data.DataTable.AddColumn("dtOper","MyRowID",Integer)
	
	'Doc control for part
	F.Data.DataTable.SetValue("dtAll2",-1,"PrtDocCntrl","DCS-OFF")
	F.Data.Dictionary.CreateFromSQL("dDCC","con","Select rtrim(ID) As Part,'DCS-ON' As DCC From Link_Data Where Type = '00030'")
	F.Data.Dictionary.SetDefaultReturn("dDCC","DCS-OFF")
	F.Data.DataTable.FillFromDictionary("dtAll2","dDCC","PART","PrtDocCntrl")
	F.Data.Dictionary.Close("dDCC")
	
	'SO Terms
	gui.FrmMaster.prgBar.Value(12)
	gui.FrmMaster.lblDateUpdated.Caption("Filling SO Terms from Dictionary")
	f.Data.Dictionary.CreateFromSQL("dSOTerms","con","SELECT ORDER_NO AS 'SALES_ORDER', TERMS FROM V_ORDER_HEADER")
	f.Data.Dictionary.SetDefaultReturn("dSOTerms","")
	F.Data.DataTable.FillFromDictionary("dtAll2","dSOTerms","JS","SOTERMS")
	F.Data.Dictionary.Close("dSOTerms")
	
	'CodeSort
	gui.FrmMaster.prgBar.Value(13)
	gui.FrmMaster.lblDateUpdated.Caption("Filling Code Sort from Dictionary")

	f.Data.Dictionary.CreateFromSQL("dCodeSort","con","SELECT ORDER_NO AS 'SALES_ORDER', CODE_SORT FROM V_ORDER_HEADER")
	F.Data.Dictionary.SetDefaultReturn("dCodeSort","")
	F.Data.DataTable.FillFromDictionary("dtAll2","dCodeSort","SALES_ORDER","CodeSort")
	F.Data.DataTable.FillFromDictionary("dtAllO","dCodeSort","SALES_ORDER","CodeSort")
	F.Data.DataTable.FillFromDictionary("dtAllM","dCodeSort","SALES_ORDER","CodeSort")
	F.Data.DataTable.FillFromDictionary("dtOper","dCodeSort","SALES_ORDER","CodeSort")
	F.Data.Dictionary.Close("dCodeSort")
	
	'CodeSort2
	gui.FrmMaster.prgBar.Value(14)
	gui.FrmMaster.lblDateUpdated.Caption("Filling Code Sort 2 from Dictionary")
	f.Data.Dictionary.CreateFromSQL("dCodeSort2","con","SELECT ORDER_NO AS 'SALES_ORDER', ORDER_SORT_2 FROM V_ORDER_HEADER")
	F.Data.Dictionary.SetDefaultReturn("dCodeSort2","")
	F.Data.DataTable.FillFromDictionary("dtAll2","dCodeSort2","SALES_ORDER","CodeSort2")
	F.Data.Dictionary.Close("dCodeSort2")
	
	'SoDATE
	gui.FrmMaster.prgBar.Value(15)
	gui.FrmMaster.lblDateUpdated.Caption("Filling SO Date from Dictionary")
	f.Data.Dictionary.CreateFromSQL("dSodate","con","SELECT ORDER_NO AS 'SALES_ORDER', DATE_ORDER FROM V_ORDER_HEADER")
	F.Data.Dictionary.SetDefaultReturn("dSodate","01/01/1900")
	F.Data.DataTable.FillFromDictionary("dtAll2","dSoDATE","SALES_ORDER","SoDATE")
	F.Data.Dictionary.Close("dSoDATE")
	
	'SOUSER_3
	gui.FrmMaster.prgBar.Value(16)
	gui.FrmMaster.lblDateUpdated.Caption("Filling SO User 3 from Dictionary")
	f.Data.Dictionary.CreateFromSQL("dSOUSER_3","con","SELECT CONCAT(ORDER_NO,RECORD_NO) AS 'SALESORDERLINE', USER_3 FROM V_ORDER_LINES")
	F.Data.Dictionary.SetDefaultReturn("dSOUSER_3","")
	F.Data.DataTable.FillFromDictionary("dtAll2","dSOUSER_3","SALESORDERLINE","SOUSER_3")
	F.Data.Dictionary.Close("dSOUSER_3")
	
	'SOUSER_4
	gui.FrmMaster.prgBar.Value(17)
	gui.FrmMaster.lblDateUpdated.Caption("Filling SO User 4 from Dictionary")
	f.Data.Dictionary.CreateFromSQL("dSOUSER_4","con","SELECT CONCAT(ORDER_NO,RECORD_NO) AS 'SALESORDERLINE', USER_4 FROM V_ORDER_LINES")
	F.Data.Dictionary.SetDefaultReturn("dSOUSER_4","")
	F.Data.DataTable.FillFromDictionary("dtAll2","dSOUSER_4","SALESORDERLINE","SOUSER_4")
	F.Data.Dictionary.Close("dSOUSER_4")
	
	'SOUSER_5
	gui.FrmMaster.prgBar.Value(18)
	gui.FrmMaster.lblDateUpdated.Caption("Filling SO User 5 from Dictionary")
	f.Data.Dictionary.CreateFromSQL("dSOUSER_5","con","SELECT CONCAT(ORDER_NO,RECORD_NO) AS 'SALESORDERLINE', USER_5 FROM V_ORDER_LINES")
	F.Data.Dictionary.SetDefaultReturn("dSOUSER_5","")
	F.Data.DataTable.FillFromDictionary("dtAll2","dSOUSER_5","SALESORDERLINE","SOUSER_5")
	F.Data.Dictionary.Close("dSOUSER_5")
	
	'SONotes
	gui.FrmMaster.prgBar.Value(19)
	gui.FrmMaster.lblDateUpdated.Caption("Filling SO Notes from Dictionary")
	F.Data.Dictionary.CreateFromSQL("dSONotes","con","SELECT CONCAT(SO,CONCAT(SOLINE,'0')) AS 'SALESORDERLINE', NOTES AS 'SONotes' FROM GAB_4167_SO_NOTES")
	F.Data.Dictionary.SetDefaultReturn("dSONotes","")
	F.Data.DataTable.FillFromDictionary("dtAll2","dSONotes","JS","SONotes")
	F.Data.Dictionary.Close("dSONotes")
	
	'Customer PO
	gui.FrmMaster.prgBar.Value(20)
	gui.FrmMaster.lblDateUpdated.Caption("Customer PO")
	f.Data.Dictionary.createfromdatatable("dCustomerPO","dtAll2","SALES_ORDER","Customer_PO")
	f.Data.Dictionary.SetDefaultReturn("dCustomerPO","")
	f.Data.DataTable.FillFromDictionary("dtOper","dCustomerPO","Sales_Order","Customer_PO")
	f.Data.Dictionary.Close("dCustomerPO")
	
	'Material Status
	gui.FrmMaster.prgBar.Value(21)
	gui.FrmMaster.lblDateUpdated.Caption("Material Issue")
	f.Intrinsic.Control.If(v.DataTable.dtIssue.Exists)
        f.Data.DataTable.close("dtIssue")
    f.Intrinsic.Control.EndIf
    f.Data.DataTable.CreateFromSQL("dtIssue","con","select Job+Suffix as JS,count(*) as SeqCount from Job_Operations where  LMO = 'M' and Seq < '999999' and seq<>'995000' group by job,suffix",True)
	f.Data.Dictionary.CreateFromSQL("dAllReadyIssue","con","select Job+Suffix as JS,count(*) as SeqCount from Job_Operations where  LMO = 'M' and Seq < '999999' and seq<>'995000' and IsNull(Flag_Closed,'') = 'Y' group by job,suffix")
    f.Data.Dictionary.SetDefaultReturn("dAllReadyIssue",0)
    f.Data.DataTable.AddColumn("dtIssue","SeqIssuedNum",Long,0)
    f.Data.DataTable.FillFromDictionary("dtIssue","dAllReadyIssue","JS","SeqIssuedNum")
    f.Data.DataTable.AddExpressionColumn("dtIssue","FlagIssue","String","IIF(SeqIssuedNum = SeqCount,'ALL',IIF(SeqIssuedNum = 0,'NONE','SOME'))")
    f.Data.Dictionary.CreateFromDatatable("dFlagIssue","dtIssue","JS","FlagIssue")
    f.Data.Dictionary.SetDefaultReturn("dFlagIssue","")
    f.Data.DataTable.FillFromDictionary("dtAll2","dFlagIssue","JS","MaterialIssue")
    f.Data.DataTable.FillFromDictionary("dtOper","dFlagIssue","JS","MaterialIssue")
    f.Data.DataTable.FillFromDictionary("dtAllM","dFlagIssue","JS","MaterialIssue")
    f.Data.DataTable.FillFromDictionary("dtAllO","dFlagIssue","JS","MaterialIssue")
    f.Data.Dictionary.close("dFlagIssue")
    f.Data.Dictionary.close("dAllReadyIssue")
		
	'Create dictionaries from APS table: logic: select top 2 record for each job+suffix. Based on fields to get, will need to first or the second record, so will use the dictionaries differently
	'Before this, they use a record set of top 2 row to find the value for these variables:
	V.Local.sDept.Set("")
	V.Local.sCurOper.Set("")
	V.Local.dCurOperDate.Set(01/01/1900)
	V.Local.sNextOper.Set("")
	V.Local.sOutside.Set("")	
	
	'Department (first row)
	gui.FrmMaster.prgBar.Value(22)
	gui.FrmMaster.lblDateUpdated.Caption("Department Load")
	f.Data.Dictionary.CreateFromSQL("dDept","con","Select A.JOB + A.SFX as JS,If(A.SeqType = '3','',IF(WORK_GROUP <> '',D.WC_DEPT,B.WC_DEPT))  AS DEPT FROM APSV3_JBLINES A  LEFT JOIN WORKCENTERS B ON A.SEQRES = B.MACHINE  LEFT JOIN WORKGROUP_HEAD C ON A.SEQRES = C.WORK_GROUP   LEFT JOIN WORKCENTERS D ON C.PROTOTYPE_WC = D.MACHINE  WHERE A.COMPLDATE IS NULL AND A.SEQTYPE <> '2'    ORDER BY A.JOB,A.SFX,A.SEQ")
	f.Data.Dictionary.SetDefaultReturn("dDept","")
	f.Data.DataTable.FillFromDictionary("dtAll2","dDept","JS","DEPT")	
	f.Data.Dictionary.Close("dDept")
	
	'CurOp (first row)
	gui.FrmMaster.prgBar.Value(22)
	gui.FrmMaster.lblDateUpdated.Caption("Current Op Load")
	f.Data.Dictionary.CreateFromSQL("dCurOp","con"," Select A.JOB + A.SFX as JS,If(A.SeqType = '3','OUTSIDE',SeqRes) as CUR_OPER FROM APSV3_JBLINES A  LEFT JOIN WORKCENTERS B ON A.SEQRES = B.MACHINE  LEFT JOIN WORKGROUP_HEAD C ON A.SEQRES = C.WORK_GROUP   LEFT JOIN WORKCENTERS D ON C.PROTOTYPE_WC = D.MACHINE  WHERE A.COMPLDATE IS NULL AND A.SEQTYPE <> '2'    ORDER BY A.JOB,A.SFX,A.SEQ")
	f.Data.Dictionary.SetDefaultReturn("dCurOp","")
	f.Data.DataTable.FillFromDictionary("dtAll2","dCurOp","JS","CUR_OPER")
	F.Data.DataTable.FillFromDictionary("dtOper","dCurOp","JS","CUR_OPER")
	F.Data.DataTable.FillFromDictionary("dtAllM","dCurOp","JS","CUR_OPER")
	F.Data.DataTable.FillFromDictionary("dtAllO","dCurOp","JS","CUR_OPER")
	f.Data.Dictionary.Close("dCurOp")
	
	'dCurOperDate (first row)
	gui.FrmMaster.prgBar.Value(23)
	gui.FrmMaster.lblDateUpdated.Caption("Current Operation Date")
	f.Data.Dictionary.CreateFromSQL("dCurOperDate","con","Select A.JOB + A.SFX as JS,If(StartDate is Null,Convert('1900-01-01',SQL_Date),StartDate) as CUR_OPER_DATE FROM APSV3_JBLINES A  LEFT JOIN WORKCENTERS B ON A.SEQRES = B.MACHINE  LEFT JOIN WORKGROUP_HEAD C ON A.SEQRES = C.WORK_GROUP   LEFT JOIN WORKCENTERS D ON C.PROTOTYPE_WC = D.MACHINE  WHERE A.COMPLDATE IS NULL AND A.SEQTYPE <> '2'    ORDER BY A.JOB,A.SFX,A.SEQ")
	f.Data.Dictionary.SetDefaultReturn("dCurOperDate","1900-01-01")
	f.Data.DataTable.FillFromDictionary("dtAll2","dCurOperDate","JS","CUR_OPER_DATE")
	f.Data.DataTable.FillFromDictionary("dtAllM","dCurOperDate","JS","CUR_OPER_DATE")
	f.Data.DataTable.FillFromDictionary("dtAllO","dCurOperDate","JS","CUR_OPER_DATE")
	f.Data.Dictionary.Close("dCurOperDate")
	
	'sNextOper (second row)
	gui.FrmMaster.prgBar.Value(24)
	gui.FrmMaster.lblDateUpdated.Caption("Next Operation Date")
	f.Data.Dictionary.CreateFromSQL("dNextOper","con","  Select A.JOb + A.SFX as JS,If(A.SeqType = '3','OUTSIDE',SeqRes) as NEXT_OPER   FROM APSV3_JBLINES A LEFT JOIN WORKCENTERS B ON A.SEQRES = B.MACHINE  LEFT JOIN WORKGROUP_HEAD C ON A.SEQRES = C.WORK_GROUP  LEFT JOIN WORKCENTERS D ON C.PROTOTYPE_WC = D.MACHINE   left join (select JOB  + SFX as JS,min(Seq) as MinSeq from   APSV3_JBLINES where COMPLDATE IS NULL and SEQTYPE <> '2' group by job,sfx) X on a.JS = x.JS WHERE A.COMPLDATE IS NULL AND A.SEQTYPE <> '2'    and a.Seq > x.MinSeq   ORDER BY A.JOB,A.SFX,A.SEQ; ")	
	f.Data.Dictionary.SetDefaultReturn("dNextOper","")
	f.Data.DataTable.FillFromDictionary("dtAll2","dNextOper","JS","NEXT_OPER")
	f.Data.DataTable.FillFromDictionary("dtOper","dNextOper","JS","NEXT_OPER")
	f.Data.Dictionary.Close("dNextOper")
	
	'sPcsRem (second row)
	gui.FrmMaster.prgBar.Value(25)
	gui.FrmMaster.lblDateUpdated.Caption("Pieces Remaining")
	f.Data.Dictionary.CreateFromSQL("dPcsRem","con","  Select A.JOb + A.SFX as JS,PcsRemain   FROM APSV3_JBLINES A LEFT JOIN WORKCENTERS B ON A.SEQRES = B.MACHINE  LEFT JOIN WORKGROUP_HEAD C ON A.SEQRES = C.WORK_GROUP  LEFT JOIN WORKCENTERS D ON C.PROTOTYPE_WC = D.MACHINE   left join (select JOB  + SFX as JS,min(Seq) as MinSeq from   APSV3_JBLINES where COMPLDATE IS NULL and SEQTYPE <> '2' group by job,sfx) X on a.JS = x.JS WHERE A.COMPLDATE IS NULL AND A.SEQTYPE <> '2'    and a.Seq > x.MinSeq   ORDER BY A.JOB,A.SFX,A.SEQ; ")	
	f.Data.Dictionary.SetDefaultReturn("dPcsRem",0)	
	f.Data.DataTable.FillFromDictionary("dtAll2","dPcsRem","JS","PCS_REM")
	'f.Data.DataTable.FillFromDictionary("dtOper","dPcsRem","JS","PCS_REM")
	f.Data.Dictionary.Close("dPcsRem")
	''''''''''''''''''''''''''''''''''''''''''''''
	
	'Est_Hrs
	gui.FrmMaster.prgBar.Value(26)
	gui.FrmMaster.lblDateUpdated.Caption("Estimated Hours")
	f.Data.Dictionary.CreateFromSQL("dEst_Hrs","con","SELECT JS, Sum( CONVERT(HOURSORIG+INITSU,SQL_NUMERIC)) AS EST_HRS  FROM APSV3_JBLINES  WHERE (SEQTYPE = '1')  group by JS")
	f.Data.Dictionary.SetDefaultReturn("dEst_Hrs",0)	
	f.Data.DataTable.FillFromDictionary("dtAll2","dEst_Hrs","JS","EST_HRS")
	f.Data.Dictionary.Close("dEst_Hrs")
	
	'Rem_Hrs
	gui.FrmMaster.prgBar.Value(27)
	gui.FrmMaster.lblDateUpdated.Caption("Remaining Hours")
	f.Data.DataTable.AddExpressionColumn("dtAll2","Remaining_Hrs","float","EST_HRS - ACT_HRS")
	f.Data.Dictionary.createfromdatatable("dRemHrs","dtAll2","JS","Remaining_Hrs")
	f.Data.Dictionary.SetDefaultReturn("dRemHrs",0)
	f.Data.DataTable.FillFromDictionary("dtAll2","dRemHrs","JS","REM_HRS")
	f.Data.Dictionary.Close("dRemHrs")
	
	'Temporary columns to help with calculations
	F.Data.DataTable.AddColumn("dtAll2","TOT_HRS_REM_NO_FLOAT",Float,"0")
	F.Data.DataTable.AddColumn("dtAll2","TOT_DAYS_REM_NO_FLOAT",Float,"0")
	F.Data.DataTable.AddColumn("dtAll2","TOT_DAYS_REM",Float,"0")
	F.Data.DataTable.AddColumn("dtAll2","TODAYS_DATE",Date,v.Ambient.Date)
	
	'Schedule date calculation, this one is long
	f.Intrinsic.Control.If(v.DataTable.dtTotHours.Exists)
		f.Data.DataTable.Close("dtTotHours")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtTotHours","con","SELECT JS, sum(((((hoursorig +initsu)* (1+(1-SPM)))-if(Hoursappl>HoursOrig+INITSU,0,Hoursappl))+float))/8 as 'TotDaysRem', sum(((((hoursorig +initsu)* (1+(1-SPM)))-if(Hoursappl>HoursOrig+INITSU,0,Hoursappl))+float)) as 'TotHrsRem',sum(((((hoursorig +initsu)*1+SPM)-if(Hoursappl>HoursOrig,0,Hoursappl)))) as 'TotHrsRemNoFloat', sum(((((hoursorig +initsu)*1+SPM)-if(Hoursappl>HoursOrig,0,Hoursappl))))/8 as 'TotDaysRemNoFloat' FROM APSV3_JBLINES  WHERE (SEQTYPE = '1' or SeqType = '3' )  AND IFNULL(COMPLDATE,'1900-01-01')  = '1900-01-01' group by JS",True)
	'f.Data.DataTable.CreateFromSQL("dtTotHours","con","SELECT JS, if((Sum( (((HOURSORIG+INITSU) * (1+(1-SPM))) - (If(HoursAppl > (HOURSORIG+INITSU),(HOURSORIG+INITSU),HoursAppl)) + Float))*-1)=0,0, (Sum( (((HOURSORIG+INITSU) * (1+(1-SPM))) - (If(HoursAppl > (HOURSORIG+INITSU),(HOURSORIG+INITSU),HoursAppl)) + Float))*-1)/8) AS TotHrsRem ,if((sum((((HOURSORIG+INITSU) * (1+(1-SPM))) - (If(HoursAppl > (HOURSORIG+INITSU),(HOURSORIG+INITSU),HoursAppl))))*-1)=0,0,(sum((((HOURSORIG+INITSU) * (1+(1-SPM))) - (If(HoursAppl > (HOURSORIG+INITSU),(HOURSORIG+INITSU),HoursAppl))))*-1)/8) AS TotHrsRemNoFloat  FROM APSV3_JBLINES  WHERE (SEQTYPE = '1' or SeqType = '3' )  AND IFNULL(COMPLDATE,'1900-01-01')  = '1900-01-01'  group by JS",True)
	
	'Total Hours reamining with float
	gui.FrmMaster.prgBar.Value(28)
	gui.FrmMaster.lblDateUpdated.Caption("Total Hours Remaining")
	f.Data.Dictionary.CreateFromDatatable("dTotHrsRem","dtTotHours","JS","TotHrsRem")
	f.Data.Dictionary.SetDefaultReturn("dTotHrsRem",0)
	f.Data.DataTable.FillFromDictionary("dtAll2","dTotHrsRem","JS","TOT_HRS_REM")
	f.Data.Dictionary.Close("dTotHrsRem")
	
	'Total hours remaining without float
	gui.FrmMaster.prgBar.Value(28)
	gui.FrmMaster.lblDateUpdated.Caption("Total Hours Remaining without float")
	f.Data.Dictionary.CreateFromDatatable("dTotHrsRemNoFloat","dtTotHours","JS","TotHrsRemNoFloat")
	f.Data.Dictionary.SetDefaultReturn("dTotHrsRemNoFloat",0)
	f.Data.DataTable.FillFromDictionary("dtAll2","dTotHrsRemNoFloat","JS","TOT_HRS_REM_NO_FLOAT")
	f.Data.Dictionary.Close("dTotHrsRemNoFloat")
	
	'Total Days remaining without float
	gui.FrmMaster.prgBar.Value(29)
	gui.FrmMaster.lblDateUpdated.Caption("Total Days Remaining without float")
	f.Data.Dictionary.CreateFromDatatable("dTotDaysRemNoFloat","dtTotHours","JS","TotDaysRemNoFloat")
	f.Data.Dictionary.SetDefaultReturn("dTotDaysRemNoFloat",0)
	f.Data.DataTable.FillFromDictionary("dtAll2","dTotDaysRemNoFloat","JS","TOT_DAYS_REM_NO_FLOAT")
	f.Data.Dictionary.Close("dTotDaysRemNoFloat")
	
	'Total Days remaining with float
	gui.FrmMaster.prgBar.Value(29)
	gui.FrmMaster.lblDateUpdated.Caption("Total Days Remaining with float")
	f.Data.Dictionary.CreateFromDatatable("dTotDaysRem","dtTotHours","JS","TotDaysRem")
	f.Data.Dictionary.SetDefaultReturn("dTotDaysRem",0)
	f.Data.DataTable.FillFromDictionary("dtAll2","dTotDaysRem","JS","TOT_DAYS_REM")
	f.Data.Dictionary.Close("dTotDaysRem")
	
	'Subtract the hours converted into days from the due date 
	F.Data.DataTable.DateAdd("dtAll2","TODAYS_DATE","w","TOT_DAYS_REM","DATE_DUE_FLOAT")
	F.Data.DataTable.DateAdd("dtAll2","TODAYS_DATE","w","TOT_DAYS_REM_NO_FLOAT","DATE_DUE_NO_FLOAT")


	'======Bao added for removing Date processing in loop==================
	gui.FrmMaster.prgBar.Value(30)
	gui.FrmMaster.lblDateUpdated.Caption("Job Status Calculation")
	f.Data.DataTable.AddColumn("dtAll2","Diff1","Long",0)
	f.Data.DataTable.AddColumn("dtAll2","Diff2","Long",0)
	f.Data.DataTable.DateDiff("dtAll2","DATE_DUE_FLOAT","DATE_DUE_NEW","d","Diff1")
	F.Data.DataTable.CopyColumn("dtAll2","Diff1","DAYS_LATE")
	f.Data.DataTable.DateDiff("dtAll2","DATE_DUE_NO_FLOAT","DATE_DUE_NEW","d","Diff2")
	F.Data.DataTable.CopyColumn("dtAll2","Diff2","DAYS_LATE_NO_FLOAT")
	
	f.Data.DataTable.AddExpressionColumn("dtAll2","Status2","String","IIF(DATE_DUE > DATE_DUE_FLOAT,'OKAY',IIF(DATE_DUE >= DATE_DUE_NO_FLOAT,'ATTENTION','ISSUE'))")
	F.Data.DataTable.CopyColumn("dtAll2","Status2","JobStatus")
	f.Data.DataTable.RemoveColumn("dtall2","Status2")
	
	F.Data.DataTable.RemoveColumn("dtAll2","Diff1")
	F.Data.DataTable.RemoveColumn("dtAll2","Diff2")
	'====================================================================
	
	'Job Steps
	gui.FrmMaster.prgBar.Value(30)
	gui.FrmMaster.lblDateUpdated.Caption("Job Step Calculation")
	f.Intrinsic.Control.CallSub(Process_JobSteps)
	
	'Fill Job Status for Outside Process Tab
	gui.FrmMaster.prgBar.Value(31)
	gui.FrmMaster.lblDateUpdated.Caption("Filling Outside Process with Job status")
	f.Data.Dictionary.createfromdatatable("dJobStatus","dtAll2","JS","JobStatus")
	f.Data.Dictionary.SetDefaultReturn("dJobStatus","")
	f.Data.DataTable.FillFromDictionary("dtAllO","dJobStatus","JS","JobStatus")
	f.Data.Dictionary.Close("dJobStatus")
	
	'Set row ID for dtAllM and dtAllO
	gui.FrmMaster.prgBar.Value(32)
	gui.FrmMaster.lblDateUpdated.Caption("Set Row IDs")
	f.Intrinsic.Control.CallSub(setRowID)
	
	'Remove columns
	gui.FrmMaster.prgBar.Value(33)
	gui.FrmMaster.lblDateUpdated.Caption("Remove columns")
	
	'Remove unnecessary columns
	f.Data.DataTable.RemoveColumn("dtAll2","TODAYS_DATE")
	f.Data.DataTable.RemoveColumn("dtAll2","DATE_DUE_NEW")
	f.Data.DataTable.RemoveColumn("dtAll2","REMAINING_HRS")
	f.Data.DataTable.RemoveColumn("dtAll2","TOT_HRS_REM_NO_FLOAT")
	
	'Starting building the children
	f.Intrinsic.Control.If(v.DataTable.dtChild.Exists)
		f.Data.DataTable.Close("dtChild")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtChildLabr.Exists)
		f.Data.DataTable.Close("dtChildLabr")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtChildOuts.Exists)
		f.Data.DataTable.Close("dtChildOuts")
	f.Intrinsic.Control.EndIf
	
	'George Sandoval 9 March 2022 - Add a check in the material and outside sequence to make sure the child table job+suffix combinations are in the parent datatable dtAll2.
	'Materials
	gui.FrmMaster.prgBar.Value(34)
	gui.FrmMaster.lblDateUpdated.Caption("Creating Material Relation for Jobs")
	
	
	f.Intrinsic.Control.if(v.Args.salesorder.Trim,=,"")
	f.Intrinsic.Control.AndIf(v.Args.Customer.Trim,=,"")
'		v.Local.sSQL.Set("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'PART', A.JOB AS JOB1,A.SUFFIX AS SFX1,A.SEQ AS SEQ1,COALESCE(A.PART,'') AS PART1,'' As DISPLAY_PART1,C.LOCATION AS LOCATION1,A.DESCRIPTION AS DESCR,E.VENDOR,E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE,D.AMT_COST,B.PCSTOPROD,B.PCSCOMPL, (B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN,IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND,IF(D.QTY_ONORDER_PO IS NULL,'0.0000',D.QTY_ONORDER_PO) AS QTY_ONORDER_PO,IF(D.QTY_ONORDER_WO IS NULL,'0.0000',D.QTY_ONORDER_WO) AS QTY_ONORDER_WO,IF(D.QTY_REQUIRED IS NULL,'0.0000',D.QTY_REQUIRED) AS QTY_REQUIRED FROM JOB_OPERATIONS A LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE WHERE A.LMO = 'M' AND A.SEQ NOT IN ('995000','998000') AND  C.DATE_CLOSED='1900-01-01' AND LEFT(A.JOB,1)<>'Z' ORDER BY SEQ1")
		v.Local.sSQL.Set("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'PART', A.JOB AS JOB1,A.SUFFIX AS SFX1,A.SEQ AS SEQ1,COALESCE(A.PART,'') AS PART1,'' As DISPLAY_PART1,C.LOCATION AS LOCATION1,A.DESCRIPTION AS DESCR,E.VENDOR,E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE,D.AMT_COST,B.PCSTOPROD,B.PCSCOMPL, (B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN,IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND,IF(D.QTY_ONORDER_PO IS NULL,'0.0000',D.QTY_ONORDER_PO) AS QTY_ONORDER_PO,IF(D.QTY_ONORDER_WO IS NULL,'0.0000',D.QTY_ONORDER_WO) AS QTY_ONORDER_WO,IF(D.QTY_REQUIRED IS NULL,'0.0000',D.QTY_REQUIRED) AS QTY_REQUIRED FROM JOB_OPERATIONS A LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE WHERE A.LMO = 'M' AND A.SEQ NOT IN ('995000','998000') AND  C.DATE_CLOSED='1900-01-01' AND LEFT(A.JOB,1)<>'Z' AND JBSF IN (SELECT CONCAT(JOB,SUFFIX) AS JBSFX FROM V_JOB_HEADER WHERE DATE_CLOSED = '1900-1-1') ORDER BY SEQ1")
	f.Intrinsic.Control.elseIf(v.Args.SalesOrder.Trim,=,"")
'		f.Intrinsic.String.Build("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'PART', A.JOB AS JOB1,A.SUFFIX AS SFX1,A.SEQ AS SEQ1,COALESCE(A.PART,'') AS PART1,'' As DISPLAY_PART1,C.LOCATION AS LOCATION1,A.DESCRIPTION AS DESCR,E.VENDOR,E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE,D.AMT_COST,B.PCSTOPROD,B.PCSCOMPL,(B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN,IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND,IF(D.QTY_ONORDER_PO IS NULL,'0.0000',D.QTY_ONORDER_PO) AS QTY_ONORDER_PO,IF(D.QTY_ONORDER_WO IS NULL,'0.0000',D.QTY_ONORDER_WO) AS QTY_ONORDER_WO,IF(D.QTY_REQUIRED IS NULL,'0.0000',D.QTY_REQUIRED) AS QTY_REQUIRED FROM JOB_OPERATIONS A LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE WHERE A.LMO = 'M' AND A.SEQ NOT IN ('995000','998000') AND C.DATE_CLOSED='1900-01-01' AND LEFT(A.JOB,1)<>'Z' AND CUSTOMER='{0}'  ORDER BY SEQ1",V.Args.Customer,v.Local.ssql)
		f.Intrinsic.String.Build("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'PART', A.JOB AS JOB1,A.SUFFIX AS SFX1,A.SEQ AS SEQ1,COALESCE(A.PART,'') AS PART1,'' As DISPLAY_PART1,C.LOCATION AS LOCATION1,A.DESCRIPTION AS DESCR,E.VENDOR,E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE,D.AMT_COST,B.PCSTOPROD,B.PCSCOMPL,(B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN,IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND,IF(D.QTY_ONORDER_PO IS NULL,'0.0000',D.QTY_ONORDER_PO) AS QTY_ONORDER_PO,IF(D.QTY_ONORDER_WO IS NULL,'0.0000',D.QTY_ONORDER_WO) AS QTY_ONORDER_WO,IF(D.QTY_REQUIRED IS NULL,'0.0000',D.QTY_REQUIRED) AS QTY_REQUIRED FROM JOB_OPERATIONS A LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE WHERE A.LMO = 'M' AND A.SEQ NOT IN ('995000','998000') AND C.DATE_CLOSED='1900-01-01' AND LEFT(A.JOB,1)<>'Z' AND CUSTOMER='{0}' AND JBSF IN (SELECT CONCAT(JOB,SUFFIX) AS JBSFX FROM V_JOB_HEADER WHERE  CUSTOMER='{0}' AND DATE_CLOSED = '1900-1-1')  ORDER BY SEQ1",V.Args.Customer,v.Local.ssql)
	f.Intrinsic.Control.Else
'		f.Intrinsic.String.Build("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'PART', A.JOB AS JOB1,A.SUFFIX AS SFX1,A.SEQ AS SEQ1,COALESCE(A.PART,'') AS PART1,'' As DISPLAY_PART1,C.LOCATION AS LOCATION1,A.DESCRIPTION AS DESCR,E.VENDOR,E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE,D.AMT_COST,B.PCSTOPROD,B.PCSCOMPL,(B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN,IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND,IF(D.QTY_ONORDER_PO IS NULL,'0.0000',D.QTY_ONORDER_PO) AS QTY_ONORDER_PO,IF(D.QTY_ONORDER_WO IS NULL,'0.0000',D.QTY_ONORDER_WO) AS QTY_ONORDER_WO,IF(D.QTY_REQUIRED IS NULL,'0.0000',D.QTY_REQUIRED) AS QTY_REQUIRED FROM JOB_OPERATIONS A LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE WHERE A.LMO = 'M' AND A.SEQ NOT IN ('995000','998000') AND C.DATE_CLOSED='1900-01-01' AND LEFT(A.JOB,1)<>'Z' AND C.CUSTOMER='{0}' AND C.SALES_ORDER='{1}' ORDER BY SEQ1",V.Args.Customer,V.Args.SalesOrder,v.Local.ssql)
		f.Intrinsic.String.Build("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS, rtrim(IF(INV_LXR.DISPLAY_PART is null, SUBSTRING(A.PART, 1, 20), INV_LXR.DISPLAY_PART)) AS 'PART', A.JOB AS JOB1,A.SUFFIX AS SFX1,A.SEQ AS SEQ1,COALESCE(A.PART,'') AS PART1,'' As DISPLAY_PART1,C.LOCATION AS LOCATION1,A.DESCRIPTION AS DESCR,E.VENDOR,E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE,D.AMT_COST,B.PCSTOPROD,B.PCSCOMPL,(B.PCSTOPROD - B.PCSCOMPL) AS PCSREMAIN,IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND,IF(D.QTY_ONORDER_PO IS NULL,'0.0000',D.QTY_ONORDER_PO) AS QTY_ONORDER_PO,IF(D.QTY_ONORDER_WO IS NULL,'0.0000',D.QTY_ONORDER_WO) AS QTY_ONORDER_WO,IF(D.QTY_REQUIRED IS NULL,'0.0000',D.QTY_REQUIRED) AS QTY_REQUIRED FROM JOB_OPERATIONS A LEFT JOIN INV_LXR ON A.PART = INV_LXR.GSS_PART LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS  LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE WHERE A.LMO = 'M' AND A.SEQ NOT IN ('995000','998000') AND C.DATE_CLOSED='1900-01-01' AND LEFT(A.JOB,1)<>'Z' AND C.CUSTOMER='{0}' AND C.SALES_ORDER='{1}' AND JBSF IN (SELECT CONCAT(JOB,SUFFIX) AS JBSFX FROM V_JOB_HEADER WHERE  CUSTOMER='{0}' AND SALES_ORDER='{1}' AND DATE_CLOSED = '1900-1-1') ORDER BY SEQ1",V.Args.Customer,V.Args.SalesOrder,v.Local.ssql)
	f.Intrinsic.Control.EndIf	
	f.Intrinsic.Control.CallSub(cleanQuery,"Active",v.Local.bActive,"Query",v.Local.sSql)
	f.Intrinsic.Variable.ArgToVar("rSQL",v.Local.sSql)
	f.Data.DataTable.CreateFromSQL("dtChild","CON",v.Local.sSQL,true)
	
	'Labour
	gui.FrmMaster.prgBar.Value(35)
	gui.FrmMaster.lblDateUpdated.Caption("Creating Labour Relation for Jobs")
	f.Intrinsic.Control.if(v.Args.salesorder.Trim,=,"")
	f.Intrinsic.Control.AndIf(v.Args.Customer.Trim,=,"")
		v.Local.sSQL.Set("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS,A.JOB,A.SUFFIX,A.SEQ,B.SEQRES,B.DESCR,B.STARTDATE,B.DUEDATE,B.COMPLDATE, A.CODE_SORT_OPER,B.SPM,B.OVERLAP,B.NOMACH,B.HOURSORIG+B.INITSU AS EST_HRS, B.FLOAT, B.HOURSAPPL AS ACT_HRS,(B.HOURSORIG+B.INITSU)-B.HoursAppl AS REM_HRS, IF( ifnull(Compldate,'1900-01-01')='1900-01-01',(((B.HOURSORIG+B.INITSU) * (1+(1-B.SPM))) - (If(B.HoursAppl > (B.HOURSORIG+B.INITSU),(0),B.HoursAppl)) + Float),0) as TotHrsRem,  B.PCSTOPROD AS ORDER_QTY,B.PCSCOMPL AS COMPL_QTY,B.PCSREMAIN AS PCS_REM FROM JOB_OPERATIONS A LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS WHERE A.LMO = 'L' AND LEFT(A.JOB,1)<>'Z'   AND A.SEQ NOT IN ('996000','998500') AND JBSF IN (SELECT CONCAT(JOB,SUFFIX) AS JBSFX FROM V_JOB_HEADER WHERE DATE_CLOSED = '1900-1-1') ORDER BY A.JOB,A.SUFFIX,A.SEQ;")
	f.Intrinsic.Control.elseIf(v.Args.SalesOrder.Trim,=,"")
		f.Intrinsic.String.Build("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS,A.JOB,A.SUFFIX,A.SEQ,B.SEQRES,B.DESCR,B.STARTDATE,B.DUEDATE,B.COMPLDATE, A.CODE_SORT_OPER,B.SPM,B.OVERLAP,B.NOMACH,B.HOURSORIG+B.INITSU AS EST_HRS, B.FLOAT, B.HOURSAPPL AS ACT_HRS,(B.HOURSORIG+B.INITSU)-B.HoursAppl AS REM_HRS, IF( ifnull(Compldate,'1900-01-01')='1900-01-01',(((B.HOURSORIG+B.INITSU) * (1+(1-B.SPM))) - (If(B.HoursAppl > (B.HOURSORIG+B.INITSU),(0),B.HoursAppl)) + Float),0) as TotHrsRem, B.PCSTOPROD AS ORDER_QTY,B.PCSCOMPL AS COMPL_QTY,B.PCSREMAIN AS PCS_REM FROM JOB_OPERATIONS A LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS WHERE A.LMO = 'L' AND LEFT(A.JOB,1)<>'Z'   AND A.SEQ NOT IN ('996000','998500') AND JBSF IN (SELECT CONCAT(JOB,SUFFIX) AS JBSFX FROM V_JOB_HEADER WHERE  CUSTOMER='{0}' AND DATE_CLOSED = '1900-1-1') ORDER BY A.JOB,A.SUFFIX,A.SEQ;",v.Args.Customer.Trim,v.Local.ssql)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS,A.JOB,A.SUFFIX,A.SEQ,B.SEQRES,B.DESCR,B.STARTDATE,B.DUEDATE,B.COMPLDATE, A.CODE_SORT_OPER,B.SPM,B.OVERLAP,B.NOMACH,B.HOURSORIG+B.INITSU AS EST_HRS, B.FLOAT, B.HOURSAPPL AS ACT_HRS,(B.HOURSORIG+B.INITSU)-B.HoursAppl AS REM_HRS, IF( ifnull(Compldate,'1900-01-01')='1900-01-01',(((B.HOURSORIG+B.INITSU) * (1+(1-B.SPM))) - (If(B.HoursAppl > (B.HOURSORIG+B.INITSU),(0),B.HoursAppl)) + Float),0) as TotHrsRem, B.PCSTOPROD AS ORDER_QTY,B.PCSCOMPL AS COMPL_QTY,B.PCSREMAIN AS PCS_REM FROM JOB_OPERATIONS A LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS WHERE A.LMO = 'L' AND LEFT(A.JOB,1)<>'Z'   AND A.SEQ NOT IN ('996000','998500') AND JBSF IN (SELECT CONCAT(JOB,SUFFIX) AS JBSFX FROM V_JOB_HEADER WHERE  CUSTOMER='{0}' AND SALES_ORDER='{1}' AND DATE_CLOSED = '1900-1-1') ORDER BY A.JOB,A.SUFFIX,A.SEQ;",v.Args.Customer.Trim,v.Args.SalesOrder,v.Local.ssql)
	f.Intrinsic.Control.EndIf	
	f.Intrinsic.Control.CallSub(cleanQuery,"Active",v.Local.bActive,"Query",v.Local.sSql)
	f.Intrinsic.Variable.ArgToVar("rSQL",v.Local.sSql)
	f.Data.DataTable.CreateFromSQL("dtChildLabr","CON",v.Local.sSQL,true)
	
	'Outside
	gui.FrmMaster.prgBar.Value(36)
	gui.FrmMaster.lblDateUpdated.Caption("Creating Outside Relation for Jobs")
	f.Intrinsic.Control.if(v.Args.salesorder.Trim,=,"")
	f.Intrinsic.Control.AndIf(v.Args.Customer.Trim,=,"")
'		V.Local.sSQL.SET("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS,A.JOB,A.SUFFIX,A.SEQ,C.NAME_VENDOR,B.DESCR,B.STARTDATE,B.DUEDATE,B.COMPLDATE, B.HOURSORIG, D.PURCHASE_ORDER AS PURCHASE_ORDER2,LEFT(D.RECORD_NO,3) AS LINE2 FROM JOB_OPERATIONS A LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS LEFT JOIN V_VENDOR_MASTER C ON B.OPCODE = C.VENDOR LEFT JOIN V_PO_LINES D ON A.JOB = D.JOB AND A.SUFFIX = D.SUFFIX AND A.SEQ = D.SEQUENCE LEFT JOIN V_JOB_HEADER E ON E.JOB = A.JOB AND E.SUFFIX = A.SUFFIX WHERE A.LMO = 'O' AND LEFT(A.JOB,1)<>'Z'  AND A.SEQ <> '997000' AND E.DATE_CLOSED='1900-01-01' ORDER BY A.JOB,A.SUFFIX,A.SEQ;")
		V.Local.sSQL.SET("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS,A.JOB,A.SUFFIX,A.SEQ,C.NAME_VENDOR,B.DESCR,B.STARTDATE,B.DUEDATE,B.COMPLDATE, B.HOURSORIG, D.PURCHASE_ORDER AS PURCHASE_ORDER2,LEFT(D.RECORD_NO,3) AS LINE2 FROM JOB_OPERATIONS A LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS LEFT JOIN V_VENDOR_MASTER C ON B.OPCODE = C.VENDOR LEFT JOIN V_PO_LINES D ON A.JOB = D.JOB AND A.SUFFIX = D.SUFFIX AND A.SEQ = D.SEQUENCE LEFT JOIN V_JOB_HEADER E ON E.JOB = A.JOB AND E.SUFFIX = A.SUFFIX WHERE A.LMO = 'O' AND LEFT(A.JOB,1)<>'Z'  AND A.SEQ <> '997000' AND E.DATE_CLOSED='1900-01-01' AND JBSF IN (SELECT CONCAT(JOB,SUFFIX) AS JBSFX FROM V_JOB_HEADER WHERE DATE_CLOSED = '1900-1-1') ORDER BY A.JOB,A.SUFFIX,A.SEQ;")
	f.Intrinsic.Control.elseIf(v.Args.SalesOrder.Trim,=,"")
'		f.Intrinsic.String.Build("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS,A.JOB,A.SUFFIX,A.SEQ,C.NAME_VENDOR,B.DESCR,B.STARTDATE,B.DUEDATE,B.COMPLDATE, B.HOURSORIG, D.PURCHASE_ORDER AS PURCHASE_ORDER2,LEFT(D.RECORD_NO,3) AS LINE2 FROM JOB_OPERATIONS A LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS LEFT JOIN V_VENDOR_MASTER C ON B.OPCODE = C.VENDOR LEFT JOIN V_PO_LINES D ON A.JOB = D.JOB AND A.SUFFIX = D.SUFFIX AND A.SEQ = D.SEQUENCE  LEFT JOIN V_JOB_HEADER E ON E.JOB = A.JOB AND E.SUFFIX = A.SUFFIX WHERE  A.LMO = 'O' AND LEFT(A.JOB,1)<>'Z' AND A.SEQ <> '997000'  AND E.DATE_CLOSED='1900-01-01' AND E.CUSTOMER='{0}' ORDER BY A.JOB,A.SUFFIX,A.SEQ;",v.Args.Customer,v.Local.ssql)
		f.Intrinsic.String.Build("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS,A.JOB,A.SUFFIX,A.SEQ,C.NAME_VENDOR,B.DESCR,B.STARTDATE,B.DUEDATE,B.COMPLDATE, B.HOURSORIG, D.PURCHASE_ORDER AS PURCHASE_ORDER2,LEFT(D.RECORD_NO,3) AS LINE2 FROM JOB_OPERATIONS A LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS LEFT JOIN V_VENDOR_MASTER C ON B.OPCODE = C.VENDOR LEFT JOIN V_PO_LINES D ON A.JOB = D.JOB AND A.SUFFIX = D.SUFFIX AND A.SEQ = D.SEQUENCE  LEFT JOIN V_JOB_HEADER E ON E.JOB = A.JOB AND E.SUFFIX = A.SUFFIX WHERE  A.LMO = 'O' AND LEFT(A.JOB,1)<>'Z' AND A.SEQ <> '997000'  AND E.DATE_CLOSED='1900-01-01' AND E.CUSTOMER='{0}' AND JBSF IN (SELECT CONCAT(JOB,SUFFIX) AS JBSFX FROM V_JOB_HEADER WHERE  CUSTOMER='{0}' AND DATE_CLOSED = '1900-1-1') ORDER BY A.JOB,A.SUFFIX,A.SEQ;",v.Args.Customer,v.Local.ssql)
	f.Intrinsic.Control.Else
'		f.Intrinsic.String.Build("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS,A.JOB,A.SUFFIX,A.SEQ,C.NAME_VENDOR,B.DESCR,B.STARTDATE,B.DUEDATE,B.COMPLDATE, B.HOURSORIG, D.PURCHASE_ORDER AS PURCHASE_ORDER2,LEFT(D.RECORD_NO,3) AS LINE2 FROM JOB_OPERATIONS A LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS LEFT JOIN V_VENDOR_MASTER C ON B.OPCODE = C.VENDOR LEFT JOIN V_PO_LINES D ON A.JOB = D.JOB AND A.SUFFIX = D.SUFFIX AND A.SEQ = D.SEQUENCE  LEFT JOIN V_JOB_HEADER E ON E.JOB = A.JOB AND E.SUFFIX = A.SUFFIX WHERE A.LMO = 'O' AND LEFT(A.JOB,1)<>'Z' AND A.SEQ <> '997000' AND E.DATE_CLOSED='1900-01-01' AND E.CUSTOMER='{0}' AND SALES_ORDER='{1}' ORDER BY A.JOB,A.SUFFIX,A.SEQ;",v.Args.Customer.Trim,v.Args.SalesOrder,v.Local.ssql)
		f.Intrinsic.String.Build("SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS 'JS', CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS,A.JOB,A.SUFFIX,A.SEQ,C.NAME_VENDOR,B.DESCR,B.STARTDATE,B.DUEDATE,B.COMPLDATE, B.HOURSORIG, D.PURCHASE_ORDER AS PURCHASE_ORDER2,LEFT(D.RECORD_NO,3) AS LINE2 FROM JOB_OPERATIONS A LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS LEFT JOIN V_VENDOR_MASTER C ON B.OPCODE = C.VENDOR LEFT JOIN V_PO_LINES D ON A.JOB = D.JOB AND A.SUFFIX = D.SUFFIX AND A.SEQ = D.SEQUENCE  LEFT JOIN V_JOB_HEADER E ON E.JOB = A.JOB AND E.SUFFIX = A.SUFFIX WHERE A.LMO = 'O' AND LEFT(A.JOB,1)<>'Z' AND A.SEQ <> '997000' AND E.DATE_CLOSED='1900-01-01' AND E.CUSTOMER='{0}' AND SALES_ORDER='{1}' AND JBSF IN (SELECT CONCAT(JOB,SUFFIX) AS JBSFX FROM V_JOB_HEADER WHERE CUSTOMER='{0}' AND SALES_ORDER='{1}' AND DATE_CLOSED = '1900-1-1') ORDER BY A.JOB,A.SUFFIX,A.SEQ;",v.Args.Customer.Trim,v.Args.SalesOrder,v.Local.ssql)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.CallSub(cleanQuery,"Active",v.Local.bActive,"Query",v.Local.sSql)
	f.Intrinsic.Variable.ArgToVar("rSQL",v.Local.sSql)
	f.Data.DataTable.CreateFromSQL("dtChildOuts","CON",v.Local.sSQL,true)
	
	'Save all to XML
	v.Local.sFileXML.Declare
	v.Local.sfilematl.Declare
	V.Local.sfilelabr.Declare
	v.Local.sfileouts.Declare
	v.Local.sfilemulti.Declare
 	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.Caller.CompanyCode,"_5657_ViewMatl.xml",v.Local.sfilematl)
 	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.Caller.CompanyCode,"_5657_ViewLabr.xml",v.Local.sfilelabr)
 	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.Caller.CompanyCode,"_5657_ViewOuts.xml",v.Local.sfileouts)
 	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.Caller.CompanyCode,"_5657_ViewMulti.xml",v.Local.sfilemulti)
	f.Data.DataTable.SaveToXML("dtChild",0,true,v.Local.sfileMatl)
	f.Data.DataTable.SaveToXML("dtChildLabr",0,true,v.Local.sfilelabr)
	f.Data.DataTable.SaveToXML("dtChildOuts",0,true,v.Local.sfileouts)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtoper.xml",v.Local.sfilexml)
	f.Data.DataTable.SaveToXML("dtOper",0,true,v.Local.sfilexml)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtall2.xml",v.Local.sfilexml)
	f.Data.DataTable.SaveToXML("dtAll2",0,true,v.Local.sfilexml)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtAllM.xml",v.Local.sFileXML)
	f.Data.DataTable.SaveToXML("dtAllM",0,true,v.Local.sFileXML)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtAllO.xml",v.Local.sFileXML)
	f.Data.DataTable.SaveToXML("dtAllO",0,true,v.Local.sFileXML)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtChild.xml",v.Local.sFileXML)
	f.Data.DataTable.SaveToXML("dtChild",0,true,v.Local.sFileXML)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtChildLabr.xml",v.Local.sFileXML)
	f.Data.DataTable.SaveToXML("dtChildLabr",0,true,v.Local.sFileXML)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtChildOuts.xml",v.Local.sFileXML)
	f.Data.DataTable.SaveToXML("dtChildOuts",0,true,v.Local.sFileXML)
		
		
	'Load from XML, creating new data table, add relation
		f.Data.DataTable.CreateFromXML("dtAll2$dtChild",v.Local.sfileMatl,true)		
		F.Data.DataView.Create("dtAll2$dtChild","dvMatl")
		F.Data.DataTable.AddRelation("dtAll2","JS","dtAll2$dtChild","JS","Material")
	
		f.Data.DataTable.CreateFromXML("dtAll2$dtChildLabr",v.Local.sfilelabr,true)
		F.Data.DataView.Create("dtAll2$dtChildLabr","dvLabr")
		F.Data.DataTable.AddRelation("dtAll2","JS","dtall2$dtChildLabr","JS","Labour")

		f.Data.DataTable.CreateFromXML("dtAll2$dtChildOuts",v.Local.sfileouts,true)
		F.Data.DataView.Create("dtAll2$dtChildOuts","dvOuts")
		F.Data.DataTable.AddRelation("dtAll2","JS","dtall2$dtChildOuts","JS","Outside")

	'Create a Dataview to filter days late
	f.Data.DataView.Create("dtAll2","dvLate",22,"DAYS_LATE > 0","WOLabel ASC")
	
	'If custom 6196 program installed
	f.Intrinsic.Control.If(v.Global.bCustomMultiPartTrack)
		f.Intrinsic.Control.If(v.DataTable.dtChildMulti.Exists)
			f.Data.DataTable.Close("dtChildMulti")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromSQL("dtChildMulti","con","SELECT a.* FROM GAB_6196_MULTI_PART_TRACK A LEFT JOIN V_JOB_HEADER B ON A.JOB = B.JOB AND A.SUFFIX=B.SUFFIX WHERE B.DATE_CLOSED='1900-01-01'",true)
		F.Data.DataTable.AddColumn("dtChildMulti","JobSteps","string")
		F.Data.DataTable.AddColumn("dtChildMulti","JS","string")
		f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.dtChildMulti.RowCount--,1)
			f.Intrinsic.Control.For(v.Local.i2,1,15,1)	
				f.Intrinsic.Control.If(v.DataTable.dtChildMulti(v.Local.iCnt).LABOUR_[v.Local.i2]_WC!FIELDVALTRIM,<>,"")	
					f.Intrinsic.Control.If(v.DataTable.dtChildMulti(v.Local.iCnt).LABOUR_[v.Local.i2]!FIELDVAL)
						f.Intrinsic.String.Concat(v.Local.sJobSteps,"~",v.DataTable.dtChildMulti(v.Local.iCnt).LABOUR_[v.Local.i2]_WC!FIELDVALTRIM," / ",v.local.sJobSteps)
					f.Intrinsic.control.Else
						f.Intrinsic.String.Concat(v.Local.sJobSteps,"",v.DataTable.dtChildMulti(v.Local.iCnt).LABOUR_[v.Local.i2]_WC!FIELDVALTRIM," / ",v.local.sJobSteps)
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Next(v.Local.i2)
			f.Intrinsic.String.Concat(v.DataTable.dtChildMulti(v.Local.iCnt).JOB!Fieldvaltrim,v.DataTable.dtChildMulti(v.Local.iCnt).Suffix!Fieldvaltrim,v.Local.sJS)
			f.Intrinsic.String.Replace(v.Local.sJobSteps,"~",v.Local.sMark,v.Local.sJobSteps)
			f.Intrinsic.String.Len(v.Local.sJobSteps,v.Local.lret)
			f.Intrinsic.Math.Sub(v.Local.lret,3,v.Local.lret)
			f.Intrinsic.String.left(v.Local.sJobSteps,v.Local.lret,v.Local.sJobSteps)
			f.Data.DataTable.SetValue("dtChildMulti",v.Local.iCnt,"JS",v.Local.sJS,"JobSteps",v.Local.sJobSteps)
			v.local.sJobSteps.Set("")
		f.Intrinsic.Control.Next(v.local.iCnt)
		
		f.Data.DataTable.SaveToXML("dtChildMulti",0,true,v.Local.sfilemulti)
		
		f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtChildOuts.xml",v.Local.sFileXML)
		f.Data.DataTable.SaveToXML("dtChildMulti",0,true,v.Local.sFileXML)
		
		f.Data.DataTable.CreateFromXML("dtAll2$dtChildMulti",v.Local.sFileMulti,true)
		F.Data.DataView.Create("dtAll2$dtChildMulti","dvMulti")
		f.Data.DataTable.AddRelation("dtAll2","JS","dtAll2$dtChildMulti","JS","Multiple Parts")
	f.Intrinsic.Control.EndIf
	
	'Remove unecessary column
	f.Data.DataTable.RemoveColumn("dtAllM","SALESORDERLINE")
	f.Data.DataTable.RemoveColumn("dtAllO","SALESORDERLINE")
	f.Data.DataTable.RemoveColumn("dtAll2","SALESORDERLINE")
	f.Data.DataTable.RemoveColumn("dtOper","SALESORDERLINE")
	
	
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	F.ODBC.Connection!CON.Close
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.ProgramData.End

Program.Sub.Process_JobSteps.Start
F.Intrinsic.Control.Try
	V.Local.iCnt.Declare
	V.Local.sRet.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	v.Local.sJobSteps.Declare
	v.Local.sMark.Declare
	v.Local.sSeq.Declare
	V.Local.sStep.Declare
	V.Local.sJS.Declare
	V.Local.sXML.Declare	
	v.Local.sSearch.Declare
	V.Local.sCMarkFile.Declare
	v.Local.x.Declare(long)
	v.Local.lret.Declare	
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_5657_COMPLETION.txt",v.Local.sCMarkFile)
	f.Intrinsic.File.File2String(v.Local.sCMarkFile,v.Local.sMark)
	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.dtAll2.RowCount--,1)			
		'Job Step
		V.Local.sJob.Set(V.DataTable.dtAll2(V.Local.iCnt).JOB!FieldVal)
		V.Local.sSuffix.Set(V.DataTable.dtAll2(V.Local.iCnt).SUFFIX!FieldVal)
		f.Intrinsic.String.Build("JOB='{0}' AND SUFFIX='{1}'",v.Local.sJob,v.Local.sSuffix,v.Local.sSearch)
		f.Data.DataTable.Select("JobOp",v.Local.sSearch,v.local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
			F.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
			f.Intrinsic.Control.For(v.local.x,0,v.Local.sRet.UBound,1)
				v.Local.sStep.Set(v.DataTable.JobOp(v.Local.sRet(v.Local.x)).JOBSTEPS!FIELDVALTRIM)
				
				f.Intrinsic.Control.If(v.Local.sStep.Trim,=,"TASK")
					v.Local.sStep.Set(v.DataTable.jobOp(v.Local.sRet(v.Local.x)).DESCRIPTION!FIELDVALTRIM)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.Control.If(v.Local.sStep.Trim,=,"~TASK")
					f.Intrinsic.String.Concat("~",v.DataTable.jobOp(v.Local.sRet(v.Local.x)).DESCRIPTION!FIELDVALTRIM,v.Local.sStep)
				f.Intrinsic.Control.EndIf
				
				f.Intrinsic.String.Concat(v.Local.sJobsteps,v.Local.sStep," / ",v.Local.sJobSteps)
			f.Intrinsic.Control.Next(v.Local.x)
			
			F.Intrinsic.String.InstrRev(V.Local.sJobSteps,"/",V.Local.lret)
			f.Intrinsic.Math.Sub(v.Local.lret,1,v.Local.lret)
			f.Intrinsic.String.Left(v.Local.sJobSteps,v.Local.lret,v.Local.sJobSteps)
			f.Intrinsic.String.Replace(v.Local.sJobSteps,"~",v.Local.sMark,v.Local.sJobSteps)
		f.Intrinsic.Control.Else
			v.Local.sJobSteps.Set("")
		f.Intrinsic.Control.EndIf
		

		f.Data.DataTable.SetValue("dtAll2",v.Local.iCnt,"JobSteps",v.Local.sJobSteps)
		v.Local.sJobSteps.Set("")

	f.Intrinsic.Control.Next(v.Local.iCnt)	

	f.Intrinsic.Control.If(v.DataTable.dtJobSteps2.Exists)
		f.Data.DataTable.Close("dtJobSteps2")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTable("dtAll2","dvAll2","dtJobSteps2")
	f.Data.Dictionary.createfromdatatable("dJobSteps2","dtJobSteps2","JS","JobSteps")
	f.Data.DataTable.FillFromDictionary("dtAllM","dJobSteps2","JS","JobSteps")
	f.Data.Dictionary.Close("dJobSteps2")
	

F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	F.ODBC.Connection!CON.Close
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.Process_JobSteps.End

Program.Sub.setRowID.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.sPc.Declare
	v.Local.sret.Declare
	v.Local.sSelect.Declare
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAllM.RowCount--,1)
		f.Data.DataTable.SetValue("dtAllM",v.Local.i,"MyRowID",V.Local.I)
		
		'Cleanup pcs to produce, set to 0 if blank
		v.Local.sPc.Set(V.DataTable.dtAllM(v.Local.i).PCSTOPROD!fieldvaltrim)
		f.Intrinsic.Control.If(v.Local.sPc,=,"")
			v.Local.sPc.Set(0)
		f.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.DataTable.dtAllM(v.Local.i).PURCHASE_ORDER!FIELDVALTRIM,<>,"")
			f.Intrinsic.String.Build("POANDLINE='{0}'",V.DataTable.dtAllM(v.Local.i).POANDLINE!FIELDVALTRIM,v.Local.sSelect)
			f.Data.DataTable.Select("dtPOSQ",v.Local.sSelect,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
				f.Data.DataTable.SetValue("dtAllM",v.Local.i,"TEXT",v.Datatable.dtPOSQ(v.Local.sret).TEXT!FIELDVALTRIM)
			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		'Simple logic check for the material management tab
		f.Intrinsic.Control.If(v.DataTable.dtAllM(v.Local.i).QTY_ONHAND!FIELDVAL,>=,V.local.sPc)
			f.Data.DataTable.SetValue("dtAllM",v.Local.i,"MaterialManage","In Stock")
		f.Intrinsic.Control.ElseIf(v.DataTable.dtAllM(v.Local.i).PURCHASE_ORDER!FIELDVALTRIM,<>,"")
			f.Data.DataTable.SetValue("dtAllM",v.Local.i,"MaterialManage","On Order")
		f.Intrinsic.Control.Else
			f.Data.DataTable.SetValue("dtAllM",v.Local.i,"MaterialManage","Out of Stock")
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.DataTable.dtAllM(v.Local.i).COST!FIELDVAL,=,0)
			f.Data.DataTable.SetValue("dtAllM",v.Local.i,"Cost",v.DataTable.dtAllM(v.Local.i).BURDEN!FIELDVAL)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAllO.RowCount--,1)
		f.Data.DataTable.SetValue("dtAllO",v.Local.i,"MyRowID",V.Local.I)
		f.Intrinsic.Control.If(v.DataTable.dtAllO(v.Local.i).COST!FIELDVAL,=,0)
			f.Data.DataTable.SetValue("dtAllO",v.Local.i,"Cost",v.DataTable.dtAllO(v.Local.i).BURDEN!FIELDVAL)
		f.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.DataTable.dtAllO(v.Local.i).PURCHASE_ORDER!FIELDVALTRIM,<>,"")
			f.Intrinsic.String.Build("POANDLINE='{0}'",V.DataTable.dtAllO(v.Local.i).POANDLINE!FIELDVALTRIM,v.Local.sSelect)
			f.Data.DataTable.Select("dtPOSQ",v.Local.sSelect,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
				f.Data.DataTable.SetValue("dtAllO",v.Local.i,"TEXT",v.Datatable.dtPOSQ(v.Local.sret).TEXT!FIELDVALTRIM)
			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.Next(v.Local.i)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	F.ODBC.Connection!CON.Close
	F.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.setRowID.End

Program.Sub.setOperData.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtOperIds.RowCount--,1)
		F.Data.DataTable.SetValue("dtOper",v.DataTable.dtOperIds(v.Local.i).RowID!fieldval,v.Args.OperColumn.Trim,v.Args.OperValue)
	f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	F.ODBC.Connection!CON.Close
	F.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.setOperData.End

Program.Sub.setAllMData.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAllMIds.RowCount--,1)
		F.Intrinsic.Control.If(Variable.Datatable.dtAllMIds(Variable.Local.i).RowID!fieldval,<>,"***NORETURN***")
			F.Data.DataTable.SetValue("dtAllM",v.DataTable.dtAllMIds(v.Local.i).RowID!fieldval,v.Args.MatlColumn.Trim,v.Args.MatlValue)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	F.ODBC.Connection!CON.Close
	F.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.setAllMData.End

Program.Sub.setAllOData.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAllOIds.RowCount--,1)
		F.Intrinsic.Control.If(Variable.Datatable.dtAllOIds(Variable.Local.i).RowID!fieldval,<>,"***NORETURN***")
			F.Data.DataTable.SetValue("dtAllO",v.DataTable.dtAllOIds(v.Local.i).RowID!fieldval,v.Args.OutsColumn.Trim,v.Args.OutsValue)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	F.ODBC.Connection!CON.Close
	F.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.setAllOData.End

Program.Sub.BoostGen.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare(string)
	v.Local.sret.Declare(string)
	V.Local.sJob.Declare(string)
	v.Local.sSuf.Declare(string)
	v.Local.sSeq.Declare(string)
	v.Local.sDtD.Declare(String)
	v.Local.sPrt.Declare(string)
	v.Local.sJSS.Declare(string)
	v.Local.sMat.Declare(string)
	v.Local.sXML.Declare(string)
	V.Local.sMsg.Declare(string)
	v.Local.sRev.Declare(string)
	v.Local.sRtr.Declare(string)
	V.Local.sPart.Declare(string)
	V.Local.shold.Declare(string)
	v.Local.sPath.Declare(string)
	v.Local.sTime.Declare(string)
	v.Local.sSQL2.Declare(string)
	V.Local.sFileName.Declare(string)
	v.Local.sBoostID.Declare
	v.Local.fRet.Declare(float)
	v.Local.i.Declare(long)
	f.Intrinsic.String.Format(v.Ambient.Now,"YYMMDDHHNNSS",v.Local.sTime)
	f.Intrinsic.String.Concat("xmlDoc",v.Local.sTime,v.Local.sXML)
	
	' create the document
	F.global.xml.createDocument(v.local.sXML,False,True,False,False)
	F.global.xml.SetRoot(v.local.sXML,"PPSImport")
	F.Global.XML.CreateAttributeNode(v.local.sXML,"Version","1.1")
	F.Global.XML.SetAttributeToRoot(v.local.sXML,"Version")
	F.Intrinsic.String.Concat(V.Ambient.NewLine,V.Ambient.Tab,V.Local.shold)
	F.global.xml.appendNode(v.local.sXML,"PPSImport",V.Local.shold)
	F.Global.XML.AppendTextNode(v.local.sXML,"PPSImport",V.Ambient.NewLine)
	
	F.Global.XML.CreateElementNode(v.local.sXML,"ProductionOrders","")
	F.Global.XML.AppendNodeToRoot(v.local.sXML,"ProductionOrders")
	F.global.xml.appendNode(v.local.sXML,"ProductionOrders",V.Local.shold)
	F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrders",V.Ambient.NewLine)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dt.RowCount--,1)
		'Check if work order created
		F.Intrinsic.Control.If(v.DataTable.dt(v.Local.i).JOB!FIELDVALTRIM,=,"")
			f.Intrinsic.String.Build("No work order found for sales order line {0}-{1}.  Skipping record.",v.DataTable.dt(v.Local.i).SALES_ORDER!FIELDVALTRIM,v.DataTable.dt(v.Local.i).SALES_ORDER_LINE!FIELDVALTRIM,v.Local.sMsg)
			f.Intrinsic.UI.Msgbox(v.Local.sMsg)
		f.Intrinsic.Control.else
	
			'Check for operation sequence
			f.Intrinsic.String.Build("SELECT SEQ FROM V_JOB_OPERATIONS WHERE JOB='{0}' AND SUFFIX='{1}' AND PART='PROJ'",v.DataTable.dt(v.Local.i).JOB!FIELDVALTRIM,v.DataTable.dt(v.Local.i).SUFFIX!FIELDVALTRIM,V.Local.SSQL)
			F.ODBC.Connection!CON.Executeandreturn(v.Local.sSQL,v.Local.sSeq)
			f.Intrinsic.Control.If(v.Local.sSeq.Trim,<>,"")
				' ======================== PRODUCTION ORDER
				'Grab the router number from QRE if it is the parent
				f.Intrinsic.Control.If(v.DataTable.dt(v.Local.i).SUFFIX!FIELDVALTRIM,=,"000")
					f.Intrinsic.string.Left(v.DataTable.dt(v.Local.i).PART!Fieldval,17,v.Local.spart)
					f.Intrinsic.String.Mid(v.DataTable.dt(v.Local.i).Part!fieldval,18,3,v.Local.srev)
					f.Intrinsic.String.Build("SELECT ROUTER FROM GAB_4486_QRE_HEAD WHERE CUST_PART='{0}' and CUST_REV='{1}'",v.Local.spart.Trim,v.Local.srev.Trim,v.Local.sSQL2)
					f.ODBC.Connection!conx.executeandreturn(v.Local.sSQL2,v.Local.sRtr)
					F.Intrinsic.String.Replace(v.Local.sRtr,"-","_",v.Local.sRtr)
				F.Intrinsic.Control.Else
					v.Local.sRtr.Set(v.DataTable.dt(v.Local.i).PART!FIELDVALTRIM)
				F.Intrinsic.Control.EndIf
				
				' create ProductionOrder node, with attribute
				f.Intrinsic.String.Concat(v.DataTable.dt(v.Local.i).JOB!FIELDVAL,"-",v.DataTable.dt(v.Local.i).SUFFIX!FIELDVALTRIM,"-",v.Local.sSeq,v.Local.sJSS)
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				F.Global.XML.CreateElementNode(v.local.sXML,"ProductionOrder","")
				F.Global.XML.CreateAttributeNode(v.local.sXML,"OrderNo",v.Local.sJSS)
				F.Global.XML.SetAttributeToNode(v.local.sXML,"ProductionOrder","OrderNo")
				F.Global.XML.DestroyNode(v.local.sXML,"OrderNo")
				F.global.xml.appendNode(v.local.sXML,"ProductionOrder",V.Local.shold)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrders","ProductionOrder")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Description
				F.Global.XML.CreateElementNode(v.local.sXML,"Description",v.DataTable.dt(v.Local.i).DESCRIPTION!FIELDVAL)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","Description")
				F.global.xml.appendNode(v.local.sXML,"Description",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"Description")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Barcode
				F.Global.XML.CreateElementNode(v.local.sXML,"Barcode","")
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","Barcode")
				F.global.xml.appendNode(v.local.sXML,"Barcode",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"Barcode")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Sales Order
				F.Global.XML.CreateElementNode(v.local.sXML,"CustomerOrderNo",v.DataTable.dt(v.Local.i).SALES_ORDER!FIELDVAL)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","CustomerOrderNo")
				F.global.xml.appendNode(v.local.sXML,"CustomerOrderNo",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"CustomerOrderNo")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Customer PO
				F.Global.XML.CreateElementNode(v.local.sXML,"CustomerBookingNo",v.DataTable.dt(v.Local.i).JOB!FIELDVAL)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","CustomerBookingNo")
				F.global.xml.appendNode(v.local.sXML,"CustomerBookingNo",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"CustomerBookingNo")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Customer Name
				F.Global.XML.CreateElementNode(v.local.sXML,"CustomerName",v.DataTable.dt(v.Local.i).NAME_CUSTOMER!FIELDVALTRIM)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","CustomerName")
				F.global.xml.appendNode(v.local.sXML,"CustomerName",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"CustomerName")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Customer No
				F.Global.XML.CreateElementNode(v.local.sXML,"CustomerNo",v.DataTable.dt(v.Local.i).CUSTOMER!FIELDVALTRIM)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","CustomerNo")
				F.global.xml.appendNode(v.local.sXML,"CustomerNo",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"CustomerNo")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Part
				'This needs to be BOOST ID number
				f.Intrinsic.String.Replace(v.DataTable.dt(v.Local.i).BoostID!FIELDVALTRIM,"-","_",v.Local.sBoostID)
				F.Global.XML.CreateElementNode(v.local.sXML,"PartNo",v.Local.sBoostID)
				'F.Global.XML.CreateElementNode(v.local.sXML,"PartNo",v.Local.sRtr.Trim)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","PartNo")
				F.global.xml.appendNode(v.local.sXML,"PartNo",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"PartNo")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Part Description
				'Changed to be Part Number Value to overcome boost bug
				F.Global.XML.CreateElementNode(v.local.sXML,"PartDescription",v.DataTable.dt(v.Local.i).DESCRIPTION!FIELDVALTRIM)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","PartDescription")
				F.global.xml.appendNode(v.local.sXML,"PartDescription",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"PartDescription")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Note 2	
				F.Global.XML.CreateElementNode(v.local.sXML,"Note2","")
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","Note2")
				F.global.xml.appendNode(v.local.sXML,"Note2",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"Note2")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' DrawingNo
				F.Global.XML.CreateElementNode(v.local.sXML,"DrawingNo",v.DataTable.dt(v.Local.i).DRAW!FIELDVALTRIM)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","DrawingNo")
				F.global.xml.appendNode(v.local.sXML,"DrawingNo",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"DrawingNo")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' CAD File	
				F.Global.XML.CreateElementNode(v.local.sXML,"CADFilename","")
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","CADFilename")
				F.global.xml.appendNode(v.local.sXML,"CADFilename",V.Local.Shold)
				F.Global.XML.DestroyNode(v.local.sXML,"CADFilename")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Assembly
				F.Global.XML.CreateElementNode(v.local.sXML,"Assembly",v.DataTable.dt(v.Local.i).ASSEMBLY!FIELDVALTRIM)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","Assembly")
				F.Global.Xml.AppendNode(v.local.sXML,"Assembly",V.Local.Shold)
				F.Global.XML.DestroyNode(v.local.sXML,"Assembly")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Due Date
				F.Global.XML.CreateElementNode(v.local.sXML,"DueDate",v.DataTable.dt(v.Local.i).DATE_DUE!FIELDVAL)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","DueDate")
				F.global.xml.appendNode(v.local.sXML,"DueDate",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"DueDate")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Priority
				'Divide by 10 to cope with boost
				F.Intrinsic.Control.If(v.DataTable.dt(v.Local.i).PRIORITY!FIELDVALTRIM,=,"")
					V.Local.fRET.Set("0")
				F.Intrinsic.Control.ElseIf(v.DataTable.dt(v.Local.i).PRIORITY!FIELDVALTRIM,=,"0")
					V.Local.fRET.Set("0")
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Right(v.DataTable.dt(v.Local.i).PRIORITY!FIELDVALTRIM,2,V.Local.fRET)
				F.Intrinsic.Control.EndIf
				F.Global.XML.CreateElementNode(v.local.sXML,"Priority",V.Local.fRET)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","Priority")
				F.global.xml.appendNode(v.local.sXML,"Priority",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"Priority")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Qty
				F.Global.XML.CreateElementNode(v.local.sXML,"DesiredQuantity",v.DataTable.dt(v.Local.i).Qty_Order!FIELDVAL)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","DesiredQuantity")
				F.global.xml.appendNode(v.local.sXML,"DesiredQuantity",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"DesiredQuantity")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Status
				'Per Metco Status should be 10, 30 later
				F.Global.XML.CreateElementNode(v.local.sXML,"Status","10")
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","Status")
				F.global.xml.appendNode(v.local.sXML,"Status",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"Status")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Workcenter
				F.Global.XML.CreateElementNode(v.local.sXML,"WorkplanName","")
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","WorkplanName")
				F.global.xml.appendNode(v.local.sXML,"WorkplanName",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"WorkplanName")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' Material
				'Find the material from QRE
				f.Intrinsic.String.Build("SELECT PART FROM V_JOB_OPERATIONS WHERE JOB='{0}' AND SUFFIX='{1}' AND CODE_SORT_OPER='MAT'",v.datatable.dt(v.Local.i).job!FIELDVAL,v.datatable.dt(v.Local.i).SUFFIX!FIELDVAL,v.Local.ssql)
				f.ODBC.Connection!conx.executeandreturn(v.Local.sSQL,v.Local.sMat)
				F.Global.XML.CreateElementNode(v.local.sXML,"Material",V.Local.sMat.Trim)
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","Material")
				F.global.xml.appendNode(v.local.sXML,"Material",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"Material")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				' FillerPartsOrder
				F.Global.XML.CreateElementNode(v.local.sXML,"FillerPartsOrder","")
				F.Global.XML.AppendNode(v.local.sXML,"ProductionOrder","FillerPartsOrder")
				F.global.xml.appendNode(v.local.sXML,"FillerPartsOrder",V.Local.shold)
				F.Global.XML.DestroyNode(v.local.sXML,"FillerPartsOrder")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
				
				F.Global.XML.DestroyNode(v.local.sXML,"ProductionOrder")
				F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrder",V.Ambient.NewLine)
			f.Intrinsic.Control.Else
				f.Intrinsic.String.Build("Error: Programming Laser (PROJ) workcentre step missing from work order {0}-{1}.  Skipping boost export.",v.DataTable.dt(v.Local.i).JOB!FIELDVALTRIM,v.DataTable.dt(v.Local.i).SUFFIX!FIELDVALTRIM,v.Local.sMsg)
				f.Intrinsic.UI.Msgbox(v.Local.sMsg)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	F.Global.XML.AppendNodeToRoot(v.local.sXML,"ProductionOrders")
	F.Global.XML.AppendTextNode(v.local.sXML,"ProductionOrders",V.Ambient.NewLine)
	F.Global.XML.DestroyNode(v.local.sXML,"ProductionOrders")
	F.Global.XML.DestroyNode(v.local.sXML,"ErpExchange")
	
	'Create File Name
	F.Intrinsic.String.Build("ProdOrderImp{0}.xml",V.Local.sJSS,V.Local.sFileName)
	'f.Intrinsic.String.Concat(v.Caller.LocalGSSTempDir,"\",v.Local.sPath)
	f.Intrinsic.String.Concat("\\vmetcott1\pps\prodAuftrag\import\","",v.Local.sPath)
	F.global.xml.saveDocument(v.local.sXML,V.local.sPath,V.Local.sFileName)
	'close document
	F.global.xml.CloseDocument(v.local.sXML)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.BoostGen.End

Program.Sub.createBoostTable.Start
f.Intrinsic.Control.If(v.DataTable.dt.Exists)
	f.Data.DataTable.Close("dt")
f.Intrinsic.Control.EndIf

f.Data.DataTable.Create("dt",true)
f.Data.DataTable.AddColumn("dt","Job","string")
f.Data.DataTable.AddColumn("dt","Suffix","string")
f.Data.DataTable.AddColumn("dt","Part","string")
f.Data.DataTable.AddColumn("dt","Description","string")
f.Data.DataTable.AddColumn("dt","ParentJob","string")
f.Data.DataTable.AddColumn("dt","ParentSuffix","string")
f.Data.DataTable.AddColumn("dt","Customer","string")
f.Data.DataTable.AddColumn("dt","Customer_PO","string")
f.Data.DataTable.AddColumn("dt","Sales_Order","string")
f.Data.DataTable.AddColumn("dt","DATE_DUE","string")
f.Data.DataTable.AddColumn("dt","NAME_CUSTOMER","string")
f.Data.DataTable.AddColumn("dt","PRIORITY","string")
f.Data.DataTable.AddColumn("dt","Qty_Order","string")
f.Data.DataTable.AddColumn("dt","Draw","string")
f.Data.DataTable.AddColumn("dt","BoostID","string")
f.Data.DataTable.AddColumn("dt","Sales_Order_Line","string")
Program.Sub.createBoostTable.End

Program.Sub.BoostExport.Start
f.Intrinsic.Control.CallSub(resched,"sSwitch","B")
Program.Sub.BoostExport.End

Program.Sub.Resched.Start
f.Intrinsic.Control.Try
	v.Local.sSwitch.Declare(string)
	v.Local.SSQL.Declare(STRING)
	v.Local.irows.Declare(long)
	V.Local.iRows.Set(0)
	v.Local.i.Declare(long)
	v.Local.ddate.Declare(date)
	v.Local.sdate.Declare(string)
	V.Local.SDATELong.declare(string)
	V.Local.sDateUS.Declare(string)
	V.Local.DDATEUS.Declare(date)
	V.Local.SDUE.Declare(STRING)
	v.Local.sDateSched.declare(string)
	v.Local.sparams.Declare(string)
	v.Local.sMessage.Declare(string)
	v.Local.sret.Declare(string)
	v.Local.lret.Declare(long)
	V.Local.sFilename.Declare(string)
	V.Local.sfilename.Set("ROUTERHD.TXT")
	V.Local.sFilenameBOM.Declare(string)
	V.Local.sfilenameBOM.Set("BOMHDR.txt")
	v.Local.sFileDir.Declare(string)
	V.Local.spart.Declare(string)
	V.Local.spartrev.Declare(string)
	v.Local.fSuffix.Declare(float)
	v.Local.sSuffix.Declare(string)
	v.Local.lID.Declare(long)
	V.Local.sNames.Declare(string)
	v.Local.sName.Declare(string)
	v.Local.scustsql.Declare(string)
	v.Local.sValues.Declare(string)
	v.Local.sVal.Declare(string)
	v.Local.sBoostID.Declare(string)
	v.Local.scustpart.Declare(string)
	v.Local.scustrev.Declare(string)
	v.Local.x.Declare(long)
	v.Local.y.Declare(long)
	v.Local.bExit.Declare(boolean)
	v.Local.lHid.Declare
	V.Local.p.Declare(long)
	v.Local.o.Declare(long)
	v.Local.sRouter.Declare
	v.Local.sretPH.Declare
	v.Local.sSplit.Declare
	v.Local.sGssPart.Declare

	v.Local.sSwitch.Set(v.Args.sSwitch)
	f.ODBC.Connection!conx.openconnection(v.Ambient.PDSN,v.Ambient.PUser,v.Ambient.PPass)
			
	f.Intrinsic.Control.If(v.DataTable.dtWO.Exists)
		f.Data.DataTable.Close("dtWO")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.DataTable.dtWOP.Exists)
		f.Data.DataTable.Close("dtWOP")
	f.Intrinsic.Control.EndIf
	
	'Datatable for storing original work orders' position in the grid control
	f.Data.DataTable.Create("dtWO")
	f.Data.DataTable.AddColumn("dtWO","SO","string")
	f.Data.DataTable.AddColumn("dtWO","SOLine","string")
	f.Data.DataTable.AddColumn("dtWO","SODueDate","string")
	f.Data.DataTable.AddColumn("dtWO","OrigRow","long")
	
	'Datatable for printing work orders
	f.Data.DataTable.Create("dtWOP")
	f.Data.DataTable.AddColumn("dtWOP","WO","String")
	f.Data.DataTable.AddColumn("dtWOP","Suffix","string")
	
	'Blank the Router & BOM File
	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sfilename,V.Local.sFileDir)
	f.Intrinsic.File.STRING2FILE(V.Local.sFileDir,"")
	V.Local.sFileDir.Set("")
	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sFilenameBOM,V.Local.sFileDir)
	f.Intrinsic.File.STRING2FILE(V.Local.sFileDir,"")
	
	'Start the process of formatting the files for BOM/ROUTER for upload into Global Shop
	f.Intrinsic.Control.If(v.Local.sSwitch,=,"N")
		f.Intrinsic.String.Concat("Create work orders for sales orders: ",V.Ambient.NewLine,v.Local.sMessage)
	F.Intrinsic.Control.ElseIf(v.Local.sSwitch,=,"B")
		f.Intrinsic.String.Concat("Export work orders to boost: ",V.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Concat("Reschedule work orders: ",v.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll2.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll2(v.Local.i).SelectWO!fieldval,=,"True")
			f.Intrinsic.String.Concat(v.Local.sMessage," ",v.DataTable.dtAll2(v.Local.i).Job!fieldval,"-",v.DataTable.dtAll2(v.Local.i).Suffix!fieldval," ",V.DataTable.dtAll2(V.Local.I).qty_order!FIELDVALTrim," of ",V.DataTable.dtAll2(V.Local.I).Display_part!FieldvalTrim," ",v.Ambient.NewLine,V.Local.sMessage)
			f.Intrinsic.String.Mid(v.DataTable.dtAll2(v.Local.i).Display_part!FIELDVAL,18,3,v.Local.spartrev)
			f.Intrinsic.String.mid(v.DataTable.dtAll2(v.Local.i).Display_part!FIELDVAL,1,17,v.Local.spart)
			f.Data.DataTable.AddRow("dtWO","SO",v.DataTable.dtAll2(v.Local.i).SALES_ORDER!FIELDVAL,"SOLine",v.DataTable.dtAll2(v.Local.i).SALES_ORDER_LINE!Fieldval,"SODueDate",v.DataTable.dtAll2(v.Local.i).DATE_DUE!FIELDVALString,"OrigRow",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.UI.Msgbox(v.Local.sMessage,"Confirmation",4,v.Local.lret)
	'Reset i before continuing on
	v.Local.i.Set(0)
	
	f.Intrinsic.Control.If(v.Local.lret,=,6)
		f.Intrinsic.UI.InvokeWaitDialog("Generating.")
		
		'Bumped this out after the fact, let the scheduling happen as is for speed reasons
		'AFter WO creation, grab the WO number
		F.Intrinsic.Control.For(V.Local.i,0,v.DataTable.dtWO.RowCount--,1)
			v.Local.ddate.Set(V.DataTable.dtWO(v.Local.i).SODueDate!FieldValString)
			'Get Work Order and Suffix
			f.Intrinsic.String.Build("SELECT JOB, SUFFIX, PART FROM V_ORDER_TO_WO WHERE ORDER_NO='{0}' AND ORDER_LINE='{1}0'",v.DataTable.dtWO(v.local.i).SO!fieldvaltrim,v.DataTable.dtWO(v.local.i).SOLine!fieldvaltrim,v.Local.SSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.SSQL,v.Local.sret)
			f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
			
			f.Intrinsic.Control.If(v.Local.sSwitch,=,"B")
				f.Intrinsic.Control.CallSub(createBoostTable)
				'Add Parent Row
				f.Intrinsic.String.Build("SELECT JOB, Suffix, Part, Description, parent_wo as ParentJob, parent_suffix_parent as ParentSuffix, Customer, customer_po, sales_order, Qty_Order, Priority, date_due  FROM V_JOB_HEADER WHERE JOB='{0}' AND SUFFIX='{1}'",v.Local.sret(0),v.Local.sret(1),v.Local.SSQL)
				f.ODBC.Connection!conx.executeandreturn(v.Local.SSQL,v.Local.sval)
				f.Intrinsic.String.Split(v.Local.sVal,"*!*",v.Local.sVal)
				f.Intrinsic.String.build("SELECT NAME_CUSTOMER FROM V_CUSTOMER_MASTER WHERE CUSTOMER='{0}'",v.Local.sVal(6),v.Local.scustsql)
				f.ODBC.Connection!conx.executeandreturn(v.Local.scustsql,v.Local.sname)
				F.Intrinsic.String.Mid(V.Local.sVal(2),18,3,V.LOCAL.scustrev)
				F.Intrinsic.String.Mid(V.Local.sVal(2),1,17,V.Local.scustpart)
				f.Intrinsic.String.Build("SELECT ROUTER FROM GAB_4486_QRE_HEAD WHERE CUST_PART='{0}' and CUST_REV='{1}'",v.Local.scustpart.Trim,v.Local.scustrev.Trim,v.Local.ssql)
				f.ODBC.Connection!conx.executeandreturn(v.Local.SSQL,v.Local.sBoostID)
				F.Data.DataTable.AddRow("dt","Draw",v.Local.sVal(2),"BoostID",v.Local.sBoostID,"JOB",v.Local.sVal(0),"Suffix",v.Local.sVal(1),"Part",v.Local.sVal(2),"Description",v.Local.sVal(3),"ParentJob",v.Local.sVal(4),"ParentSuffix",v.Local.sVal(5),"Customer",v.Local.sVal(6),"Customer_PO",v.Local.sVal(7),"Sales_Order",v.DataTable.dtWO(v.local.i).SO!fieldvaltrim,"Sales_Order_Line",v.DataTable.dtWO(v.local.i).SOLine!fieldvaltrim,"Qty_Order",v.Local.sVal(9),"PRIORITY",v.Local.sVal(10),"DATE_DUE",v.Local.sVal(11),"NAME_CUSTOMER",V.Local.sName.Trim)
				'Get Children
				F.Intrinsic.Control.CallSub(loadbomlevel,"sWOH",v.Local.sret(0),"sWOS",v.Local.sret(1))
				'Add in parent assembly
				f.Data.DataTable.AddColumn("dt","Assembly","string",v.Local.sret(2))
				f.Intrinsic.Control.CallSub(BoostGen)
			f.Intrinsic.Control.EndIf
			
			'If Suffix = '000' then it is a BOM and need to grab the others
			f.Intrinsic.Control.If(v.Local.sret.UBound,>=,1)
				F.Intrinsic.Control.If(V.Local.sret(1),=,"000")
					f.Intrinsic.string.Build("select max(suffix) from V_JOB_HEADER  where job='{0}'",v.Local.sret(0),v.Local.SSQL)
					f.ODBC.Connection!conx.executeandreturn(v.Local.SSQL,v.Local.fSuffix)
					f.Intrinsic.Control.For(v.Local.x,1,v.Local.fSuffix,1)
						f.Intrinsic.String.LPad(v.Local.x,"0",3,v.Local.sSuffix)
						f.Data.DataTable.AddRow("dtWOP","WO",v.Local.sret(0),"Suffix",v.Local.sSuffix)
					f.Intrinsic.Control.next(v.Local.x)
				F.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
			v.Local.fSuffix.Set(1)
		f.Intrinsic.Control.Next(v.Local.i)

		f.Intrinsic.UI.CloseWaitDialog
	f.Intrinsic.Control.EndIf
	f.ODBC.Connection!conx.Close

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!conx.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.endtry
Program.Sub.Resched.End

Program.Sub.LoadBOMLevel.Start
V.Local.bDT.Declare(Boolean,False)
V.Local.fAct.Declare
V.Local.fEst.Declare
V.Local.i.Declare
V.Local.iCLevel.Declare
V.Local.iLevel.Declare
V.Local.sDTName.Declare
V.Local.sFilter.Declare
V.Local.sParentSuffix.Declare
V.Local.sRet.Declare
V.Local.sSQL.Declare
V.Local.sWOH.Declare
v.Local.sWOS.Declare
v.Local.sJobI.Declare
v.Local.sCustSQL.Declare
v.Local.sName.Declare
v.Local.sBoostID.Declare
v.Local.sCustrev.Declare
v.locaL.scustpart.declare

v.Local.sWOH.Set(v.Args.sWOH)
v.Local.sWOS.Set(v.Args.sWOS)

f.Intrinsic.Control.If(v.DataTable.dtJobTemp.Exists)
	f.Data.DataTable.Close("dtJobTemp")
f.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("select JOB, Suffix, Qty_Order, Priority, Part, Description, parent_wo as ParentJob, parent_suffix_parent as ParentSuffix, Customer, customer_po, sales_order, date_due, drawing_customer from V_JOB_HEADER where parent_wo = '{0}' and parent_suffix_parent = '{1}' order by suffix ASC",V.Local.sWOH,V.Local.sWOS,V.Local.sSQL)

F.Data.DataTable.CreateFromSQL("dtJobTemp","conx",V.Local.sSQL,true)
f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtJobTemp.RowCount--,1)
	'Get Name Customer
	f.Intrinsic.String.Build("SELECT NAME_CUSTOMER FROM V_CUSTOMER_MASTER WHERE CUSTOMER='{0}'",v.DataTable.dtJobTemp(v.Local.i).CUSTOMER!fieldvaltrim,v.Local.sCustSQL)
	f.ODBC.Connection!conx.executeandreturn(v.Local.sCustSQL,V.Local.sName)
	
	'Get Boost ID
	F.Intrinsic.String.Mid(V.DataTable.dtJobTemp(v.Local.i).PART!FIELDVALTRIM,18,3,V.LOCAL.scustrev)
	F.Intrinsic.String.Mid(V.DataTable.dtJobTemp(v.Local.i).PART!FIELDVALTRIM,1,17,V.Local.scustpart)
	f.Intrinsic.String.Build("SELECT ROUTER FROM GAB_4486_QRE_HEAD WHERE CUST_PART='{0}' and CUST_REV='{1}'",v.Local.scustpart.Trim,v.Local.scustrev.Trim,v.Local.ssql)
	f.ODBC.Connection!conx.executeandreturn(v.Local.SSQL,v.Local.sBoostID)
	
	'Add to Datatable
	F.Data.DataTable.AddRow("dt","BoostID",v.Local.sBoostID,"Draw",v.DataTable.dtJobTemp(v.Local.i).Drawing_Customer!FIELDVAL,"Qty_Order",v.DataTable.dtJobTemp(v.Local.i).QTY_ORDER!FIELDVAL,"PRIORITY",v.DataTable.dtJobTemp(v.Local.i).PRIORITY!FIELDVALTRIM,"NAME_CUSTOMER",V.Local.sName.Trim,"DATE_DUE",V.DataTable.dtJobTemp(V.Local.i).DATE_DUE!FieldValTrim,"JOB",V.DataTable.dtJobTemp(V.Local.i).JOB!FieldValTrim,"Suffix",V.DataTable.dtJobTemp(V.Local.i).Suffix!FieldValTrim,"Part",V.DataTable.dtJobTemp(V.Local.i).Part!FieldValTrim,"Description",V.DataTable.dtJobTemp(V.Local.i).Description!FieldValTrim,"ParentJob",V.DataTable.dtJobTemp(V.Local.i).ParentJob!FieldValTrim,"ParentSuffix",V.DataTable.dtJobTemp(V.Local.i).ParentSuffix!FieldValTrim,"Customer",V.DataTable.dtJobTemp(V.Local.i).customer!FieldValTrim,"Customer_PO",V.DataTable.dtJobTemp(V.Local.i).Customer_PO!FieldValTrim,"Sales_Order",V.DataTable.dtJobTemp(V.Local.i).sales_order!FieldValTrim)
	
	F.Intrinsic.String.Build("select distinct job, suffix,part,description from v_job_header where parent_wo = '{0}' and parent_suffix_parent = '{1}'",V.DataTable.dtJobTemp(V.Local.i).JOB!FieldValTrim,V.DataTable.dtJobTemp(V.Local.i).Suffix!FieldValTrim,V.Local.sSQL)
	f.ODBC.Connection!conx.executeandreturn(v.Local.sSQL,v.Local.sret)
	f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
		F.Intrinsic.Control.CallSub(loadbomlevel,"sWOH",V.DataTable.dtJobTemp(V.Local.i).JOB!FieldValTrim,"sWOS",v.DataTable.dtJobTemp(v.Local.i).SUFFIX!FIELDVALTRIM)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Next(v.Local.i)

Program.Sub.LoadBOMLevel.End

Program.Sub.loadCache.Start
f.Intrinsic.Control.Try
	v.Local.sFileXML.Declare
	v.Local.sfilematl.Declare
	V.Local.sfilelabr.Declare
	v.Local.sfileouts.Declare
	v.Local.sfilemulti.Declare
 	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.Caller.CompanyCode,"_5657_ViewMatl.xml",v.Local.sfilematl)
 	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.Caller.CompanyCode,"_5657_ViewLabr.xml",v.Local.sfilelabr)
 	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.Caller.CompanyCode,"_5657_ViewOuts.xml",v.Local.sfileouts)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtall2.xml",v.Local.sfilexml)
	f.Data.DataTable.CreateFromXML("dtAll2",v.Local.sFileXML,true)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtoper.xml",v.Local.sfilexml)
	f.Data.DataTable.CreateFromXML("dtOper",v.Local.sFileXML,true)
	f.Data.DataView.Create("dtOper","dvOper",22,"","SEQRES ASC, DAYS_LATE ASC")
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtAllM.xml",v.Local.sFileXML)
	f.Data.DataTable.CreateFromXML("dtAllM",v.Local.sFileXML,true)
	f.Data.DataView.Create("dtAllM","dvAllM",22,"","")
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtAllO.xml",v.Local.sFileXML)
	f.Data.DataTable.CreateFromXML("dtAllO",v.Local.sFileXML,true)
	f.Data.DataView.Create("dtAllO","dvAllO",22,"","")
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtChild.xml",v.Local.sFileXML)
	f.Data.DataTable.CreateFromXML("dtChild",v.Local.sFileXML,true)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtChildLabr.xml",v.Local.sFileXML)
	f.Data.DataTable.CreateFromXML("dtChildLabr",v.Local.sFileXML,true)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtChildOuts.xml",v.Local.sFileXML)
	f.Data.DataTable.CreateFromXML("dtChildOuts",v.Local.sFileXML,true)
		'Load from XML, creating new data table, add relation
	f.Intrinsic.Control.Try
		f.Data.DataTable.CreateFromXML("dtAll2$dtChild",v.Local.sfileMatl,true)
		F.Data.DataView.Create("dtAll2$dtChild","dvMatl")
		F.Data.DataTable.AddRelation("dtAll2","JS","dtAll2$dtChild","JS","Material")
	f.Intrinsic.Control.Catch
	f.Intrinsic.Control.EndTry
	
	f.Intrinsic.Control.Try
		f.Data.DataTable.CreateFromXML("dtAll2$dtChildLabr",v.Local.sfilelabr,true)
		F.Data.DataView.Create("dtAll2$dtChildLabr","dvLabr")
		F.Data.DataTable.AddRelation("dtAll2","JS","dtall2$dtChildLabr","JS","Labour")
	f.Intrinsic.Control.Catch
	f.Intrinsic.Control.EndTry
	
	f.Intrinsic.Control.Try
		f.Data.DataTable.CreateFromXML("dtAll2$dtChildOuts",v.Local.sfileouts,true)
		F.Data.DataView.Create("dtAll2$dtChildOuts","dvOuts")
		F.Data.DataTable.AddRelation("dtAll2","JS","dtall2$dtChildOuts","JS","Outside")
	f.Intrinsic.Control.Catch
	f.Intrinsic.Control.EndTry
	
	'Format Columns
	f.Intrinsic.Control.CallSub(loadgvall)
	V.Global.bLoadData.Set(true)
	F.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.Control.CallSub(Deserialize)
	f.Intrinsic.Control.CallSub(enableAll)
	GUI.FrmMaster.tabProd.Visible(true)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaster_unload)
f.Intrinsic.Control.EndTry
Program.Sub.loadCache.End

Program.Sub.CheckPermissions.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare
v.Local.bChecked.Declare(boolean,false)
	
	'Check User Permissions: View
	F.Global.Security.CheckUserAccessIPM(536, 0, V.Global.bViewWO)'Shop Floor Control > View > Work Orders
	F.Global.Security.CheckUserAccessIPM(321, 0, V.Global.bViewPart)'Inventory > View > Supply and Demand
	F.Intrinsic.Control.If(V.Global.bViewWO, =, True, "OR", V.Global.bViewPart, =, True)
		Gui.FrmMaster.optView.Enabled(True)
		f.Intrinsic.Control.If(v.Local.bChecked,=,False)
			Gui.FrmMaster.optView.Value(True)
			v.Local.bChecked.Set(True)
		f.Intrinsic.Control.EndIf		
	f.Intrinsic.Control.Else
		Gui.FrmMaster.optView.Enabled(False)
		Gui.FrmMaster.optView.Value(False)
		v.Local.bChecked.Set(False)
	F.Intrinsic.Control.EndIf
	
	'Check User Permissions: Edit
	F.Global.Security.CheckUserAccessIPM(527, 1, V.Global.bEditWO)'Shop Floor Control > File > Work Orders > Open
	F.Global.Security.CheckUserAccessIPM(371, 0, V.Global.bEditPart)'Inventory > View > Supply and Demand with Edit
	F.Intrinsic.Control.If(V.Global.bEditWO, =, True, "OR", V.Global.bEditPart, =, True)
		Gui.FrmMaster.optEdit.Enabled(True)
		f.Intrinsic.Control.If(v.Local.bChecked,=,False)
			gui.FrmMaster.optEdit.Value(True)
			v.Local.bChecked.Set(True)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		Gui.FrmMaster.optEdit.Enabled(False)
		Gui.FrmMaster.optEdit.Value(False)
		v.Local.bChecked.Set(False)
	F.Intrinsic.Control.EndIf
	
	F.Global.Security.CheckUserAccessIPM(533, 0, V.Global.bIssue)'Shop Floor Control > Transactions > Issue Material
	F.Intrinsic.Control.If(v.Global.bIssue,=,True)
		Gui.FrmMaster.optIssue.Enabled(True)
		f.Intrinsic.Control.If(v.Local.bChecked,=,False)
			gui.FrmMaster.optIssue.Value(True)
			v.Local.bChecked.Set(True)	
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		Gui.FrmMaster.optIssue.Enabled(False)
		gui.FrmMaster.optIssue.Value(False)
		v.Local.bChecked.Set(False)
	F.Intrinsic.Control.EndIf

	F.Global.Security.CheckUserAccessIPM(544, 0, V.Global.bWipToFG)'Shop Floor Control > Transactions > WIP To Finished Goods
	F.Intrinsic.Control.If(v.Global.bWipToFG,=,True)
		Gui.FrmMaster.optWiptoFG.Enabled(True)
		f.Intrinsic.Control.If(v.Local.bChecked,=,False)
			gui.FrmMaster.optWiptoFG.Value(True)
			v.Local.bChecked.Set(True)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		Gui.FrmMaster.optWiptoFG.Enabled(False)
		gui.FrmMaster.optWiptoFG.Value(False)
		v.Local.bChecked.Set(False)
	F.Intrinsic.Control.EndIf

	'Check Replace Update Dashboard Access
	F.Global.Security.CheckUserAccessIPM(1027, 0, V.Global.bReplUpdReschedUtility)'Shop Floor Control > File > Replace, Update and Reschedule Job Utility
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.CheckPermissions.End

Program.Sub.SetContextMenus.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.bNewWO.Declare	
	
	Gui.FrmMaster..ContextMenuCreate("ctxAll")
	Gui.FrmMaster..ContextMenuCreate("ctxOper")
	Gui.FrmMaster..ContextMenuCreate("ctxAllM")
	Gui.FrmMaster..ContextMenuCreate("ctxAllO")
	
	Gui.FrmMaster.GsGCAll.ContextMenuAttach("ctxAll")
	Gui.FrmMaster.gsgcOper.ContextMenuAttach("ctxOper")
	gui.FrmMaster.gsgcAllM.ContextMenuAttach("ctxAllM")
	gui.FrmMaster.gsgcAllO.ContextMenuAttach("ctxAllO")
	
	Gui.FrmMaster..ContextMenuAddItem("ctxAll","ResetColumns",0,"Reset Columns")
	Gui.FrmMaster..ContextMenuAddItem("ctxOper","ResetColumns",0,"Reset Columns")
	Gui.FrmMaster..ContextMenuAddItem("ctxAllM","ResetColumns",0,"Reset Columns")
	Gui.FrmMaster..ContextMenuAddItem("ctxAllO","ResetColumns",0,"Reset Columns")
	
	f.Intrinsic.Control.If(v.Caller.CompanyCode,=,"MET")
		Gui.FrmMaster..ContextMenuAddItem("ctxAll","Boost",0,"Boost Export")
		Gui.FrmMaster..ContextMenuSetItemEventHandler("ctxAll","Boost","BoostExport")
	f.Intrinsic.Control.EndIf

	Gui.FrmMaster..ContextMenuSetItemEventHandler("ctxAll","ResetColumns","MenuClickResetColumns")
	Gui.FrmMaster..ContextMenuSetItemEventHandler("ctxOper","ResetColumns","MenuClickResetColumns")
	Gui.FrmMaster..ContextMenuSetItemEventHandler("ctxAllM","ResetColumns","MenuClickResetColumns")
	Gui.FrmMaster..ContextMenuSetItemEventHandler("ctxAllO","ResetColumns","MenuClickResetColumns")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

Program.Sub.MenuClickAllWOIssue.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sDate.Declare
	v.Local.sTime.Declare
	v.Local.i.Declare
	
	f.Intrinsic.String.Format(v.Ambient.Date,"YYYYMMDD",v.Local.sDate)
	f.Intrinsic.String.Format(v.Ambient.Now,"HHNNSSss",v.Local.sTime)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll2.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll2(v.Local.i).SelectWO!fieldval)
			f.Data.DataTable.AddRow("450150","WONum",v.DataTable.dtAll2(v.Local.i).JOB!FIELDVALTRIM,"WOSuffix",V.DataTable.dtAll2(v.Local.i).Suffix!fieldvaltrim)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.CallSub(450150Sync)
	
F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickAllWOIssue.End

Program.Sub.MenuClickWIPFG.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.lFlag.Declare
	v.Local.sMessage.Declare
	v.Local.ssql.Declare
	V.Local.sParams.Declare
	V.Local.sRet.Declare
	v.Local.sFile.Declare
	v.Local.bFileLock.Declare
	V.Local.iCnt.Declare
	V.Local.i.Declare(long)
	v.Local.j.Declare(long)
	v.Local.k.Declare(long)
	f.Intrinsic.Control.If(v.DataTable.dtWPTemp.Exists)
		f.Data.DataTable.Close("dtWPTemp")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("dtWPTemp",true)
	f.Data.DataTable.AddColumn("dtWPTemp","Job","string")
	f.Data.DataTable.AddColumn("dtWPTemp","Suffix","string")
	f.Data.DataTable.AddColumn("dtWPTemp","RowIndex","integer")
	
	f.Intrinsic.String.Concat("WIP to FG the following work orders?",v.Ambient.NewLine,v.Local.sMessage)
	gui.FrmMaster.GsGCAll.enabled(false)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll2.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll2(v.Local.i).SELECTWO!FIELDVAL)
			f.Intrinsic.String.Concat(v.Local.sMessage,v.DataTable.dtAll2(v.Local.i).JOB!FIELDVALTRIM,"-",v.DataTable.dtAll2(v.Local.i).SUFFIX!FIELDVALTRIM," ",v.DataTable.dtAll2(v.Local.i).DESCRIPTION!FIELDVALTRIM,v.Ambient.NewLine,v.Local.sMessage)
			f.Data.DataTable.AddRow("2003","WONum",v.DataTable.dtAll2(v.Local.i).JOB!FIELDVALTRIM,"WOSuffix",V.DataTable.dtAll2(v.Local.i).SUFFIX!FIELDVALTRIM,"Quantity",V.DataTable.dtAll2(v.Local.i).QTY_ORDER!FIELDVAL,"CloseWO","Y","PrintLabels","Y")
			f.Data.DataTable.AddRow("dtWPTemp","Job",v.DataTable.dtAll2(v.Local.i).JOB!FIELDVALTRIM,"Suffix",V.DataTable.dtAll2(v.Local.i).SUFFIX!FIELDVALTRIM,"RowIndex",v.Local.i)
			'Check if Material has been issued
			f.Intrinsic.String.Build("SELECT DISTINCT JOB, SUFFIX FROM V_JOB_OPERATIONS WHERE JOB='{0}' AND SUFFIX='{1}' AND LMO='M' AND FLAG_CLOSED<>'Y' AND SEQ<'995000'",v.DataTable.dtAll2(v.Local.i).JOB!FIELDVALTRIM,v.DataTable.dtAll2(v.Local.i).SUFFIX!FIELDVALTRIM,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
				'Material requirements unfulfilled
				f.Intrinsic.Control.If(v.DataTable.dtJBTemp.Exists)
					f.Data.DataTable.Close("dtJBTemp")
				f.Intrinsic.Control.EndIf
				f.Data.DataTable.CreateFromSQL("dtJBTemp","con",v.Local.ssql)
				f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtJBTemp.RowCount--,1)
					F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",v.DataTable.dtJBTemp(v.Local.j).JOB!FIELDVALTRIM,v.DataTable.dtJBTemp(v.Local.j).SUFFIX!FIELDVALTRIM,V.Local.sParams)
					F.Global.General.CallWrapperSync(450150,V.Local.sParams)
				f.Intrinsic.Control.Next(v.Local.j)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)

	f.Intrinsic.UI.Msgbox(v.Local.sMessage,"WIP to FG",4,v.Local.lFlag)
	f.Intrinsic.Control.If(v.Local.lFlag,=,6)
		f.Intrinsic.Control.CallSub(2003Sync)
		'Delete rows
		f.Intrinsic.Control.For(v.Local.k,0,v.DataTable.dtWPTemp.RowCount--,1)
			f.Intrinsic.String.Build("JOB='{0}' AND SUFFIX='{1}'",v.DataTable.dtWPTemp(v.Local.k).JOB!FIELDVALTRIM,v.DataTable.dtWPTemp(v.Local.k).SUFFIX!FIELDVALTRIM,v.Local.ssql)
			f.Data.DataTable.Select("dtAll2",v.Local.ssql,v.Local.sRet)
			gui.FrmMaster.GsGCAll.SetRowAppearance("gvall",v.Local.sRet,"FontStrikeOut","True")
			f.Data.DataTable.SetValue("dtall2",v.Local.sRet,"SelectWO","false")
		f.Intrinsic.Control.Next(v.Local.k)
	f.Intrinsic.Control.EndIf
	
	f.Data.DataTable.DeleteRow("2003")
	
	gui.FrmMaster.GsGCAll.enabled(true)
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickWIPFG.End

Program.Sub.MenuCloseSeq.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	f.Global.General.CallWrapperSync(50,"JB0988")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuCloseSeq.End

Program.Sub.MenuClickRefresh.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.CallSub(cmdProcess_Click)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickRefresh.End

Program.Sub.enableAll.Start
f.Intrinsic.Control.Try
	gui.FrmMaster.cmdProcess.Enabled(true)
	gui.FrmMaster.cmdBrowseCust.Enabled(true)
	gui.FrmMaster.cmdBrowseSO.Enabled(true)
	'gui.FrmMaster.cmdSave.Enabled(true)
	gui.FrmMaster.chkForce.Enabled(true)
	gui.FrmMaster.cmdCache.Enabled(true)
	GUI.FrmMaster.gsgcAllM.Enabled(true)
	gui.FrmMaster.txtCustomer.Enabled(true)
	gui.FrmMaster.txtSO.Enabled(true)
	gui.FrmMaster.cmdBrowseCust.Enabled(true)
	gui.FrmMaster.cmdBrowseSO.Enabled(true)
	gui.FrmMaster.tabProd.Visible(true)
	gui.FrmMaster.chkClosed.Enabled(true)
	gui.FrmMaster.optEdit.Enabled(true)
	gui.FrmMaster.optIssue.Enabled(true)
	gui.FrmMaster.optView.Enabled(true)
	gui.FrmMaster.optWiptoFG.Enabled(true)
	gui.FrmMaster.cmdBrowseCust.Enabled(true)
	gui.FrmMaster.cmdBrowseSO.Enabled(true)
	gui.FrmMaster.cmdSelectAll.Enabled(true)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.enableAll.End

Program.Sub.disableAll.Start
f.Intrinsic.Control.Try
	gui.FrmMaster.tabProd.Visible(false)
	GUI.FrmMaster.gsgcAllM.Enabled(false)
	gui.FrmMaster.chkForce.Enabled(false)
	gui.FrmMaster.cmdCache.Enabled(false)
	gui.FrmMaster.txtCustomer.Enabled(false)
	gui.FrmMaster.txtSO.Enabled(false)
	gui.FrmMaster.cmdBrowseCust.Enabled(false)
	gui.FrmMaster.cmdBrowseSO.Enabled(false)
	gui.FrmMaster.cmdProcess.Enabled(false)
	gui.FrmMaster.cmdBrowseCust.Enabled(false)
	gui.FrmMaster.cmdBrowseSO.Enabled(false)
	'gui.FrmMaster.cmdSave.Enabled(false)
	gui.FrmMaster.chkClosed.Enabled(false)
	gui.FrmMaster.optEdit.Enabled(false)
	gui.FrmMaster.optIssue.Enabled(false)
	gui.FrmMaster.optView.Enabled(false)
	gui.FrmMaster.optWiptoFG.Enabled(false)
	gui.FrmMaster.cmdBrowseCust.Enabled(false)
	gui.FrmMaster.cmdBrowseSO.Enabled(false)
	GUI.FrmMaster.cmdSelectAll.Enabled(False)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.disableAll.End

Program.Sub.PONotes.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sPO.Declare
	v.Local.sLine.Declare
	v.Local.sText.Declare
	
	v.Local.sPO.Set(v.Args.PO)
	v.Local.sLine.Set(v.args.Line)
	v.Local.sText.Set(v.Args.Text)
	
	f.Intrinsic.String.RPad(v.Local.sLine,"0",4,v.Local.sLine)
	f.Intrinsic.String.LPad(v.Local.sPO,"0",7,v.Local.sPO)
	f.Intrinsic.String.Build("INSERT INTO PO_LN_TEXT VALUES ('{0}','{1}','{2}')",v.local.sPO,v.local.sLine,v.Local.sText,v.Local.ssql)
	f.ODBC.Connection!con.Execute(v.Local.ssql)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.PONotes.End

Program.Sub.MenuClickCreatePO.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.i.Declare
	v.Local.iLine.Declare
	v.Local.sVend.Declare
	v.Local.sPart.Declare
	v.Local.sDesc.Declare
	v.Local.sPurU.Declare
	v.Local.fPurC.Declare
	v.Local.fPurQ.Declare
	v.Local.sPrdL.Declare
	v.Local.sMfgP.Declare
	v.Local.sMfgN.Declare
	v.Local.sGenL.Declare
	v.Local.sSrch.Declare
	v.Local.sLine.Declare
	V.Local.sFile.Declare
	v.Local.sDueD.Declare
	v.Local.dDueD.Declare
	v.Local.sPONum.Declare
	v.Local.iPONum.Declare
	v.Local.iCol.Declare
	v.Local.iColCost.Declare
	V.Local.iColVend.Declare
	v.Local.irow.Declare
	V.Local.iret.Declare
	V.Local.sJob.Declare
	v.Local.sSuf.Declare
	v.Local.sSeq.Declare
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.sPrm.Declare
	v.Local.sPOP.Declare
	v.Local.sMsg.Declare
	v.Local.sText.Declare
	v.Local.sLPrt.Declare
	v.Local.bFlag.Declare
	v.Local.bPOEx.Declare
	
	
	f.Intrinsic.Control.CallSub(disableAll)
	GUI.FrmMaster.[V.Args.GC].GetColumnIndexByName(v.Args.GV,"COST",v.Local.iColCost)
	GUI.FrmMaster.[v.Args.GC].GetColumnIndexByName(v.Args.GV,"VENDOR",v.Local.iColVend)
			
	F.Intrinsic.Control.If(V.DataTable.dtPartsVendor.Exists)
		f.Data.Datatable.Close("dtPartsVendor")
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataView.[v.Args.dt]!dvAllSorted.Exists)
		f.Data.DataView.Close(v.Args.dt,"dvAllSorted")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataView.[v.Args.dt]!dvAllSelected.Exists)
		f.Data.DataView.close(v.Args.dt,"dvAllSelected")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.Create(v.Args.dt,"dvAllSelected",22,"SelectWO=True","MatPart ASC")
	
	'Do a check first for missing vendors or ones that already have a purchase order
	f.Intrinsic.Control.For(v.Local.i,v.DataView.[v.args.dt]!dvAllSelected.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).SelectWO!Fieldval)
			f.Intrinsic.Control.If(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Vendor!FIELDVALTRIM,=,"")
				f.Intrinsic.String.Concat("Vendor selection missing from work order: ",v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Job!FIELDVALTRIM,"-",v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Suffix!FIELDVALTRIM,"-",v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).SEQ!FIELDVALTRIM,v.Local.sMsg)
				f.Data.DataView.SetValue(v.args.dt,"dvAllSelected",v.Local.i,"SelectWO",false)
				f.Intrinsic.UI.Msgbox(v.Local.sMsg)
			f.Intrinsic.Control.ElseIf(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).PURCHASE_ORDER!FIELDVALTRIM,<>,"")
				f.Intrinsic.String.Concat("Purchase Order already exists for work order: ",v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Job!FIELDVALTRIM,"-",v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Suffix!FIELDVALTRIM,"-",v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).SEQ!FIELDVALTRIM,v.Local.sMsg)
				f.Data.DataView.SetValue(v.args.dt,"dvAllSelected",v.Local.i,"SelectWO",false)
				f.Intrinsic.UI.Msgbox(v.Local.sMsg)
			f.Intrinsic.Control.ElseIf(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Vendor!FIELDVALTRIM,<>,"")
				'Double check that it is a valid vendor
				f.Intrinsic.String.Build("SELECT * FROM V_VENDOR_MASTER WHERE VENDOR='{0}'",v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Vendor!FIELDVALTRIM,v.Local.ssql)
				f.ODBC.Connection!CON.ExecuteAndReturn(v.Local.ssql,v.Local.sret)
				f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
					f.Intrinsic.String.Concat("Vendor code is invalid for work order: ",v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Job!FIELDVALTRIM,"-",v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Suffix!FIELDVALTRIM,"-",v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).SEQ!FIELDVALTRIM,v.Local.sMsg)
					f.Data.DataView.SetValue(v.args.dt,"dvAllSelected",v.Local.i,"SelectWO",false)
					f.Intrinsic.UI.Msgbox(v.Local.sMsg)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Filter to seperate table
	f.Data.DataView.ToDataTableDistinct(v.args.dt,"dvAllSelected","dtPartsVendor","SelectWO*!*Vendor")
	f.Data.DataTable.AddColumn("dtPartsVendor","PO","String")
	
	'Vendor Header
	f.Intrinsic.Control.For(v.Local.i,0,v.datatable.dtPartsVendor.RowCount--,1)
		f.Intrinsic.Control.If(v.datatable.dtPartsVendor(v.Local.i).SelectWO!Fieldval)
			v.Local.sVend.Set(v.datatable.dtPartsVendor(v.Local.i).Vendor!FieldvalTRIM)
			F.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_5657_PO_NUMBER.txt",v.Local.sFile)
			f.Intrinsic.File.File2String(v.Local.sFile,v.Local.iPONum)
			
			f.Intrinsic.Control.DoUntil(v.Local.bPOEx,=,True)
				f.Intrinsic.Math.Add(v.Local.iPONum,1,v.Local.iPONum)
				f.Intrinsic.String.RPad(v.Local.iPONum,"0",7,v.Local.sPONum)
				f.Intrinsic.String.Build("select * from V_PO_HEADER WHERE PURCHASE_ORDER='{0}'",v.Local.sPONum,v.Local.ssql)
				f.ODBC.Connection!CON.executeandreturn(v.Local.ssql,v.Local.sret)
				f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
					v.Local.bPOEx.Set(True)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Loop
			
			f.Intrinsic.File.String2File(v.Local.sFile,v.Local.iPONum)
			f.Data.DataTable.SetValue("dtPartsVendor",v.Local.i,"PO",v.Local.iPONum)
			f.Intrinsic.Control.CallSub(getVendorSetHeader,"Vend",v.Local.sVend,"PONum",v.Local.iPONum)
		f.Intrinsic.Control.EndIf
		v.Local.bPOEx.Set(False)
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Vendor Lines
	f.Intrinsic.Control.For(v.Local.i,0,v.DataView.[v.args.dt]!dvAllSelected.RowCount--,1)
		f.Intrinsic.Control.If(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).SelectWO!Fieldval)
			'Add one to the line and set flag for processing
			f.Intrinsic.Math.Add(v.Local.iLine,1,v.Local.iLine)
			v.Local.bFlag.Set(true)
			
			'Different vendor, reset line
			f.Intrinsic.Control.If(v.Local.sVend.Trim,<>,v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Vendor!FIELDVALTRIM)
				V.Local.iLine.Set(1)
			f.Intrinsic.Control.EndIf
			
			'Set variables
			v.Local.sVend.Set(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Vendor!FIELDVALTRIM)
			v.Local.sDesc.Set(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).DESCR!FIELDVALTRIM)
			v.Local.sPurU.Set(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).PURUM!FIELDVALTRIM)
			v.Local.fPurC.Set(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Cost!fieldval)
			v.Local.fPurQ.Set(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).PCSREMAIN!fieldval)
			v.Local.sPrdL.Set(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).pl!fieldvaltrim)
			v.Local.sJob.Set(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Job!fieldvaltrim)
			v.Local.sSuf.Set(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Suffix!fieldvaltrim)
			v.Local.sSeq.Set(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).Seq!fieldvaltrim)
			V.Local.dDueD.Set(V.DataView.[v.args.dt]!dvAllSelected(v.Local.i).LINEDUE!FIELDVAL)
			v.Local.sText.Set(v.DataView.[v.Args.dt]!dvAllSelected(v.Local.i).TEXT!FIELDVALTRIM)
			V.Local.iRow.Set(v.DataView.[v.args.dt]!dvAllSelected(v.Local.i).MyrowID!fieldval)
			f.Intrinsic.String.Format(v.Local.dDueD,"MMDDYY",v.Local.sDueD)
		
			F.Intrinsic.Control.If(V.Args.DT,=,"dtAllO")
				f.Intrinsic.String.Build("SELECT PART FROM V_JOB_HEADER WHERE JOB='{0}' AND SUFFIX='{1}'",v.Local.sJob,v.Local.sSuf,v.Local.ssql)
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sret)
				'See if there is a long part
				f.Intrinsic.String.Build("SELECT DISPLAY_PART FROM INV_LXR WHERE GSS_PART='{0}'",v.Local.sret,v.Local.sSql)
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sLPrt)
				f.Intrinsic.Control.If(v.Local.sLPrt.Trim,<>,"")
					F.Intrinsic.String.Left(V.Local.sLPrt,29,V.Local.sLPrt)
					f.Intrinsic.String.Concat(v.Local.sLPrt.Trim,"*",v.Local.sLPrt)
					F.Global.Inventory.GetGSSPart(V.Local.sLPrt,"",V.Local.sPart)
				f.Intrinsic.Control.Else
					f.Intrinsic.String.Trim(v.Local.sret,v.Local.sret)
					F.Intrinsic.String.Left(V.Local.sret,19,V.Local.sret)
					f.Intrinsic.String.Concat(v.Local.sret.Trim,"*",v.Local.sPart)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Else
				v.Local.sPart.Set(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).MatPart!FIELDVALTRIM)
			F.Intrinsic.Control.EndIf
			
			'MFG Part #
			f.Intrinsic.String.Build("select MFG_PART from INV_CROSS_REF WHERE VENDOR='{0}' AND PART='{1}'",V.Local.sVend,v.Local.sPart,v.Local.ssql)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sMfgP)
			
			'MFG Name
			f.Intrinsic.String.Build("select MFG_NAME from INV_CROSS_REF WHERE VENDOR='{0}' AND PART='{1}'",V.Local.sVend,v.Local.sPart,v.Local.ssql)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sMfgN)
			
			'GL Code
			f.Intrinsic.String.Build("SELECT GL_ACCT FROM PL_GL_ACCOUNTS WHERE PROD_LINE='{0}' AND TYPE='2'",v.Local.sPrdL.Trim,v.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sGenL)
			
			'Select PO #
			f.Intrinsic.String.Build("Vendor='{0}' AND PO<>''",v.Local.sVend,v.Local.sSrch)
			f.Data.Datatable.Select("dtPartsVendor",v.Local.sSrch,v.Local.sret)
			
			'Set line & add row
			f.Intrinsic.String.LPad(v.Local.iLine,"0",3,v.local.sLine)
			F.Data.DataTable.AddRow("UPLPURORL","PONum",v.DataTable.dtpartsvendor(v.Local.sret).PO!fieldvaltrim,"RecType",v.Local.sLine,"WONum",v.Local.sJob,"WOSeq",v.Local.sSeq,"WOSuffix",v.Local.sSuf,"PartNum",v.Local.sPart,"MfgPartNum",v.Local.sMfgP,"MfgName",v.Local.sMfgN,"PartDesc",v.Local.sDesc,"PurchQtyOrdered",v.Local.fPurQ,"PurchCost",v.Local.fPurC,"POUM",v.Local.sPurU,"PL",v.Local.sPrdL,"GLAcct",v.Local.sGenL,"DueDate",v.Local.sDueD)
			
			'Add WO Comments to PO if company option turned on and there are comments
			'f.Intrinsic.Control.If(v.Global.bPONotes)
				'f.Intrinsic.String.Build("SELECT TEXT FROM WO_SEQ_COMMENTS WHERE WO='{0}' AND WO_SUFFIX='{1}' AND WO_SEQ='{2}'",v.Local.sJob,v.local.sSuf,v.Local.sSeq,v.Local.sSql)
				'f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sText)
				
				f.Intrinsic.Control.If(v.Local.sText.Trim,<>,"")
					f.Intrinsic.Control.CallSub(PONotes,"PO",v.DataTable.dtpartsvendor(v.Local.sret).PO!fieldvaltrim,"LINE",v.Local.sLine,"Text",v.Local.sText)
				f.Intrinsic.Control.EndIf
			'f.Intrinsic.Control.EndIf
		
			f.Intrinsic.String.LPad(v.DataTable.dtpartsvendor(v.Local.sret).PO!fieldvaltrim,"0",7,v.Local.sPOP)
			f.Data.DataView.SetValue(v.Args.dt,"dvAllSelected",v.Local.i,"PURCHASE_ORDER",v.Local.sPOP,"LINE",v.Local.sLine,"DATE_DUE_LINE",v.Local.dDueD,"Text",v.Local.sText)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	
	f.Intrinsic.Control.If(v.Local.bFlag)
	
		f.Intrinsic.UI.InvokeWaitDialog("Generating Purchase Orders")
		'Upload purchase orders
		F.Intrinsic.Control.CallSub(UPLPURORSync)
		
		'Open each purchase order
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtPartsVendor.RowCount--,1)
			F.Intrinsic.Control.If(v.DataTable.dtpartsvendor(v.Local.i).SELECTwo!FIELDVAL)
				f.Data.DataTable.AddRow("175200","Mode","O","PONum",v.DataTable.dtPartsVendor(v.Local.i).PO!fieldval)
			F.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.i)
		f.Intrinsic.Control.CallSub(175200ASync)
		f.Intrinsic.UI.CloseWaitDialog
		
		'Lock the cells
		'Have to omit lock cells for now for the sake of speed. 11th September 2020
		f.Intrinsic.Control.For(v.Local.i,v.DataView.[v.args.dt]!dvAllSelected.RowCount--,0,-1)
			f.Intrinsic.Control.If(v.DATAVIEW.[v.args.dt]!dvAllSelected(v.Local.i).SelectWO!Fieldval)
				V.Local.iRow.Set(v.DataView.[v.args.dt]!dvAllSelected(v.Local.i).MyrowID!fieldval)
				'GUI.FrmMaster.gsgcAllM.setcellproperty("gvAllM",v.Local.iColCost,v.Local.irow,"READONLY",true)
				'GUI.FrmMaster.gsgcAllM.setcellproperty("gvAllM",v.Local.iColVend,v.Local.irow,"READONLY",true)
				f.Data.DataView.SetValue(v.Args.dt,"dvAllSelected",v.Local.i,"SelectWO",False)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.CallSub(enableAll)
	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
	F.Intrinsic.Control.CallSub(frmMaster_Unload)
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickCreatePO.End

Program.Sub.getVendorSetHeader.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.svend.Declare
	v.Local.iPONum.Declare
	v.Local.sVend.Set(v.Args.Vend)
	v.Local.iPONum.Set(v.Args.PONum)
	
	v.Local.sVendName.Declare
	v.Local.sVendAddr1.Declare
	v.Local.sVendAddr2.Declare
	v.Local.sVendAddr3.Declare
	v.Local.sVendAddr4.Declare
	v.Local.sVendAddr5.Declare
	v.Local.sVendCity.Declare
	v.Local.sVendState.Declare
	v.Local.sVendZip.Declare
	v.Local.sVendCountry.Declare
	v.Local.sVendCounty.Declare
	v.Local.sVendAttn.Declare
	v.Local.sIntlFlag.Declare
	v.Local.sShipVendName.Declare
	v.Local.sShipVendAddr1.Declare
	v.Local.sShipVendAddr2.Declare
	v.Local.sShipVendAddr3.Declare
	v.Local.sShipVendAddr4.Declare
	v.Local.sShipVendAddr5.Declare
	v.Local.sShipVendCity.Declare
	v.Local.sShipVendState.Declare
	v.Local.sShipVendZip.Declare
	v.Local.sShipVendCountry.Declare
	v.Local.sShipVendCounty.Declare 
	v.Local.sShipVendAttn.Declare
	v.Local.sShipIntlFlag.Declare
	v.Local.sFOB.Declare
	v.Local.sTrms.Declare
	v.Local.sBuyC.Declare
	v.Local.sEmail.Declare

	f.Intrinsic.String.Build("SELECT NAME_VENDOR, ADDRESS1, ADDRESS2, ADDRESS3, ADDRESS4, ADDRESS5, CITY, STATE, CODE_ZIP, COUNTRY, COUNTY, ATTENTION, BUYER, INTL_ADRS FROM V_VENDOR_MASTER3 WHERE VENDOR='{0}'",v.Local.sVend.Trim,v.Local.sSQL)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Local.sVendName.Set(v.Local.sRet(0))
	v.Local.sVendAddr1.Set(v.Local.sRet(1))
	v.Local.sVendAddr2.Set(v.Local.sRet(2))
	v.Local.sVendAddr3.Set(v.Local.sRet(3))
	v.Local.sVendAddr4.Set(v.Local.sRet(4))
	v.Local.sVendAddr5.Set(v.Local.sRet(5))
	v.Local.sVendCity.Set(v.Local.sRet(6))
	v.Local.sVendState.Set(v.Local.sRet(7))
	v.Local.sVendZip.Set(v.Local.sRet(8))
	v.Local.sVendCountry.Set(v.Local.sRet(9))
	v.Local.sVendCounty.Set(v.Local.sRet(10))
	v.Local.sVendAttn.Set(v.Local.sRet(11))
	v.Local.sBuyC.Set(v.Local.sRet(12))
	v.Local.sIntlFlag.Set(v.Local.sRet(13))
	
	f.ODBC.Connection!con.ExecuteAndReturn("SELECT NAME_VENDOR, ADDRESS1, ADDRESS2, ADDRESS3, ADDRESS4, ADDRESS5, CITY, STATE, CODE_ZIP, COUNTRY, COUNTY, ATTENTION, INTL_ADRS FROM V_VENDOR_MASTER3 WHERE RESV='1'",v.Local.sRet)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Local.sShipVendName.Set(v.Local.sRet(0))
	v.Local.sShipVendAddr1.Set(v.Local.sRet(1))
	v.Local.sShipVendAddr2.Set(v.Local.sRet(2))
	v.Local.sShipVendAddr3.Set(v.Local.sRet(3))
	v.Local.sShipVendAddr4.Set(v.Local.sRet(4))
	v.Local.sShipVendAddr5.Set(v.Local.sRet(5))
	v.Local.sShipVendCity.Set(v.Local.sRet(6))
	v.Local.sShipVendState.Set(v.Local.sRet(7))
	v.Local.sShipVendZip.Set(v.Local.sRet(8))
	v.Local.sShipVendCountry.Set(v.Local.sRet(9))
	v.Local.sShipVendCounty.Set(v.Local.sRet(10))
	v.Local.sShipVendAttn.Set(v.Local.sRet(11))
	v.Local.sShipIntlFlag.Set(v.Local.sRet(12))
	
	f.Intrinsic.String.Build("SELECT payment_terms, code_fob FROM V_VENDOR_PAY_TO WHERE VENDOR='{0}'",v.Local.sVend.Trim,v.Local.sSQL)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Local.sTrms.Set(v.Local.sRet(0))
	v.Local.sFOB.Set(v.Local.sRet(1))
	
	F.Intrinsic.String.Build("SELECT EMAIL FROM V_VENDOR_ADDL WHERE VENDOR='{0}'",v.Local.svend.Trim,v.Local.ssql)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sEmail)
	
	f.Intrinsic.String.Build("select TERMS_MESSAGE from V_AP_TERMS WHERE TERMS_CODE='{0}'",V.Local.sTrms,V.Local.sSQL)
	F.ODBC.Connection!CON.ExecuteAndReturn(v.Local.sSql,v.Local.sTrms)
	

	F.Data.DataTable.AddRow("UPLPURORA","PONum",v.Local.iPONum,"OrderTaxCode","T","VendNum",v.Local.sVend,"Terms",v.Local.sTrms,"BuyerCode",v.LOCAL.sBuyC,"FOBInfo",v.Local.sFOB)
	f.Data.DataTable.AddRow("UPLPURORBC","PONum",v.Local.iPONum,"RecType","B","VendName",v.Local.sVendName,"VendAddr1",v.Local.sVendAddr1,"VendAddr2",v.Local.sVendAddr2,"VendAddr3",v.Local.sVendAddr3,"VendAddr4",v.Local.sVendAddr4,"VendAddr5",v.Local.sVendAddr5,"VendCity",v.Local.sVendCity,"VendState",v.Local.sVendState,"VendZip",v.Local.sVendZip,"VendCountry",v.Local.sVendCountry,"VendAttn",v.Local.sVendAttn,"IntlFlag",v.Local.sIntlFlag,"ContactEmail",v.Local.sEmail)
	F.Data.DataTable.AddRow("UPLPURORBC","PONum",v.Local.iPONum,"RecType","C","VendName",v.Local.sShipVendName,"VendAddr1",v.Local.sShipVendAddr1,"VendAddr2",v.Local.sShipVendAddr2,"VendAddr3",v.Local.sShipVendAddr3,"VendAddr4",v.Local.sShipVendAddr4,"VendAddr5",v.Local.sShipVendAddr5,"VendCity",v.Local.sShipVendCity,"VendState",v.Local.sShipVendState,"VendZip",v.Local.sShipVendZip,"VendCountry",v.Local.sShipVendCountry,"VendAttn",v.Local.sShipVendAttn,"IntlFlag",v.Local.sShipIntlFlag,"ContactEmail",v.Local.sEmail)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry

Program.Sub.getVendorSetHeader.End

Program.Sub.MenuClickIssue.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sDate.Declare
	v.Local.sTime.Declare
	v.Local.i.Declare
	f.Intrinsic.String.Format(v.Ambient.Date,"YYYYMMDD",v.Local.sDate)
	f.Intrinsic.String.Format(v.Ambient.Now,"HHNNSSss",v.Local.sTime)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAllM.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAllM(v.Local.i).SelectWO!fieldval)
			f.Data.DataTable.AddRow("450150","WONum",v.DataTable.dtAllM(v.Local.i).JOB!FIELDVALTRIM,"WOSuffix",V.DataTable.dtAllM(v.Local.i).Suffix!fieldvaltrim)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.CallSub(450150Sync)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickIssue.End

Program.Sub.MenuClickIssueBF.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.lFlag.Declare
	v.Local.sMessage.Declare
	v.Local.ssql.Declare
	V.Local.sParams.Declare
	V.Local.sRet.Declare
	v.Local.sFile.Declare
	V.Local.sQty.Declare
	v.Local.bFileLock.Declare
	V.Local.iCnt.Declare
	V.Local.i.Declare(long)
	v.Local.j.Declare(long)
	v.Local.k.Declare(long)
	
	f.Intrinsic.Control.If(v.DataView.dtAllM!dvAllMSel.Exists)
		f.Data.DataView.Close("dtAllM","dvAllMSel")
	f.Intrinsic.Control.EndIf
	F.Data.DataView.Create("dtAllM","dvAllMSel",22,"SelectWO=True","")
   		
	f.Intrinsic.Control.If(v.DataTable.dtMatBFTemp.Exists)
		f.Data.DataTable.Close("dtMatBFTemp")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("dtMatBFTemp",true)
	f.Data.DataTable.AddColumn("dtMatBFTemp","Part","string")
	f.Data.DataTable.AddColumn("dtMatBFTemp","Quantity","Float")
	f.Data.DataTable.AddColumn("dtMatBFTemp","Job","string")
	f.Data.DataTable.AddColumn("dtMatBFTemp","Suffix","string")
	f.Data.DataTable.AddColumn("dtMatBFTemp","Seq","string")
	f.Data.DataTable.AddColumn("dtMatBFTemp","RowIndex","integer")
	
	f.Intrinsic.String.Concat("Issue materials the following work orders?",v.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.CallSub(disableAll)
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataView.dtAllM!dvAllMSel.RowCount--,1)
		F.Intrinsic.String.Format(V.dataview.dtAllM!dvAllMSel(v.Local.i).PCSREMAIN!FIELDVAL,"####.0000",V.local.Sqty)
		f.Intrinsic.String.Replace(v.Local.sQty,".","",v.Local.sQty)
		f.Intrinsic.String.Concat(v.Local.sMessage,v.dataview.dtAllM!dvAllMSel(v.Local.i).MATPART!FIELDVALTRIM, " for job ",v.dataview.dtAllM!dvAllMSel(v.Local.i).JOB!FIELDVALTRIM,"-",v.dataview.dtAllM!dvAllMSel(v.Local.i).SUFFIX!FIELDVALTRIM,"-",v.dataview.dtAllM!dvAllMSel(v.Local.i).SEQ!FIELDVALTRIM,v.Ambient.NewLine,v.Local.sMessage)
		f.Data.DataTable.AddRow("450100","Part",v.dataview.dtAllM!dvAllMSel(v.Local.i).MATPART!FIELDVALTRIM,"WONumber",v.dataview.dtAllM!dvAllMSel(v.Local.i).JOB!FIELDVALTRIM,"WOSuffix",V.dataview.dtAllM!dvAllMSel(v.Local.i).SUFFIX!FIELDVALTRIM,"WOSeq",V.dataview.dtAllM!dvAllMSel(v.Local.i).SEQ!FIELDVALTRIM,"Quantity",v.Local.sQty)
		f.Data.DataTable.AddRow("dtMatBFTemp","Job",v.dataview.dtAllM!dvAllMSel(v.Local.i).JOB!FIELDVALTRIM,"Suffix",V.dataview.dtAllM!dvAllMSel(v.Local.i).SUFFIX!FIELDVALTRIM,"Seq",v.dataview.dtAllM!dvAllMSel(v.Local.i).SEQ!FIELDVALTRIM,"RowIndex",v.Local.i)
	f.Intrinsic.Control.Next(v.Local.i)

	f.Intrinsic.UI.Msgbox(v.Local.sMessage,"Issue Materials (Backflush)",4,v.Local.lFlag)
	f.Intrinsic.Control.If(v.Local.lFlag,=,6)
		f.Intrinsic.Control.CallSub(disableAll)
		f.Intrinsic.Control.CallSub(450100Sync)
		'Delete rows
		f.Intrinsic.Control.For(v.Local.k,0,v.DataTable.dtMatBFTemp.RowCount--,1)
			f.Intrinsic.String.Build("JOB='{0}' AND SUFFIX='{1}' AND SEQ='{2}'",v.DataTable.dtMatBFTemp(v.Local.k).JOB!FIELDVALTRIM,v.DataTable.dtMatBFTemp(v.Local.k).SUFFIX!FIELDVALTRIM,v.DataTable.dtMatBFTemp(v.Local.k).SEQ!FIELDVALTRIM,v.Local.ssql)
			f.Data.DataTable.Select("dtAllM",v.Local.ssql,v.Local.sRet)
			F.Data.DataTable.DeleteRow("dtAllM",V.Local.sRet)
			'gui.FrmMaster.gsgcAllM.SetRowAppearance("gvallM",v.Local.sRet,"FontStrikeOut","True")
			'f.Data.DataTable.SetValue("dtAllM",v.Local.sRet,"SelectWO","false")
		f.Intrinsic.Control.Next(v.Local.k)
	f.Intrinsic.Control.EndIf
	
	'Clean up
	f.Data.DataTable.DeleteRow("450100")
	f.Intrinsic.Control.CallSub(enableAll)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickIssueBF.End

Program.Sub.MenuClickExport.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sControl.Declare
	
	F.Intrinsic.Control.If(v.Screen.FrmMaster!tabProd.Visible,=,False)
		f.Intrinsic.UI.Msgbox("No data loaded, unable to export.")
		f.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.SelectCase(V.Screen.FrmMaster!tabProd.Tab)
		F.Intrinsic.Control.Case("0")
			V.Local.sControl.Set("GsGCAll")
		F.Intrinsic.Control.Case("1")
			V.Local.sControl.Set("GsGcAllM")
		F.Intrinsic.Control.Case("2")
			V.Local.sControl.Set("GsGcAllO")
		F.Intrinsic.Control.Case("3")
			V.Local.sControl.Set("GsGCOper")
	F.Intrinsic.Control.EndSelect

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\GAB_5657_OpenWorkOrders_{1}_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			'Gui.FrmMaster.[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
			Gui.FrmMaster.[V.Local.sControl].ExportDetails("xlsx", V.Local.sFileExport,1)
			
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GAB_5657_OpenWorkOrders_{1}_Export.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.FrmMaster.[V.Local.sControl].Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickExport.End

Program.Sub.MenuClickResetColumns.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXALL")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
		F.Intrinsic.Control.Case("CTXOPER")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVOPER",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
		F.Intrinsic.Control.Case("CTXALLM")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvAllM",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
		F.Intrinsic.Control.Case("CTXALLO")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvAllO",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
	F.Intrinsic.Control.EndSelect
	V.Global.bLoadData.Set(False)
	F.Intrinsic.Control.CallSub(cmdProcess_Click)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickResetColumns.End

Program.Sub.MenuClickNew.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmNewWO..Show
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickNew.End

Program.Sub.frmNewWO_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmNewWO..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmNewWO_UnLoad.End

Program.Sub.cmdManualWO_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRet.Declare
	
	Gui.frmNewWO..Visible(False)
	F.Global.General.LaunchMenuTask(527,2,V.Local.iRet)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdManualWO_Click.End

Program.Sub.cmdAutoWO_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRet.Declare
	
	Gui.frmNewWO..Visible(False)
	F.Global.General.LaunchMenuTask(540,0,V.Local.iRet)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdAutoWO_Click.End

Program.Sub.FrmMaster_Resize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	'Let Form grow larger than 15375, but not lower
	F.Intrinsic.Control.If(V.Screen.FrmMaster.Width,<,15360)
		Gui.FrmMaster..Size(15360,V.Screen.FrmMaster.Height)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.FrmMaster_Resize.End

Program.Sub.FrmMaster_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.lRet.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf
	
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.FrmMaster_UnLoad.End

Program.Sub.loadTempData.Start
f.Intrinsic.Control.Try
	v.Local.sSql.Declare
	v.Local.x.Declare(long)
	v.Local.sError.Declare
	f.Intrinsic.String.Build("SELECT {0} as 'ID', {1} as 'Name' FROM {2} ORDER BY NAME",v.Args.MyColumnId,v.Args.MyColumnName,v.Args.TableName,v.Local.sSql)
	f.Intrinsic.Control.If(v.DataTable.dtTemp.Exists)
		f.Data.DataTable.Close
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtTemp","con",v.Local.ssql,true)
	f.Intrinsic.Control.For(v.Local.x,0,v.DataTable.dtTemp.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtTemp(v.Local.x).ID!FIELDVALTRIM,<>,"")
			'f.intrinsic.string.concat(v.Global.[v.Args.GlobalString],v.DataTable.dtTemp(v.Local.x).NAME!FIELDVALTRIM,"~",v.DataTable.dtTemp(v.Local.x).ID!FIELDVALTRIM,"*!*",v.global.[v.Args.GlobalString])
			f.intrinsic.string.concat(v.Global.[v.Args.GlobalString],v.DataTable.dtTemp(v.Local.x).ID!FIELDVALTRIM,"*!*",v.global.[v.Args.GlobalString])
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.x)
	f.Data.DataTable.Close("dtTemp")
f.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(FrmMaster_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.loadTempData.End

Program.Sub.SetColumnProperties.Start
f.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.iCnt.Declare
	v.Local.lCol.Declare
	v.Local.lret.Declare
	V.Local.sGabFile.Declare
	v.Local.sRet.Declare
	v.Local.sSelect.Declare
	v.Local.iCnt2.Declare
	Gui.FrmMaster.[v.args.Grid].SetGridViewProperty(v.args.GridView,"MultiSelect",True)
	Gui.FrmMaster.[V.Args.Grid].SetGridViewProperty(v.args.gridview,"AllowSort",True)
	Gui.FrmMaster.[V.Args.Grid].SetGridViewProperty(v.args.gridview,"AllowFilter",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.gridview,"OptionsDetailShowDetailTabs",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.gridview,"OptionsViewShowGroupPanel",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.gridview,"OptionsViewColumnAutoWidth",False)
	
	''''''''''''
	'MASTER
	''''''''''''
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JS","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JS","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FLAG_HOLD","Visible",False)
	
	

	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NAME_CUSTOMER","VisibleIndex",4)
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NAME_CUSTOMER","Visible",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOB","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SUFFIX","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"IND_FLAG","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LATE","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCS_REM","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PART","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_4","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_5","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SONotes","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"RowChange","Visible",False)
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOTALCOST","Caption","Total Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SELECTWO","Caption","Select WO")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRINTED","Caption","Printed")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"RELEASED","Caption","Released")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FLAG_HOLD","Caption","On Hold")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","Caption","Work Order")
	GUI.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOTerms","Caption","Terms")
	GUI.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SODate","Caption","SO Date")
	GUI.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PartFriendly","Caption","Part Friendly")
	GUI.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DAYS_LATE","Caption","Days Late")
	GUI.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_ORIG_DUE","Caption","Date Orig. Due")
	GUI.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"User1","Caption","User")


	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","VisibleIndex",0)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","VisibleIndex",1)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","VisibleIndex",2)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCRIPTION","VisibleIndex",3)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"QTY_ORDER","VisibleIndex",4)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCS_REM1","VisibleIndex",5)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DEPT","VisibleIndex",6)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","VisibleIndex",7)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NEXT_OPER","VisibleIndex",8)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTSIDE","VisibleIndex",9)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE","VisibleIndex",10)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DAYS_LATE","VisibleIndex",11)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"EST_HRS","VisibleIndex",12)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"ACT_HRS","VisibleIndex",13)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"REM_HRS","VisibleIndex",14)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOT_HRS_REM","VisibleIndex",15)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SCHEDULED_DUE_DATE","VisibleIndex",16)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SHIP_TO_OP","VisibleIndex",17)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE2","VisibleIndex",18)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NAME_CUSTOMER","VisibleIndex",19)



	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOB","Caption","Job")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SUFFIX","Caption","Suf")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRIORITY","Caption","Priority")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALESPERSON","Caption","SP")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUSTOMER_PO","Caption","Customer PO")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","Caption","Part")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LOCATION","Caption","Loc")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRODUCT_LINE","Caption","PL")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","Caption","WO Due Date")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCRIPTION","Caption","Description")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_OPENED","Caption","Opened Dt")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_START","Caption","1st Lbr St Dt")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_FLOAT","Caption","Sched Due w/Float")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_NO_FLOAT","Caption","Sched Due w/o Float")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SCHEDULED_DUE_DATE","Caption","Sched Due Date")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"EST_HRS","Caption","Est. Hrs.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"ACT_HRS","Caption","Act. Hrs.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"REM_HRS","Caption","Rem. Hrs.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOT_HRS_REM","Caption","Tot Rem. Hrs.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DEPT","Caption","Dept.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER_DATE","Caption","Cur. Op. Date")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","Caption","Current Op.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NEXT_OPER","Caption","Next Op.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTSIDE","Caption","Outside Process")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SHIP_TO_OP","Caption","Ship To Op")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"QTY_ORDER","Caption","Order Qty")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCS_REM1","Caption","Pcs Rem")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE","Caption","Notes")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE2","Caption","User Field 6 (70 Characters)")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PROJECT","Caption","Project")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PHASE","Caption","Phase")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","Caption","Sales Order")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER_LINE","Caption","Sales Order Line")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","Caption","SO Description")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT2","Caption","SO Description")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JobSteps","Caption","Job Steps")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATERIALISSUE","Caption","Materials")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTATUS","Caption","Status")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Printed","Caption","Print")
	f.ODBC.Connection!con.executeandreturn("select LABEL from OE_USER_FLDS_LN WHERE KEY_ID='03'",v.Local.sret)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_3","Caption",v.Local.sRet.Trim)
	f.ODBC.Connection!con.executeandreturn("select LABEL from OE_USER_FLDS_LN WHERE KEY_ID='04'",v.Local.sret)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_4","Caption",v.Local.sRet.Trim)
	f.ODBC.Connection!con.executeandreturn("select LABEL from OE_USER_FLDS_LN WHERE KEY_ID='05'",v.Local.sret)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_5","Caption",v.Local.sRet.Trim)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SONotes","Caption","SO Notes")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Caption","Part Doc Cntrl")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_MATERIAL","Caption","Material Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_LABOR","Caption","Labour Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_OVERHEAD","Caption","Overhead Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_PRICE_PER_UNIT","Caption","Price/Unit")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTS","Caption","Outside Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FREIGHT","Caption","Freight Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OTHER","Caption","Other Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRICE_EXT","Caption","Extended Sell")
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOTALCOST","Caption","Total Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART1","Caption","Display Part")
	
	f.Intrinsic.Control.If(v.Args.grid,=,"GsGCAll")
		Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MyRowID","Caption","Row ID")
		Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOT_DAYS_REM_NO_FLOAT","Visible",False)
		Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOT_DAYS_REM","Visible",False)
	f.Intrinsic.Control.EndIf

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NAME_CUSTOMER","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","AllowEdit",TRUE)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SELECTWO","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRINTED","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"RELEASED","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FLAG_HOLD","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOB","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SUFFIX","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRIORITY","AllowEdit",False)

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALESPERSON","AllowEdit",True) 
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUSTOMER_PO","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LOCATION","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRODUCT_LINE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCRIPTION","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_OPENED","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_START","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_FLOAT","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_NO_FLOAT","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SCHEDULED_DUE_DATE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"EST_HRS","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"ACT_HRS","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"REM_HRS","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOT_HRS_REM","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DEPT","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER_DATE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NEXT_OPER","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTSIDE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SHIP_TO_OP","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"QTY_ORDER","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCS_REM1","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE2","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PROJECT","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PHASE","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER_LINE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT2","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTEPS","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Printed","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATERIALISSUE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTATUS","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_MATERIAL","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_LABOR","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_OVERHEAD","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOTerms","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SODate","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DAYS_LATE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_ORIG_DUE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"User1","AllowEdit",False)

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT2","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRIORITY","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PART","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LOCATION","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRODUCT_LINE","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_OPENED","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_START","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JS","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"IND_FLAG","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LATE","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCS_REM","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUSER_3","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUSER_4","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUSER_5","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"ROWCHANGE","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PHASE","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOB","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SUFFIX","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_PRICE_PER_UNIT","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOTerms","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SODate","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PartFriendly","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_ORIG_DUE","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DAYS_LATE_NO_FLOAT","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_PART1","Visible",False)

	f.Intrinsic.Control.If(v.Args.grid,=,"GsGCAll")
		Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MyRowID","Visible",False)
	f.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NAME_CUSTOMER","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCRIPTION","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTEPS","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE2","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PROJECT","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PHASE","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUSTOMER_PO","ReadOnly",False)

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALESPERSON","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SELECTWO","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Printed","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_4","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_5","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SONotes","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATERIALISSUE","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTATUS","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOTerms","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SODate","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_FLOAT","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_NO_FLOAT","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DAYS_LATE","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_ORIG_DUE","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"User1","ReadOnly",True)

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NAME_CUSTOMER","MinWidth","180")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","MinWidth","90")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRINTED","MinWidth","55")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"RELEASED","MinWidth","65")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FLAG_HOLD","MinWidth","55")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOB","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SUFFIX","MinWidth","30")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRIORITY","MinWidth","50")

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALESPERSON","MinWidth","30")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUSTOMER_PO","MinWidth","111")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","MinWidth","120")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LOCATION","MinWidth","30")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRODUCT_LINE","MinWidth","30")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCRIPTION","MinWidth","200")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_OPENED","MinWidth","90")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_START","MinWidth","90")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_FLOAT","MinWidth","90")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_NO_FLOAT","MinWidth","90")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SCHEDULED_DUE_DATE","MinWidth","105")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"EST_HRS","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"ACT_HRS","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"REM_HRS","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOT_HRS_REM","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DEPT","MinWidth","60")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER_DATE","MinWidth","85")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","MinWidth","85")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NEXT_OPER","MinWidth","60")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTSIDE","MinWidth","105")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SHIP_TO_OP","MinWidth","70")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"QTY_ORDER","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCS_REM1","MinWidth","60")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE","MinWidth","200")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE2","MinWidth","200")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PROJECT","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PHASE","MinWidth","40")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER_LINE","MinWidth","40")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","MinWidth","135")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT2","MinWidth","135")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SELECTWO","MinWidth","55")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTEPS","MinWidth","200")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_4","MinWidth","50")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_5","MinWidth","50")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SONotes","MinWidth","200")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_Material","MinWidth","120")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_LABOR","MinWidth","120")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_OVERHEAD","MinWidth","120")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTS","MinWidth","120")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FREIGHT","MinWidth","120")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OTHER","MinWidth","120")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRICE_EXT","MinWidth","120")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOTALCOST","MinWidth","120")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOTerms","MinWidth","50")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SODate","MinWidth","50")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PartFriendly","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DAYS_LATE","MinWidth","85")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_ORIG_DUE","MinWidth","85")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"User1","MinWidth","85")

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NAME_CUSTOMER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRINTED","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"RELEASED","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FLAG_HOLD","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOB","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SUFFIX","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRIORITY","HeaderHAlignment","Center")

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALESPERSON","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUSTOMER_PO","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LOCATION","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRODUCT_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCRIPTION","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_OPENED","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_START","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_FLOAT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_NO_FLOAT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SCHEDULED_DUE_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"EST_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"ACT_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"REM_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOT_HRS_REM","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DEPT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NEXT_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTSIDE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SHIP_TO_OP","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"QTY_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCS_REM1","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE2","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PROJECT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PHASE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT2","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SELECTWO","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_3","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_4","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_5","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SONotes","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATERIALISSUE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTATUS","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_MATERIAL","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_LABOR","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_OVERHEAD","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTS","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_PRICE_PER_UNIT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FREIGHT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OTHER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_Material","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_LABOR","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_OVERHEAD","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTS","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FREIGHT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OTHER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRICE_EXT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOTALCOST","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOTerms","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SODate","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PartFriendly","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DAYS_LATE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_ORIG_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"User1","HeaderHAlignment","Center")

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"RELEASED","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FLAG_HOLD","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOB","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SUFFIX","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRIORITY","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALESPERSON","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRODUCT_LINE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_OPENED","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_START","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_FLOAT","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_NO_FLOAT","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SCHEDULED_DUE_DATE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"EST_HRS","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"ACT_HRS","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"REM_HRS","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOT_HRS_REM","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DEPT","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER_DATE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SHIP_TO_OP","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"QTY_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PROJECT","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PHASE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER_LINE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SELECTWO","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATERIALISSUE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTATUS","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_PRICE_PER_UNIT","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DAYS_LATE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_ORIG_DUE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_Material","CellHAlignment","right")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_LABOR","CellHAlignment","right")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_OVERHEAD","CellHAlignment","right")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTS","CellHAlignment","right")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FREIGHT","CellHAlignment","right")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OTHER","CellHAlignment","right")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRICE_EXT","CellHAlignment","right")
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NAME_CUSTOMER","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRINTED","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"RELEASED","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FLAG_HOLD","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOB","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SUFFIX","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRIORITY","HeaderFontBold",True)
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALESPERSON","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUSTOMER_PO","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LOCATION","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRODUCT_LINE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCRIPTION","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_OPENED","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_START","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_FLOAT","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_NO_FLOAT","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SCHEDULED_DUE_DATE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"EST_HRS","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"ACT_HRS","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"REM_HRS","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOT_HRS_REM","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DEPT","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER_DATE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NEXT_OPER","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTSIDE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SHIP_TO_OP","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"QTY_ORDER","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCS_REM1","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE2","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PROJECT","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PHASE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER_LINE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT2","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SELECTWO","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTEPS","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_3","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_4","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_5","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SONotes","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DAYS_LATE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_ORIG_DUE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATERIALISSUE","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTATUS","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_MATERIAL","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_LABOR","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_OVERHEAD","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTS","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FREIGHT","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OTHER","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_PRICE_PER_UNIT","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOTALCOST","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRICE_EXT","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SODate","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOTerms","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PartFriendly","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"User1","HeaderFontBold",True)
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","CellBackColor","LightYellow")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE","CellBackColor","LightYellow")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_NOTE2","CellBackColor","LightYellow")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_4","CellBackColor","LightYellow")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SOUser_5","CellBackColor","LightYellow")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SONotes","CellBackColor","LightYellow")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","CellBackColor","LightYellow")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER_LINE","CellForeColor","Blue")
	
	f.Intrinsic.Control.If(v.Global.bViewWO,=,True,or,v.Global.bEditWO,=,True)
		Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","CellForeColor","Blue")
	f.Intrinsic.Control.ElseIf(v.Global.bIssue,=,True,or,v.Global.bWipToFG,=,True)
		Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","CellForeColor","Blue")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Global.bViewPart,=,True,or,v.Global.bEditPart,=,True)
		Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","CellForeColor","Blue")
	f.Intrinsic.Control.EndIf	

	F.Intrinsic.String.Build("{0}\GAB_5556_Repl_Upd_Resched_Utility_WC_WG.g2u",V.Caller.GasDir,V.Local.sGabFile)
	F.Intrinsic.File.Exists(V.Local.sGabFile,V.Global.bExists)
	F.Intrinsic.Control.If(V.Global.bExists)
		f.Intrinsic.Control.AndIf(v.Global.bReplUpdReschedUtility)
		Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","CellForeColor","Blue")
		Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NEXT_OPER","CellForeColor","Blue")
	F.Intrinsic.Control.EndIf

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SELECTWO","Fixed","Left") 'CODESORT
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRINTED","Fixed","Left") 'print
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"RELEASED","Fixed","Left") 'released
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Fixed","Left") 'part doc
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBStatus","Fixed","Left") 'status
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATERIALISSUE","Fixed","Left") 'mats
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","Fixed","Left") 'work order
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","Fixed","Left") 'WO due date

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOT_HRS_REM","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PRICE_EXT","DisplayCustomNumeric","$###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TOTALCOST","DisplayCustomNumeric","$###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_PRICE_PER_UNIT","DisplayCustomNumeric","$###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_MATERIAL","DisplayCustomNumeric","$###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_LABOR","DisplayCustomNumeric","$###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTS","DisplayCustomNumeric","$###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"FREIGHT","DisplayCustomNumeric","$###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OTHER","DisplayCustomNumeric","$###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_OVERHEAD","DisplayCustomNumeric","$###,###,##0.00")

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_FLOAT","DisplayCustomDatetime","d")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_NO_FLOAT","DisplayCustomDatetime","d")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_OPENED","DisplayCustomDatetime","d")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_START","DisplayCustomDatetime","d")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SODATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SCHEDULED_DUE_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SHIP_TO_OP","DisplayCustomDatetime","d")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_ORIG_DUE","DisplayCustomDatetime","d")
	
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	'Materials
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"MATERIALISSUE","TAGNAME1","Equal","ALL")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"MATERIALISSUE","TAGNAME1","BackColor","LightGreen")
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"MATERIALISSUE","TAGNAME2","Equal","SOME")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"MATERIALISSUE","TAGNAME2","BackColor","Orange")
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"MATERIALISSUE","TAGNAME3","Equal","NONE")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"MATERIALISSUE","TAGNAME3","BackColor","Red")
	
	'Job Status
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"JOBSTATUS","TAGNAME4","Equal","OKAY")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"JOBSTATUS","TAGNAME4","BackColor","LightGreen")
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"JOBSTATUS","TAGNAME5","Equal","ATTENTION")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"JOBSTATUS","TAGNAME5","BackColor","Orange")
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"JOBSTATUS","TAGNAME6","Equal","ISSUE")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"JOBSTATUS","TAGNAME6","BackColor","Red")
	
	'Scheduled Due Date
	
	'=====
	'Modified by Alejandro Noguera 10/07/2022
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"SCHEDULED_DUE_DATE","TAGNAME7","Less","01/01/1900")
	'gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"SCHEDULED_DUE_DATE","TAGNAME7","Less","0")
	'=====
	
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(v.ARGS.gridview,"SCHEDULED_DUE_DATE","TAGNAME7","ForeColor","Red")
	
	'Days Late
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"DAYS_LATE","TAGNAME8","Less","0")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"DAYS_LATE","TAGNAME8","ForeColor","Red")
	
	'Time Remaining
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"REM_HRS","TAGNAME9","Less","0")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"REM_HRS","TAGNAME9","ForeColor","Red")
	
	'Part Document Control
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Icon","DCS-OFF")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Caption","Part Doc")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","MinWidth","25")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Width","25")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Visible",True)
	F.Data.DataTable.Select("dtAll2","PrtDocCntrl = 'DCS-ON'",V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		'F.Intrinsic.Control.For(V.Local.iCnt2,0,V.Local.sSelect.UBound,1)
			'gui.frmMaster.[V.ARGS.Grid].GetColumnIndexByName(v.args.gridview,"PrtDocCntrl",v.Local.lret)
			'gui.frmMaster.[V.ARGS.Grid].SetCellAppearance(v.args.gridview,v.Local.lret,V.Local.sSelect(V.Local.iCnt2),"Icon","DCS-ON")
		'F.Intrinsic.Control.Next(V.Local.iCnt2)
	F.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"TOTALCOST","TOTALCOST","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"EST_HRS","SUM_EST_HRS","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"ACT_HRS","SUM_ACT_HRS","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"REM_HRS","SUM_REM_HRS","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"TOT_HRS_REM","SUM_TOT_HRS_REM","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"AMT_MATERIAL","AMT_MATERIAL","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"AMT_LABOR","AMT_LABOR","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"AMT_OVERHEAD","AMT_OVERHEAD","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"AMT_PRICE_PER_UNIT","AMT_PRICE_PER_UNIT","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"OUTS","OUTS","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"FREIGHT","FREIGHT","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"OTHER","OTHER","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"PRICE_EXT","PRICE_EXT","Sum","","","n")
	GUI.FrmMaster.[V.Args.Grid].AddgridGroupSummaryItem(v.Args.gridview,"EST_HRS","EST_HRS","SUM","| Est Hours: ","   ","n2")
	GUI.FrmMaster.[V.Args.Grid].AddgridGroupSummaryItem(v.Args.gridview,"ACT_HRS","ACT_HRS","SUM","| Act Hours: ","   ","n2")
	GUI.FrmMaster.[V.Args.Grid].AddgridGroupSummaryItem(v.Args.gridview,"REM_HRS","REM_HRS","SUM","| Rem Hours: ","   ","n2")
	
	GUI.FrmMaster.[V.Args.Grid].AddgridGroupSummaryItem(v.Args.gridview,"Job","REM_HRS","Count","| Count: ","   ","n2")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(FrmMaster_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.SetColumnProperties.End

Program.Sub.setColumnPropertiesOper.Start
f.Intrinsic.Control.Try
	v.Local.iCnt.Declare
	v.Local.lCol.Declare
	v.Local.sError.Declare

'tomas
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","VisibleIndex",1)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","VisibleIndex",2)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","VisibleIndex",3)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCRIPTION","VisibleIndex",4)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"QTY_ORDER","VisibleIndex",5)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCS_REM1","VisibleIndex",6)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DEPT","VisibleIndex",7)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SEQRES","VisibleIndex",8)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JobSteps","VisibleIndex",9)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","VisibleIndex",10)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"StartDate","VisibleIndex",11)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DueDate","VisibleIndex",12)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"EST_HRS","VisibleIndex",13)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"ACT_HRS","VisibleIndex",14)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"REM_HRS","VisibleIndex",15)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"NEXT_OPER","VisibleIndex",16)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"OUTSIDE","VisibleIndex",17)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WO_Note","VisibleIndex",18)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DAYS_LATE","VisibleIndex",19)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SCHEDULED_DUE_DATE","VisibleIndex",20)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER_DATE","VisibleIndex",21)


	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SALES_ORDER","VisibleIndex",1)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","CODESORT","VisibleIndex",2)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DISPLAY_PART","VisibleIndex",3)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DESCRIPTION","VisibleIndex",4)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","QTY_ORDER","VisibleIndex",5)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","PCS_REM1","VisibleIndex",6)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DEPT","VisibleIndex",7)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SEQRES","VisibleIndex",8)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","JobSteps","VisibleIndex",9)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","CUR_OPER","VisibleIndex",10)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","StartDate","VisibleIndex",11)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DueDate","VisibleIndex",12)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","EST_HRS","VisibleIndex",13)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","ACT_HRS","VisibleIndex",14)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","REM_HRS","VisibleIndex",15)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","NEXT_OPER","VisibleIndex",16)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","OUTSIDE","VisibleIndex",17)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","WO_Note","VisibleIndex",18)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DAYS_LATE","VisibleIndex",19)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SCHEDULED_DUE_DATE","VisibleIndex",20)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","CUR_OPER_DATE","VisibleIndex",21)



	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","MyRowID","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","TOTALCOST","vISIBLE",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("GVOPER","NAME_CUSTOMER","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","Part","Caption","Part")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("GVOPER","SEQ","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","JOB","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SUFFIX","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","FLAG_HOLD","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","PRIORITY","Visible",False)
	'Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","NAME_CUSTOMER","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SALESPERSON","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","CUSTOMER_PO","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","LOCATION","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","PRODUCT_LINE","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DATE_OPENED","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DATE_START","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SCHEDULED_DUE_DATE","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","TOT_HRS_REM","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DEPT","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","CUR_OPER_DATE","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","OUTSIDE","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SHIP_TO_OP","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","WO_NOTE","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","WO_NOTE2","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","PROJECT","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","PHASE","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","CODESORT2","Visible",False)
	'Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","JOBSTATUS","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SOUser_3","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SOUser_4","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SOUser_5","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SONotes","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","AMT_MATERIAL","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","AMT_LABOR","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","AMT_OVERHEAD","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","AMT_PRICE_PER_UNIT","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","OUTS","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","FREIGHT","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","OTHER","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","JOBSTATUS","Visible",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","PRICE_EXT","Visible",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","PCS_REM","VISIBLE",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","PCS_REM1","vISIBLE",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DATE_DUE_FLOAT","vISIBLE",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DATE_DUE_NO_FLOAT","vISIBLE",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","Released","vISIBLE",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DISPLAY_PART1","vISIBLE",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","JSS","vISIBLE",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DAYS_LATE_NO_FLOAT","vISIBLE",False)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DISPLAY_PART1","vISIBLE",False)
	
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SEQRES","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DueDate","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","StartDate","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DAYS_LATE_NO_FLOAT","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","JSS","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DISPLAY_PART1","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","IND_FLAG","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","PCS_REM","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","LATE","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","JS","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","RowChange","HEADERFONTBOLD",True)
	
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SEQRES","Caption","WC1")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","IND_FLAG","Caption","Indirect Flag1")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","PCS_REM","Caption","Pieces Rem. Holder1")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","LATE","Caption","Late1")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","JS","Caption","Job Suffix Key1")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","RowChange","Caption","Row Change1")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SEQ","HEADERFONTBOLD",True)
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SEQ","Caption","Sequence")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SEQ","HeaderHAlignment","Center")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","EST_HRS","Caption","Op Est.")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","ACT_HRS","Caption","Op Act.")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","REM_HRS","Caption","Op Rem.")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","JSS","Caption","Job Suffix Seq. Key")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","StartDate","Caption","Seq. Start Date")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DueDate","Caption","Seq. Due Date")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DAYS_LATE_NO_FLOAT","Caption","Days Late W/O Float")
	
	
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","StartDate","DisplayCustomDatetime","d")
	Gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","DueDate","DisplayCustomDatetime","d")
	
	gui.FrmMaster.gsgcOper.AddStyleFormatCondition("gvOper","MATERIALISSUE","TAGNAME1","Equal","ALL")
	gui.FrmMaster.gsgcOper.SetStyleFormatConditionProperty("gvOper","MATERIALISSUE","TAGNAME1","BackColor","LightGreen")
	
	gui.FrmMaster.gsgcOper.AddStyleFormatCondition("gvOper","MATERIALISSUE","TAGNAME2","Equal","SOME")
	gui.FrmMaster.gsgcOper.SetStyleFormatConditionProperty("gvOper","MATERIALISSUE","TAGNAME2","BackColor","Orange")
	
	gui.FrmMaster.gsgcOper.AddStyleFormatCondition("gvOper","MATERIALISSUE","TAGNAME3","Equal","NONE")
	gui.FrmMaster.gsgcOper.SetStyleFormatConditionProperty("gvOper","MATERIALISSUE","TAGNAME3","BackColor","Red")
	
	gui.FrmMaster.gsgcOper.AddStyleFormatCondition("gvOper","DAYS_LATE","TAGNAME4","Less","0")
	gui.FrmMaster.gsgcOper.SetStyleFormatConditionProperty("gvOper","DAYS_LATE","TAGNAME4","ForeColor","Red")

	'Job Status
	gui.FrmMaster.gsgcOper.AddStyleFormatCondition("gvOper","JOBSTATUS","TAGNAME4","Equal","OKAY")
	gui.FrmMaster.gsgcOper.SetStyleFormatConditionProperty("gvOper","JOBSTATUS","TAGNAME4","BackColor","LightGreen")
	gui.FrmMaster.gsgcOper.AddStyleFormatCondition("gvOper","JOBSTATUS","TAGNAME5","Equal","ATTENTION")
	gui.FrmMaster.gsgcOper.SetStyleFormatConditionProperty("gvOper","JOBSTATUS","TAGNAME5","BackColor","Orange")
	gui.FrmMaster.gsgcOper.AddStyleFormatCondition("gvOper","JOBSTATUS","TAGNAME6","Equal","ISSUE")
	gui.FrmMaster.gsgcOper.SetStyleFormatConditionProperty("gvOper","JOBSTATUS","TAGNAME6","BackColor","Red")


f.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(FrmMaster_UnLoad)

f.Intrinsic.Control.EndTry
Program.Sub.setColumnPropertiesOper.End

Program.Sub.SetColumnPropertiesAllMO.Start
f.Intrinsic.Control.Try
	v.Local.iCnt.Declare
	v.Local.lCol.Declare
	V.Local.sSelect.Declare
	v.Local.icnt2.Declare
	v.Local.lRet.Declare
	
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PrtDocCntrl","Fixed","Left") 'part doc
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialManage","Fixed","Left") 'mat. stats
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"WOLabel","Fixed","Left") 'Work Order
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","Fixed","Left") 'Seq
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINEDUE","Fixed","Left") 'SeqWO Mat. Due LINEDUE
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE","Fixed","Left") 'wo due date
	'Hide columns based on grid control
	F.Intrinsic.Control.SelectCase(V.Args.Grid.UCase)
		f.Intrinsic.Control.Case("GSGCALLM")
		
		
			'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","VisibleIndex",0)		

			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","VisibleIndex",0)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","VisibleIndex",1)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PART","VisibleIndex",2)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PART_DESCRIPTION","VisibleIndex",3)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_MAT","VisibleIndex",4)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCR","VisibleIndex",5)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCSTOPROD","VisibleIndex",6)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"QTY_ONHAND","VisibleIndex",7)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCSCOMPL","VisibleIndex",8)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCSREMAIN","VisibleIndex",9)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LEAD_TIME","VisibleIndex",10)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VENDOR","VisibleIndex",11)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VendorSearch","VisibleIndex",12)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VENDORNAME","VisibleIndex",13)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PURCHASE_ORDER","VisibleIndex",14)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LINE","VisibleIndex",15)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"TEXT","VisibleIndex",16)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"COST","VisibleIndex",17)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Extension","VisibleIndex",18)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PURUM","VisibleIndex",19)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_LINE","VisibleIndex",20)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","VisibleIndex",21)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PL","VisibleIndex",22)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODE_SOURCE","VisibleIndex",23)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODE_SOURCE","VisibleIndex",24)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_ALT_COST","VisibleIndex",25)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_COST","VisibleIndex",26)
	
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATERIALISSUE","Visible",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Vendor2","Visible",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Cost2","Visible",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Vendor2","AllowShowHide",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Cost2","AllowShowHide",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JobSteps","Visible",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTATUS","Visible",True)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"POANDLINE","Visible",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_MAT","Caption","Raw Material Part Number")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATPART","Caption","MaterialGSS")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MATPART","Visible","false")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DESCR","Caption","Raw Material Description")
			'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MatDisplayPart","Caption","Material")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"InvCodeSort","Caption","Inv. Sort Code")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"InvCodeSort","ReadOnly","True")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"InvCodeSort","AllowEdit","False")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"InvCodeSort","HeaderFontBold","True")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"InvCodeSort","CellHAlignment","Center")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"InvCodeSort","HeaderHAlignment","Center")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINEDUE","Caption","WO Mat. Due")
			
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","MinWidth","50")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","Caption","Cur. Oper. Date")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","HEADERFONTBOLD","True")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","ReadOnly","True")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","AllowEdit","False")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","DisplayCustomDatetime","d")	
			
			'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_PART1","Visible",False)
			
			gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"MaterialManage","TAGNAME1","Equal","In Stock")
			gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"MaterialManage","TAGNAME1","BackColor","LightGreen")
			gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"MaterialManage","TAGNAME2","Equal","On Order")
			gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"MaterialManage","TAGNAME2","BackColor","Orange")
			gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"MaterialManage","TAGNAME3","Equal","Out of Stock")
			gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"MaterialManage","TAGNAME3","BackColor","Red")
	
		f.Intrinsic.Control.Case("GSGCALLO")
			'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Visible",True)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JobStatus","Visible",True)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","Visible",True)
			'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Fixed","Left")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobStatus","Fixed","Left")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialManage","Fixed","Left") 'mat. stats
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"WOLabel","Fixed","Left") 'Work Order
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","Fixed","Left") 'Seq
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINEDUE","Fixed","Left") 'SeqWO Mat. Due LINEDUE
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER","Fixed","Left")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE","Fixed","Left") 'wo due date
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"InvCodeSort","Visible",False)
			
			
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER","VisibleIndex",1)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","VisibleIndex",2)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PART","VisibleIndex",3)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PART_DESCRIPTION","VisibleIndex",4)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_MAT","VisibleIndex",5)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCR","VisibleIndex",6)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCSTOPROD","VisibleIndex",7)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCSCOMPL","VisibleIndex",8)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PCSREMAIN","VisibleIndex",9)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LEAD_TIME","VisibleIndex",10)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VENDOR","VisibleIndex",11)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VendorSearch","VisibleIndex",12)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VENDORNAME","VisibleIndex",13)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PURCHASE_ORDER","VisibleIndex",14)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LINE","VisibleIndex",15)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Text","VisibleIndex",16)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"COST","VisibleIndex",17)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Extension","VisibleIndex",18)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PURUM","VisibleIndex",19)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_LINE","VisibleIndex",20)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_ALT_COST","VisibleIndex",21)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_COST","VisibleIndex",22)
			
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODE_SOURCE","Visible",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"QTY_ONHAND","Visible",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"POANDLINE","Visible",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATERIALISSUE","Visible",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATERIALMANAGE","Visible",False)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_MAT","Caption","Outside Process")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATPART","Caption","ProcessGSS")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DESCR","Caption","Outside Process Description")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINEDUE","Caption","WO Out. Due")
			
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JobSteps","AllowEdit",True)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JobSteps","ReadOnly",True)
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobSteps","Caption","Job Steps")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobSteps","HeaderHAlignment","Center")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobSteps","HEADERFONTBOLD","True")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobSteps","MinWidth","150")
			
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","MinWidth","50")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","Caption","Cur. Oper. Date")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","HEADERFONTBOLD","True")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","ReadOnly","True")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","AllowEdit","False")
			Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER_DATE","DisplayCustomDatetime","d")	
	
			
	F.Intrinsic.Control.EndSelect
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PART","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PART","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionBehaviorEditable",tRUE)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowSort",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowFilter",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionsViewShowGroupPanel",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.gridview,"OptionsViewColumnAutoWidth",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.gridview,"OptionsViewRowAutoHeight",True)
	
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Sales_Order","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Sales_Order","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Readonly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SELECTWO","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Vendor","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SELECTWO","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Vendor","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Cost","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Cost","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Text","ReadOnly",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Text","AllowEdit",True)
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PURUM","Readonly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PURUM","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODE_SOURCE","Readonly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODE_SOURCE","AllowEdit",False)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MatDisplayPart","Readonly",True)
'	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MatDisplayPart","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_MAT","Readonly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_MAT","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VendorSearch","Readonly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VendorSearch","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CUR_OPER","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MaterialIssue","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MaterialIssue","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MaterialManage","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MaterialManage","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JobStatus","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JobStatus","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Part_Description","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Part_Description","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"WOLabel","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER_LINE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SALES_ORDER_LINE","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"CODESORT","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VENDORNAME","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VENDORNAME","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LINE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LINE","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LINEDUE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LINEDUE","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PartFriendly","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PartFriendly","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LOCATION","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"LOCATION","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Suffix","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Suffix","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SEQ","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"SEQ","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DISPLAY_PART","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATPART","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"MATPART","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCR","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DESCR","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PURCHASE_ORDER","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PURCHASE_ORDER","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_LINE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"DATE_DUE_LINE","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PL","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PL","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_ALT_COST","AllowEdit",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"AMT_ALT_COST","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"POANDLINE","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"POANDLINE","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTEPS","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"JOBSTEPS","ReadOnly",True)
	
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Sales_Order","CellBackColor","LightYellow")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER","Caption","Sales Order")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PrtDocCntrl","Caption","Part Doc")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Vendor","CellBackColor","LightYellow")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"Cost","CellBackColor","LightYellow")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART","Caption","Part")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE","Caption","WO Due Date")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SelectWO","Caption","Select WO")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURUM","Caption","Purch. UM")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PrtDocCntrl","Caption","Part Doc")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER","Caption","Current Op.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialIssue","Caption","Materials")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialManage","Caption","Mat. Status")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobStatus","Caption","Status")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"WOLabel","Caption","Work Order")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER_LINE","Caption","Sales Order Line")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODESORT","Caption","SO Description")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDORNAME","Caption","Vendor Name")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE","Caption","PO Line")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PartFriendly","Caption","Part Friendly")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Suffix","Caption","Suffix")	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","Caption","Seq4")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART_DESCRIPTION","Caption","Description")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDOR","Caption","Vendor")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","Caption","PO")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","Caption","PO Due Date")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","Caption","Inv. Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COST","Caption","Est. Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"EXTENSION","Caption","Ext. Est. Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_PART","Caption","Part")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSTOPROD","Caption","Qty. Req'd")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSCOMPL","Caption","Qty. Issued")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSREMAIN","Caption","Qty. Rem.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LEAD_TIME","Caption","Lead Days")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONHAND","Caption","On Hand")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Cost","Caption","Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Extension","Caption","Extension")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PL","Caption","Product Line")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"POANDLINE","Caption","PO Line Key")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JOB","Caption","Job Key")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JS","Caption","Job Suffix Key")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JSS","Caption","Job Suffix Seq. Key")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Burden","Caption","WO Unit Cost Est.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","Caption","Location")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_ALT_COST","Caption","Alt Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODE_SOURCE","Caption","Source Code")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VendorSearch","Caption","Vendor Search")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Text","Caption","PO Line Text")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MyRowID","Caption","Row ID")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobSteps","Caption","Job Steps")

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PrtDocCntrl","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PART","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDOR","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSTOPROD","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSCOMPL","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSREMAIN","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LEAD_TIME","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONHAND","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Cost","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Extension","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SelectWO","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialIssue","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialManage","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobStatus","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"WOLabel","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER_LINE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODESORT","CellHAlignment","50")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDORNAME","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINEDUE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PartFriendly","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Suffix","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PL","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURUM","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_ALT_COST","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODE_SOURCE","CellHAlignment","Center")
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSCOMPL","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Cost","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Extension","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDOR","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","HeaderHAlignment","Center")
	gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSTOPROD","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSREMAIN","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONHAND","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_MAT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURUM","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_ALT_COST","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODE_SOURCE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SelectWO","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PrtDocCntrl","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialIssue","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialManage","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobStatus","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"WOLabel","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODESORT","HeaderHAlignment","50")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDORNAME","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINEDUE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PartFriendly","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Suffix","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PL","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURUM","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"TEXT","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Burden","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","HeaderHAlignment","Center")

	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SelectWO","Fixed","Left")
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialIssue","Fixed","Left")
	
	
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PrtDocCntrl","Fixed","Left") 'part doc
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialManage","Fixed","Left") 'mat. stats
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"WOLabel","Fixed","Left") 'Work Order
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","Fixed","Left") 'Seq
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINEDUE","Fixed","Left") 'SeqWO Mat. Due LINEDUE
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE","Fixed","Left") 'wo due date
	
	
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER","Fixed","Left") 'Sales order SALES_ORDER
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER","Fixed","Left") ' current op
	'Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobStatus","Fixed","Left")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SelectWO","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PrtDocCntrl","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURUM","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialIssue","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialManage","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobStatus","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"WOLabel","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER_LINE","MinWidth","50")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODESORT","MinWidth","150")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDORNAME","MinWidth","150")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE","MinWidth","50")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINEDUE","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PartFriendly","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Suffix","MinWidth","75")	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_PART","MinWidth","200")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","MinWidth","25")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DESCR","MinWidth","200")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDOR","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSTOPROD","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSCOMPL","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSREMAIN","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LEAD_TIME","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONHAND","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Cost","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_ALT_COST","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Extension","MinWidth","95")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Part","MinWidth","95")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MatPart","MinWidth","150")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART_DESCRIPTION","MinWidth","150")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_MAT","MinWidth","225")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PL","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODE_SOURCE","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"TEXT","MinWidth","150")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"TEXT","Width","150")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobSteps","MinWidth","150")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobSteps","Width","150")
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SelectWO","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PrtDocCntrl","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CUR_OPER","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialManage","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MaterialIssue","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobStatus","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MatPart","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"WOLabel","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SALES_ORDER_LINE","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODESORT","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDORNAME","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINEDUE","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PartFriendly","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART_DESCRIPTION","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Suffix","HEADERFONTBOLD","True")	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_PART","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DESCR","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDOR","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_ALT_COST","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSTOPROD","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSCOMPL","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSREMAIN","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LEAD_TIME","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONHAND","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Cost","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURUM","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODE_SOURCE","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VendorSearch","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Text","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Extension","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_MAT","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PL","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"POANDLINE","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JOB","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JS","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JSS","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MyRowID","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Burden","HEADERFONTBOLD","True")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JobSteps","HEADERFONTBOLD","True")
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PartFriendly","Visible","false")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","Visible","false")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Suffix","Visible","false")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PL","Visible","false")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"Burden","Visible","false")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"POANDLINE","Visible","false")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JS","Visible","false")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JSS","Visible","false")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JOB","Visible","false")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SUFFIX","Visible","false")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MyRowID","Visible","false")
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"VendorSearch","Icon","BROWSE")
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"WOLabel","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"WOLabel","CellForeColor","Blue")
	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_PART","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MATPART","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_MAT","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_PART","CellForeColor","Blue")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART","CellForeColor","Blue")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","CellForeColor","Blue")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","CellForeColor","Blue")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MATPART","CellForeColor","Blue")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_MAT","CellForeColor","Blue")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_MAT","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONHAND","DisplayCustomNumeric","###,###.###")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LEAD_TIME","DisplayCustomNumeric","###.###")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","DisplayCustomNumeric","$#,###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COST","DisplayCustomNumeric","$#,###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"EXTENSION","DisplayCustomNumeric","$#,###,###,##0.00")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","DisplayCustomDatetime","d")	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINEDUE","DisplayCustomDatetime","d")		
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE","DisplayCustomDatetime","d")	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JS","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JSS","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JOB","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MATPART","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_PART","Visible",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART","Visible",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"MyRowID","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","Caption","Seq")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION","Caption","Loc")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"TEXT","CellWordWrap","Wrap")
	
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"MATERIALISSUE","TAGNAME1","Equal","ALL")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"MATERIALISSUE","TAGNAME1","BackColor","LightGreen")
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"MATERIALISSUE","TAGNAME2","Equal","SOME")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"MATERIALISSUE","TAGNAME2","BackColor","Orange")
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"MATERIALISSUE","TAGNAME3","Equal","NONE")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"MATERIALISSUE","TAGNAME3","BackColor","Red")
	
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"JOBSTATUS","TAGNAME4","Equal","OKAY")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"JOBSTATUS","TAGNAME4","BackColor","LightGreen")
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"JOBSTATUS","TAGNAME5","Equal","ATTENTION")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"JOBSTATUS","TAGNAME5","BackColor","Orange")
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"JOBSTATUS","TAGNAME6","Equal","ISSUE")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"JOBSTATUS","TAGNAME6","BackColor","Red")
	
	gui.FrmMaster.[V.ARGS.Grid].AddStyleFormatCondition(V.ARGS.gridview,"DATE_DUE_LINE","datedueline1","Expression","[Date_Due_Line] > [LineDue]")
	gui.FrmMaster.[V.ARGS.Grid].SetStyleFormatConditionProperty(V.ARGS.gridview,"DATE_DUE_LINE","datedueline1","ForeColor","Red")

'	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.[V.Args.DT]![V.Args.DV].RowCount--,1)
		'If PO Due Date > Mat Due Date
'		GUI.FrmMaster.[V.Args.GRID].GetColumnIndexByName(V.Args.GRIDVIEW,"DATE_DUE_LINE",v.Local.lCol)
'		F.Intrinsic.Control.If(V.DataTable.[V.Args.DT](V.Local.iCnt).DATE_DUE_LINE!FieldValTrim,<>,"")
'			F.Intrinsic.Control.If(V.DataTable.[V.Args.DT](V.Local.iCnt).DATE_DUE_LINE!FieldVal,>,V.DataTable.[V.Args.DT](V.Local.iCnt).LineDue!FieldVal)
'				''''''''''''''''''
'				'CHANGE THESE LINES
'				''''''''''''''''''
'				'Gui.FrmMaster.[V.ARGS.Grid].SetCellAppearance(v.args.gridview,v.Local.lCol,v.Local.iCnt,"ForeColor","Red")
'				'Gui.FrmMaster.[V.ARGS.Grid].SetCellAppearance(v.args.gridview,v.Local.lCol,v.Local.iCnt,"Halignment","Center")
'			F.Intrinsic.Control.EndIf
'		F.Intrinsic.Control.EndIf
		
		'PO Locking
'		GUI.FrmMaster.[V.Args.GRID].GetColumnIndexByName(V.Args.GRIDVIEW,"VENDOR",v.Local.lCol)
'		f.Intrinsic.Control.If(v.DataTable.[V.Args.DT](v.Local.icnt).PURCHASE_ORDER!FIELDVALTRIM,<>,"")
'			GUI.FrmMaster.[V.Args.GRID].setcellproperty(V.Args.GRIDVIEW,v.Local.lCol,v.Local.iCnt,"locked",true)
'			GUI.FrmMaster.[V.Args.GRID].GetColumnIndexByName(V.Args.GRIDVIEW,"COST",v.Local.lCol)
'			GUI.FrmMaster.[V.Args.GRID].setcellproperty(V.Args.GRIDVIEW,v.Local.lCol,v.Local.iCnt,"locked",true)
'		f.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.Next(V.Local.iCnt)
	


	
	'Part Document Control
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","HeaderFontBold",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Icon","DCS-OFF")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","AllowEdit",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Caption","Part Doc")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","MinWidth","25")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Width","25")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.gridview,"PrtDocCntrl","Visible",True)
	F.Data.DataTable.Select("dtAll2","PrtDocCntrl = 'DCS-ON'",V.Local.sSelect)
'	F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
'		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
'		F.Intrinsic.Control.For(V.Local.iCnt2,0,V.Local.sSelect.UBound,1)
'			gui.frmMaster.[V.ARGS.Grid].GetColumnIndexByName(v.args.gridview,"PrtDocCntrl",v.Local.lret)
'			gui.frmMaster.[V.ARGS.Grid].SetCellAppearance(v.args.gridview,v.Local.lret,V.Local.sSelect(V.Local.iCnt2),"Icon","DCS-ON")
'		F.Intrinsic.Control.Next(V.Local.iCnt2)
'	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)

f.Intrinsic.Control.EndTry
Program.Sub.SetColumnPropertiesAllMO.End

Program.Sub.SetColumnPropertiesMatl.Start
f.Intrinsic.Control.Try
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionBehaviorEditable",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowSort",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowFilter",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionsViewShowGroupPanel",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowColumnMoving",False)

	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART","Caption","Part ")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DESCR","Caption","Description")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDOR","Caption","Vendor ")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","Caption","PO")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE","Caption","PO Line")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","Caption","Due Date")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","Caption","Unit Cost")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSTOPROD","Caption","Qty. Req'd")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSCOMPL","Caption","Qty. Issued")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSREMAIN","Caption","Qty. Rem.")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONHAND","Caption","On Hand")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONORDER_PO","Caption","On Order PO")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONORDER_WO","Caption","On Order WO")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_REQUIRED","Caption","Total Req'd")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ1","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART","MinWidth","150")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION1","MinWidth","25")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DESCR","MinWidth","200")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDOR","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE","MinWidth","35")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","MinWidth","100")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSTOPROD","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSCOMPL","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSREMAIN","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONHAND","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONORDER_PO","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONORDER_WO","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_REQUIRED","MinWidth","75")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ1","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION1","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDOR","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","HeaderHAlignment","Center")
	gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSTOPROD","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSCOMPL","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSREMAIN","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONHAND","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONORDER_PO","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONORDER_WO","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_REQUIRED","HeaderHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ1","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION1","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"VENDOR","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSTOPROD","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSCOMPL","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCSREMAIN","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONHAND","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONORDER_PO","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_ONORDER_WO","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"QTY_REQUIRED","CellHAlignment","Center")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ1","Fixed","Left")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION1","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","CellFontUnderline",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART","CellForeColor","Blue")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION1","CellForeColor","Blue")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER","CellForeColor","Blue")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"AMT_COST","DisplayCustomNumeric","$#,###,###,##0.0000")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DATE_DUE_LINE","DisplayCustomDatetime","d")	
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JS","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JBSF","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JSS","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JOB1","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SFX1","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PART1","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DISPLAY_PART1","Visible",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ1","Caption","Seq")
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LOCATION1","Caption","Loc")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)

f.Intrinsic.Control.EndTry
Program.Sub.SetColumnPropertiesMatl.End

Program.Sub.SetColumnPropertiesLabr.Start
f.Intrinsic.Control.Try
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionBehaviorEditable",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowSort",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowFilter",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionsViewShowGroupPanel",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowColumnMoving",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JS","Visible",False)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JBSF","Visible",False)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JSS","Visible",False)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JOB","Visible",False)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SUFFIX","Visible",False)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"OVERLAP","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"NOMACH","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"FLOAT","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"TotHrsRem","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"ORDER_QTY","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPL_QTY","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCS_REM","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"TotHrsRem","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","Caption","Seq")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQRES","Caption","WC")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DESCR","Caption","Description")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"STARTDATE","Caption","Start Date")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DUEDATE","Caption","Due Date")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPLDATE","Caption","Compl. Date")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODE_SORT_OPER","Caption","Sort Code")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"OVERLAP","Caption","Overlap")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"NOMACH","Caption","WC Factor")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"FLOAT","Caption","Float")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"EST_HRS","Caption","Est. Hrs.")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"ACT_HRS","Caption","Act. Hrs.")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"REM_HRS","Caption","Rem. Hrs.")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"TotHrsRem","Caption","Tot Hrs. Rem.")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"ORDER_QTY","Caption","Order Qty.")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPL_QTY","Caption","Comp. Qty.")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCS_REM","Caption","Rem. Qty.")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQRES","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DESCR","MinWidth","200")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"STARTDATE","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DUEDATE","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPLDATE","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"CODE_SORT_OPER","MinWidth","100")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"OVERLAP","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"NOMACH","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"FLOAT","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"EST_HRS","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"ACT_HRS","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"REM_HRS","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"TotHrsRem","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"ORDER_QTY","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPL_QTY","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCS_REM","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"STARTDATE","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DUEDATE","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPLDATE","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"OVERLAP","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"NOMACH","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"FLOAT","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"EST_HRS","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"ACT_HRS","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"REM_HRS","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"TotHrsRem","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"ORDER_QTY","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPL_QTY","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCS_REM","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"STARTDATE","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DUEDATE","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPLDATE","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"OVERLAP","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"NOMACH","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"FLOAT","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"EST_HRS","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"ACT_HRS","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"REM_HRS","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"TotHrsRem","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"ORDER_QTY","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPL_QTY","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PCS_REM","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","Fixed","Left")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQRES","CellTrimming","Character")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"STARTDATE","DisplayCustomDatetime","d")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DUEDATE","DisplayCustomDatetime","d")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPLDATE","DisplayCustomDatetime","d")
	
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"TotHrsRem","SUM_TotHrsRem","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"ACT_HRS","SUM_ActHrs","Sum","","","n")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"EST_HRS","SUM_EstHrs","Sum","","","n")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.SetColumnPropertiesLabr.End

Program.Sub.SetColumnPropertiesOuts.Start
f.Intrinsic.Control.Try
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"MultiSelect",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionBehaviorEditable",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionBehaviorEditable",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"ReadOnly",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowSort",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowFilter",True)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"OptionsViewShowGroupPanel",False)
	Gui.FrmMaster.[V.ARGS.Grid].SetGridViewProperty(v.args.GridView,"AllowColumnMoving",False)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JBSF","Visible",False)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JSS","Visible",False)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"JOB","Visible",False)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SUFFIX","Visible",False)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","Caption","Seq")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"NAME_VENDOR","Caption","Vend. Name")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"HoursOrig","Caption","Lead Time (Hours)")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DESCR","Caption","Description")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"STARTDATE","Caption","Start Date")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DUEDATE","Caption","Due Date")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPLDATE","Caption","Comp. Date")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER2","Caption","PO")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE2","Caption","PO Line")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","MinWidth","75")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"NAME_VENDOR","MinWidth","175")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DESCR","MinWidth","200")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"STARTDATE","MinWidth","100")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DUEDATE","MinWidth","100")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPLDATE","MinWidth","100")	
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER2","MinWidth","100")	
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE2","MinWidth","100")	
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"STARTDATE","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"HoursOrig","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DUEDATE","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPLDATE","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER2","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE2","HeaderHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"STARTDATE","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DUEDATE","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPLDATE","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER2","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"LINE2","CellHAlignment","Center")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER2","CellFontUnderline",True)
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"PURCHASE_ORDER2","CellForeColor","Blue")
	'Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"SEQ","Fixed","Left")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"STARTDATE","DisplayCustomDatetime","d")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"DUEDATE","DisplayCustomDatetime","d")
	Gui.frmMaster.[V.ARGS.Grid].SetColumnProperty(v.args.GridView,"COMPLDATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.[V.ARGS.Grid].AddSummaryItem(v.args.gridview,"HoursOrig","SUM_HoursOrig","Sum","","","n")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.SetColumnPropertiesOuts.End

Program.Sub.LoadGVAll.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	v.Local.lCol.Declare
	v.Local.lret.Declare
	V.Local.sGabFile.Declare
	v.Local.sRet.Declare
	v.Local.sSelect.Declare
	v.Local.iCnt2.Declare

	Gui.FrmMaster.GsGCAll.SuspendLayout()
	gui.FrmMaster.gsgcOper.SuspendLayout()
	
	
	'Do the databinding
	gui.FrmMaster.GsGCAll.DataSource("dtall2")
	Gui.FrmMaster.GsGCAll.AddGridViewFromDataTable("gvall","dtAll2")
	f.Intrinsic.Control.If(v.Caller.GSSVersion,>=,"2020.1")
		gui.FrmMaster.GsGCAll.Setgridviewproperty("gvall","multiselect",true)
		gui.FrmMaster.GsGCAll.Setgridviewproperty("gvall","multiselectmode",2)
		gui.FrmMaster.GsGCAll.Setgridviewproperty("gvall","CheckBoxSelectorField","SelectWO")
	f.Intrinsic.Control.EndIf
	gui.FrmMaster.GsGCAll.SetColumnProperty("gvall","SelectWO","Visible",False)

	gui.FrmMaster.gsgcOper.DataSource("dtOper","dvOper")
	gui.FrmMaster.gsgcOper.AddGridviewFromDataview("gvOper","dtOper","dvOper")
	f.Intrinsic.Control.If(v.Caller.GSSVersion,>=,"2020.1")
		gui.FrmMaster.gsgcOper.Setgridviewproperty("gvOper","multiselect",true)
		gui.FrmMaster.gsgcOper.Setgridviewproperty("gvOper","multiselectmode",2)
		gui.FrmMaster.gsgcOper.Setgridviewproperty("gvOper","CheckBoxSelectorField","SelectWO")
	f.Intrinsic.Control.EndIf
	gui.FrmMaster.gsgcOper.SetColumnProperty("gvOper","SelectWO","Visible",False)
	
	gui.FrmMaster.gsgcAllM.DataSource("dtAllM","dvAllM")
	gui.FrmMaster.gsgcAllM.AddGridviewFromDataview("gvAllM","dtAllM","dvAllM")
	f.Intrinsic.Control.If(v.Caller.GSSVersion,>=,"2020.1")
		gui.FrmMaster.gsgcAllM.Setgridviewproperty("gvAllM","multiselect",true)
		gui.FrmMaster.gsgcAllM.Setgridviewproperty("gvAllM","multiselectmode",2)
		gui.FrmMaster.gsgcAllM.Setgridviewproperty("gvAllM","CheckBoxSelectorField","SelectWO")
	f.Intrinsic.Control.EndIf
	gui.FrmMaster.gsgcAllM.SetColumnProperty("gvAllM","SelectWO","Visible",False)
	
	gui.FrmMaster.gsgcAllO.DataSource("dtAllO","dvAllO")
	gui.FrmMaster.gsgcAllO.AddGridviewFromDataview("gvAllO","dtAllO","dvAllO")
	f.Intrinsic.Control.If(v.Caller.GSSVersion,>=,"2020.1")
		gui.FrmMaster.gsgcAllO.Setgridviewproperty("gvAllO","multiselect",true)
		gui.FrmMaster.gsgcAllO.Setgridviewproperty("gvAllO","multiselectmode",2)
		gui.FrmMaster.gsgcAllO.Setgridviewproperty("gvAllO","CheckBoxSelectorField","SelectWO")
	f.Intrinsic.Control.EndIf
	gui.FrmMaster.gsgcAllO.SetColumnProperty("gvAllO","SelectWO","Visible",False)
	
	'If custom multi part track program
	f.Intrinsic.Control.If(v.Global.bCustomMultiPartTrack)
		gui.FrmMaster.GsGCAll.AddGridviewFromDataview("gvMulti","dtAll2","dvMulti")
		
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","Part","Width","75")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","Description","Width","120")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","JobSteps","Width","200")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","Part","MinWidth","75")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","Description","MinWidth","120")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","JobSteps","MinWidth","200")
		
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","JobSteps","Caption","Job Steps")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","Part","Caption","Part #")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","Description","Caption","Description")
		
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_1","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_2","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_3","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_4","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_5","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_6","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_7","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_8","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_9","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_10","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_11","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_12","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_13","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_14","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_15","Visible","False")
		
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_1_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_2_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_3_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_4_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_5_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_6_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_7_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_8_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_9_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_10_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_11_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_12_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_13_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_14_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","LABOUR_15_WC","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","ID","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","Job","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","Suffix","Visible","False")
		gui.FrmMaster.GsGCAll.SetColumnProperty("gvMulti","js","Visible","False")
	f.Intrinsic.Control.EndIf

	'''''''''''''
	'MASTER DATA
	'''''''''''''
	'Add Gridview
	gui.FrmMaster.gsgcOper.setgridviewproperty("gvOper","showdetailtabs",true)
	
	gui.FrmMaster.prgBar.Value(37)
	gui.FrmMaster.lblDateUpdated.Caption("Setting Column Properties for All Work Orders")
	f.Intrinsic.Control.CallSub(SetColumnProperties,"Grid","GsGCAll","GridView","gvAll")
	f.Intrinsic.Control.CallSub(SetColumnProperties,"Grid","gsgcOper","GridView","gvOper")
	f.Intrinsic.Control.CallSub(SetColumnPropertiesOper,"Grid","gsgcOper","GridView","gvOper")


	'''''''''''''
	'ALL MATERIAL
	'''''''''''''
	'Master
	gui.FrmMaster.prgBar.Value(38)
	gui.FrmMaster.lblDateUpdated.Caption("Setting Column Properties for All Materials")
	f.Intrinsic.Control.CallSub(SetColumnPropertiesAllMO,"Grid","GsGcAllM","GridView","gvAllM","dt","dtAllM","dv","dvAllM")
	
	f.Intrinsic.Control.CallSub(SetColumnPropertiesAllMO,"Grid","GsGcAllO","GridView","gvAllO","dt","dtAllO","dv","dvAllO")
	GuI.FrmMaster.GsGCAll.AddGridViewFromDataView("gvMatl","dtAll2","dvMatl")
	f.Intrinsic.Control.CallSub(SetColumnPropertiesMatl,"Grid","GsGCAll","GridView","gvMatl")
	

	'''''''''''''
	'ALL LABOUR
	'''''''''''''
	gui.FrmMaster.prgBar.Value(39)
	gui.FrmMaster.lblDateUpdated.Caption("Setting Column Properties for Workcentres")
	'Master
	f.Intrinsic.Control.Try
		GuI.FrmMaster.GsGCAll.AddGridViewFromDataView("gvLabr","dtAll2","dvLabr")
	f.Intrinsic.Control.Catch
	f.Intrinsic.Control.EndTry
	f.Intrinsic.Control.CallSub(SetColumnPropertiesLabr,"Grid","GsGCAll","GridView","gvLabr")
	'Operations
	GuI.FrmMaster.gsgcOper.AddGridViewFromDataView("gvLabr","dtAll2","dvLabr")
	f.Intrinsic.Control.CallSub(SetColumnPropertiesLabr,"Grid","gsgcOper","GridView","gvLabr")


	''''''''''''
	'ALL OUTSIDE
	''''''''''''
	gui.FrmMaster.prgBar.Value(40)
	gui.FrmMaster.lblDateUpdated.Caption("Setting Column Properties for Outside")
	'Master
	f.Intrinsic.Control.Try
		GuI.FrmMaster.GsGCAll.AddGridViewFromDataView("gvOut","dtAll2","dvOuts")
		f.Intrinsic.Control.CallSub(SetColumnPropertiesOuts,"Grid","GsGCAll","GridView","gvOut")
	f.Intrinsic.Control.Catch
	f.Intrinsic.Control.EndTry
	
	
	Gui.FrmMaster.gsgcOper.ResumeLayout()
	Gui.FrmMaster.GsGCAll.ResumeLayout()
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGVAll.End

Program.Sub.gsgcAllO_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.sret.Declare
	V.Local.sSQL.Declare
	v.Local.sJob.Declare
	v.Local.sSuf.Declare
	v.Local.sWOLabel.Declare
	v.Local.sParams.Declare
	V.Local.sLinkID.Declare
	V.Local.sPart.Declare
	v.local.sPO.Declare
	v.Local.sLoc.Declare
	v.Local.iRet.Declare
	v.Local.iDayTrf.Declare
	v.Local.iMonthTrf.Declare
	v.Local.iYearTrf.Declare
	V.Local.iRefID.Declare
	V.Local.iLinkID.Declare
	V.Local.iPID.Declare
	F.Intrinsic.Control.SelectCase(v.Args.Column)
		F.Intrinsic.Control.CaseAny("VendorSearch","VENDORSEARCH")
			V.Local.sCol.Declare(String)
			V.Local.sColW.Declare(String)
			Gui.FrmMaster.gsgcAllO.GetCellValueByColumnName("gvAllO","PURCHASE_ORDER",V.Args.RowIndex,V.Local.sPO)
			f.Intrinsic.Control.If(v.Local.sPO.Trim,=,"")
				v.Global.iVendRow.Set(v.Args.RowIndex)
				gui.FrmMaster.lookupVendorOut.Show
			f.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("PURCHASE_ORDER","Purchase_Order")
			F.Intrinsic.Control.If(V.Args.CellValue.Trim,<>,"")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				f.Intrinsic.Control.AndIf(v.Global.bEditWO)
					F.Intrinsic.String.Concat("O!*!",v.Args.cellvalue,"!*!",V.Local.sParams)
					F.Global.General.CallWrapperASync(175200,V.Local.sParams)
				f.Intrinsic.Control.Else
					F.Intrinsic.String.Concat("V!*!",v.Args.cellvalue,"!*!",V.Local.sParams)
					F.Global.General.CallWrapperASync(175200,V.Local.sParams)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.caseany("PrtDocCntrl")
			Gui.FrmMaster.gsgcAllO.GetCellValueByColumnName("gvAllO","PART",V.Args.RowIndex,V.Local.sPart)
			f.Global.DocumentControl.GetLinkID(v.Local.sPart.Trim,30,v.Local.iRefID)
			f.Intrinsic.Control.If(v.Local.irefid,=,-1)
				F.ODBC.Connection!con.ExecuteAndReturn("SELECT MAX(LINK_ID) AS 'LinkID' FROM LINK_DATA",v.Local.sLinkID)
				f.Intrinsic.Math.ConvertToLong(v.Local.sLinkID,v.Local.iLinkID)
				f.Intrinsic.Math.Add(v.Local.iLinkID,1,v.Local.iLinkID)
				f.Intrinsic.string.LPad(v.Local.iLinkID,"0",9,v.Local.sLinkID)
				V.Local.iRefID.Set(v.Local.iLinkID)
				F.Global.DocumentControl.CreateReference(V.Local.sPart,"00030",V.Local.iRefID)
			f.Intrinsic.Control.EndIf
			F.Global.DocumentControl.Invoke(V.Local.sPart,30,"(Inventory Master)",V.Local.iPID)
		
		F.Intrinsic.Control.CaseAny("DISPLAY_MAT","DISPLAY_MAT")
			Gui.FrmMaster.gsgcAllO.GetCellValueByColumnName("gvAllO","MATPART",V.Args.RowIndex,V.Local.sPart)
			V.Local.sLoc.Set("")
			F.Intrinsic.Control.If(V.Local.sPart,<>,"MULTI-PART")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
					f.Intrinsic.Control.If(v.Global.bViewPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.Else
					f.Intrinsic.Control.If(v.Global.bEditPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.Elseif(v.Global.bViewPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				'Load Multi-Part screen
				f.Intrinsic.Control.If(v.Global.bViewPart)
					Gui.FrmMaster.gsgcAllO.GetCellValueByColumnName("gvAllO","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.gsgcAllO.GetCellValueByColumnName("gvAllO","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					Gui.FrmMaster..Enabled(False)
					f.Intrinsic.Control.CallSub(LoadMultiPart,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("WOLabel","WOLABEL")
			Gui.FrmMaster.gsgcAllO.GetCellValueByColumnName("gvAllO","WOLabel",V.Args.RowIndex,V.Local.sWOLabel)
			f.Intrinsic.String.Split(v.Local.sWOLabel,"-",v.Local.sWOLabel)
			v.Local.sJob.Set(v.Local.sWOLabel(0))
			v.Local.sSuf.Set(v.Local.sWOLabel(1))
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				F.Intrinsic.Control.If(v.Global.bEditWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sJob,V.Local.sSuf,V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(2009,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.Elseif(v.Global.bViewWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sJob,"!*!",V.Local.sSuf,"!*!","A",V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(450000,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sJob,V.Local.sSuf,V.Local.sParams)
				Gui.FrmMaster..Enabled(False)
				F.Global.General.CallWrapperSync(450150,V.Local.sParams)
				F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
					F.Intrinsic.Control.Case(1)
						F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.Case(2)
						'Do Not Print
					F.Intrinsic.Control.Case(3)
						F.Intrinsic.UI.Msgbox("Print Audit Trail?","Print",4,V.Local.iRet)
						F.Intrinsic.Control.If(V.Local.iRet,=,6)
							F.Global.General.CallWrapperSync(50,"JB0057")
						F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndSelect
				gui.FrmMaster..SetFocus
				Gui.FrmMaster..Enabled(True)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sJob,V.Local.sSuf,V.Local.sParams)
				Gui.FrmMaster..Enabled(False)
				F.Global.General.CallWrapperSync(2003,V.Local.sParams)
				F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
					F.Intrinsic.Control.Case(1)
						F.Global.General.CallWrapperSync(50,"JB0057/C")
					F.Intrinsic.Control.Case(2)
						'Do Not Print
					F.Intrinsic.Control.Case(3)
						F.Global.General.CallWrapperSync(50,"JB0057/C")
				F.Intrinsic.Control.EndSelect
				gui.FrmMaster..SetFocus
				Gui.FrmMaster..Enabled(True)
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sJob,"!*!",V.Local.sSuf,"!*!","A",V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(450000,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf
			
	f.Intrinsic.Control.EndSelect

f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcAllO_RowCellClick.End

Program.Sub.gsgcAllO_CellValueChanged.Start
f.Intrinsic.Control.Try
	V.Local.sWO.Declare
	V.Local.sSuf.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextLbl.Declare
	v.Local.sTextTbl.Declare
	v.Local.sTextTbl.Redim(0,1)
	v.Local.sName.Declare
	V.Local.sHold.Declare
	V.Local.iHold.Declare
	v.Local.sret.Declare
	v.Local.sCust.Declare
	v.Local.lSize.Declare
	V.Local.sSONum.Declare
	v.local.sCustPO.Declare
	v.Local.sSP.Declare
	v.Local.sProj.Declare
	v.Local.sVendor.Declare
	v.Local.sVendorName.Declare
	v.Local.sMyVal.Declare
	v.Local.sPO.Declare
	v.Local.sPOLine.Declare

	Gui.FrmMaster.gsgcAllO.GetCellValueByColumnName("gvAllO","JOB",V.Args.RowIndex,V.Local.sWO)
	Gui.FrmMaster.gsgcAllO.GetCellValueByColumnName("gvAllO","SUFFIX",V.Args.RowIndex,V.Local.sSuf) 
	Gui.FrmMaster.gsgcAllO.GetCellValueByColumnName("gvAllO","PURCHASE_ORDER",V.Args.RowIndex,V.Local.sPO)
	Gui.FrmMaster.gsgcAllO.GetCellValueByColumnName("gvAllO","LINE",V.Args.RowIndex,V.Local.sPOLine) 

	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.CaseAny("VENDOR","vendor")
			f.Intrinsic.String.Build("SELECT NAME_VENDOR FROM V_VENDOR_MASTER WHERE VENDOR='{0}'",v.Args.Value.Trim,v.Local.ssql)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sVendorName)
			f.Intrinsic.String.LTrim(v.Args.Value,v.Local.sMyVal)
			f.Intrinsic.String.RTrim(v.Local.sMyVal,v.Local.sMyVal)
			f.Data.DataTable.SetValue("dtAllO",v.Args.rowindex,"VENDORNAME",v.Local.sVendorName.Trim)
			f.Data.DataTable.SetValue("dtAllO",v.Args.rowindex,"SelectWO",true)
			f.Data.DataTable.SetValue("dtAllO",v.Args.rowindex,"Vendor",v.Local.sMyVal)
			
		F.Intrinsic.Control.CaseAny("TEXT","text")
			F.Intrinsic.Control.If(v.Local.sPO.Trim,=,"")
				'f.Intrinsic.UI.Msgbox("Purchase Order not found.")
				F.Intrinsic.UI.SleepMS(1)
			f.Intrinsic.Control.Else
				f.Intrinsic.String.Build("SELECT * FROM PO_LN_TEXT WHERE PO_NUM='{0}' AND LINE='{1}0'",v.LOCAL.sPO,v.Local.sPOLine,v.Local.ssql)
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sret)
				f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
					F.Intrinsic.String.Build("UPDATE PO_LN_TEXT SET TEXT='{0}' WHERE PO_NUM='{1}' AND LINE='{2}0'",v.Args.value.PSQLFriendly,v.Local.sPO,v.Local.sPOLine,v.Local.sSQL)
					f.ODBC.Connection!con.Execute(v.Local.sSQL)
					f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sPO,"SUFFIX",v.Local.sPOLine,"Field","PONotes","Notes",v.Args.value.PSQLFriendly)
				f.Intrinsic.Control.Else
					F.Intrinsic.String.Build("INSERT INTO PO_LN_TEXT (PO_NUM,LINE,TEXT) VALUES('{0}','{1}0','{2}')",v.Local.sPO,v.Local.sPOLine,v.Args.value.PSQLFriendly,v.Local.sSQL)
					f.ODBC.Connection!con.Execute(v.Local.sSQL)
					f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sPO,"SUFFIX",v.Local.sPOLine,"Field","PONotes","Notes",v.Args.value.PSQLFriendly)
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

	
		F.Intrinsic.Control.CaseAny("SALES_ORDER","sales_order")
			'Set Row Change and SO Number
			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"RowChange","X")
			V.Local.sSONum.Set(V.Args.VALUE)
			f.Intrinsic.String.LPad(v.Local.sSONum,"0",7,v.Local.sSONum)
			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"SALES_ORDER",v.Local.sSONum)
			
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET SALES_ORDER='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sSONum,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Sales Order","Notes",v.Local.sSONum)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Run the query to grab the pertinent fields
			F.Intrinsic.String.Build("select CUSTOMER, CUSTOMER_PO, SALESPERSON, PROJECT from V_ORDER_HEADER where ORDER_NO='{0}'",v.Local.sSONum,v.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sret)
			f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
			v.Local.sCust.Set(v.Local.sret(0))
			v.Local.sCustPO.Set(v.Local.sret(1))
			v.Local.sSP.Set(v.Local.sret(2))
			v.Local.sProj.Set(v.Local.sret(3))
			
			'Do Project
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET PROJECT='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sProj.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Project","Notes",v.Local.sProj)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Do Sales Person
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET SALESPERSON='{0}', SALESPERSON_OLD='{1}' WHERE JOB='{2}' AND SUFFIX='{3}'",v.Local.sSP.Trim,v.Local.sSP.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Salesperson","Notes",v.Local.sSP)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Do Customer PO
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET CUSTOMER_PO='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sCustPO.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Cust PO","Notes",v.Local.sCustPO)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Do Name of Customer
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET CUSTOMER='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sCust.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Customer","Notes",v.Local.sCust)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
	F.Intrinsic.Control.EndSelect
	
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcAllO_CellValueChanged.End

Program.Sub.gsgcAllM_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.sret.Declare
	V.Local.sSQL.Declare
	v.Local.sJob.Declare
	v.Local.sSuf.Declare
	v.Local.sWOLabel.Declare
	v.Local.sParams.Declare
	V.Local.sLinkID.Declare
	V.Local.sPart.Declare
	v.local.sPO.Declare
	v.Local.sLoc.Declare
	v.Local.iRet.Declare
	v.Local.iDayTrf.Declare
	v.Local.iMonthTrf.Declare
	v.Local.iYearTrf.Declare
	V.Local.iRefID.Declare
	V.Local.iLinkID.Declare
	V.Local.iPID.Declare
	
	F.Intrinsic.Control.SelectCase(v.Args.Column)
		F.Intrinsic.Control.CaseAny("VendorSearch","VENDORSEARCH")
			V.Local.sCol.Declare(String)
			V.Local.sColW.Declare(String)
			Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","PURCHASE_ORDER",V.Args.RowIndex,V.Local.sPO)
			f.Intrinsic.Control.If(v.Local.sPO.Trim,=,"")
				v.Global.iVendRow.Set(v.Args.RowIndex)
				gui.FrmMaster.lookupVendor.Show
			f.Intrinsic.Control.EndIf
			
	
		F.Intrinsic.Control.Case("PURCHASE_ORDER","Purchase_Order")
			F.Intrinsic.Control.If(V.Args.CellValue.Trim,<>,"")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				f.Intrinsic.Control.AndIf(v.Global.bEditWO)
					F.Intrinsic.String.Concat("O!*!",v.Args.cellvalue,"!*!",V.Local.sParams)
					F.Global.General.CallWrapperASync(175200,V.Local.sParams)
				f.Intrinsic.Control.Else
					F.Intrinsic.String.Concat("V!*!",v.Args.cellvalue,"!*!",V.Local.sParams)
					F.Global.General.CallWrapperASync(175200,V.Local.sParams)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.caseany("PrtDocCntrl")
			Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","PART",V.Args.RowIndex,V.Local.sPart)
			f.Global.DocumentControl.GetLinkID(v.Local.sPart.Trim,30,v.Local.iRefID)
			f.Intrinsic.Control.If(v.Local.irefid,=,-1)
				F.ODBC.Connection!con.ExecuteAndReturn("SELECT MAX(LINK_ID) AS 'LinkID' FROM LINK_DATA",v.Local.sLinkID)
				f.Intrinsic.Math.ConvertToLong(v.Local.sLinkID,v.Local.iLinkID)
				f.Intrinsic.Math.Add(v.Local.iLinkID,1,v.Local.iLinkID)
				f.Intrinsic.string.LPad(v.Local.iLinkID,"0",9,v.Local.sLinkID)
				V.Local.iRefID.Set(v.Local.iLinkID)
				F.Global.DocumentControl.CreateReference(V.Local.sPart,"00030",V.Local.iRefID)
			f.Intrinsic.Control.EndIf
			F.Global.DocumentControl.Invoke(V.Local.sPart,30,"(Inventory Master)",V.Local.iPID)
		
		F.Intrinsic.Control.CaseAny("DISPLAY_MAT","DISPLAY_MAT")
			Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","MATPART",V.Args.RowIndex,V.Local.sPart)
			V.Local.sLoc.Set("")
			F.Intrinsic.Control.If(V.Local.sPart,<>,"MULTI-PART")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
					f.Intrinsic.Control.If(v.Global.bViewPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.Else
					f.Intrinsic.Control.If(v.Global.bEditPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.Elseif(v.Global.bViewPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				'Load Multi-Part screen
				f.Intrinsic.Control.If(v.Global.bViewPart)
					Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					Gui.FrmMaster..Enabled(False)
					f.Intrinsic.Control.CallSub(LoadMultiPart,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.CaseAny("PART","Part","DISPLAY_PART")
			Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","PART",V.Args.RowIndex,V.Local.sPart)
			V.Local.sLoc.Set("")
			F.Intrinsic.Control.If(V.Local.sPart,<>,"MULTI-PART")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
					f.Intrinsic.Control.If(v.Global.bViewPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.Else
					f.Intrinsic.Control.If(v.Global.bEditPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.Elseif(v.Global.bViewPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				'Load Multi-Part screen
				f.Intrinsic.Control.If(v.Global.bViewPart)
					Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					Gui.FrmMaster..Enabled(False)
					f.Intrinsic.Control.CallSub(LoadMultiPart,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("WOLabel","WOLABEL")
			Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","WOLabel",V.Args.RowIndex,V.Local.sWOLabel)
			f.Intrinsic.String.Split(v.Local.sWOLabel,"-",v.Local.sWOLabel)
			v.Local.sJob.Set(v.Local.sWOLabel(0))
			v.Local.sSuf.Set(v.Local.sWOLabel(1))
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				F.Intrinsic.Control.If(v.Global.bEditWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sJob,V.Local.sSuf,V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(2009,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.Elseif(v.Global.bViewWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sJob,"!*!",V.Local.sSuf,"!*!","A",V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(450000,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sJob,V.Local.sSuf,V.Local.sParams)
				Gui.FrmMaster..Enabled(False)
				F.Global.General.CallWrapperSync(450150,V.Local.sParams)
				F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
					F.Intrinsic.Control.Case(1)
						F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.Case(2)
						'Do Not Print
					F.Intrinsic.Control.Case(3)
						F.Intrinsic.UI.Msgbox("Print Audit Trail?","Print",4,V.Local.iRet)
						F.Intrinsic.Control.If(V.Local.iRet,=,6)
							F.Global.General.CallWrapperSync(50,"JB0057")
						F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndSelect
				gui.FrmMaster..SetFocus
				Gui.FrmMaster..Enabled(True)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sJob,V.Local.sSuf,V.Local.sParams)
				Gui.FrmMaster..Enabled(False)
				F.Global.General.CallWrapperSync(2003,V.Local.sParams)
				F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
					F.Intrinsic.Control.Case(1)
						F.Global.General.CallWrapperSync(50,"JB0057/C")
					F.Intrinsic.Control.Case(2)
						'Do Not Print
					F.Intrinsic.Control.Case(3)
						F.Global.General.CallWrapperSync(50,"JB0057/C")
				F.Intrinsic.Control.EndSelect
				gui.FrmMaster..SetFocus
				Gui.FrmMaster..Enabled(True)
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sJob,"!*!",V.Local.sSuf,"!*!","A",V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(450000,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf
			
	f.Intrinsic.Control.EndSelect

f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcAllM_RowCellClick.End

Program.Sub.gsgcAllM_ColumnFilterChanged.Start
f.Intrinsic.Control.Try
	v.Global.sAllMatFilter.Set(v.Args.ActiveFilterExpression)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcAllM_ColumnFilterChanged.End

Program.Sub.gsgcAllO_ColumnFilterChanged.Start
f.Intrinsic.Control.Try
	v.Global.sAllOutFilter.Set(v.Args.ActiveFilterExpression)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcAllO_ColumnFilterChanged.End

Program.Sub.gsgcAll_ColumnFilterChanged.Start
f.Intrinsic.Control.Try
	v.Global.sAllWOFilter.Set(v.Args.ActiveFilterExpression)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcAll_ColumnFilterChanged.End

Program.Sub.gsgcAll_CellValueChanged.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.SelectCase(v.Args.column)
		f.Intrinsic.Control.Case("DATE_DUE")
			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"SelectWO",true)
	f.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcAll_CellValueChanged.End

Program.Sub.gsgcAllM_CellValueChanged.Start
f.Intrinsic.Control.Try
	V.Local.sWO.Declare
	V.Local.sSuf.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextLbl.Declare
	v.Local.sTextTbl.Declare
	v.Local.sTextTbl.Redim(0,1)
	v.Local.sName.Declare
	V.Local.sHold.Declare
	V.Local.iHold.Declare
	v.Local.sret.Declare
	v.Local.sCust.Declare
	v.Local.lSize.Declare
	V.Local.sSONum.Declare
	v.local.sCustPO.Declare
	v.Local.sSP.Declare
	v.Local.sProj.Declare
	v.Local.sVendor.Declare
	v.Local.sVendor2.Declare
	v.Local.sVendorName.Declare
	v.Local.sMyVal.Declare
	v.Local.sPO.Declare
	v.Local.sPOLine.Declare
	v.Local.fCost.Declare
	v.Local.fCost2.Declare

	Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","VENDOR",V.Args.RowIndex,V.Local.sVendor)
	Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","VENDOR2",V.Args.RowIndex,V.Local.sVendor2)
	Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","COST",V.Args.RowIndex,V.Local.fCost)
	Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","COST2",V.Args.RowIndex,V.Local.fCost2)
	Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","JOB",V.Args.RowIndex,V.Local.sWO)
	Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","SUFFIX",V.Args.RowIndex,V.Local.sSuf) 
	Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","PURCHASE_ORDER",V.Args.RowIndex,V.Local.sPO)
	Gui.FrmMaster.gsgcAllM.GetCellValueByColumnName("gvAllM","LINE",V.Args.RowIndex,V.Local.sPOLine) 

	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.CaseAny("COST","Cost")
			F.Intrinsic.Control.If(V.Local.sPO,<>,"")
				F.Data.DataTable.SetValue("dtAllM",v.Args.rowindex,"Cost",v.Local.fCost2)
				f.Intrinsic.UI.Msgbox("Cannot change cost, PO Exists.")
				f.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
		
		F.Intrinsic.Control.CaseAny("VENDOR","vendor")
			F.Intrinsic.Control.If(V.Local.sPO,<>,"")
				F.Data.DataTable.SetValue("dtAllM",v.Args.rowindex,"Vendor",v.Local.sVendor2)
				f.Intrinsic.UI.Msgbox("Cannot change vendor, PO Exists.")
				f.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			'IF (COND)
				'SET VENDOR 2  => VENDOR 1
				'MSG (YOU ARE NOT ALLOWED TO CHANGE...)
				'eXITSUB
			'ENDIF
			f.Intrinsic.String.Build("SELECT NAME_VENDOR FROM V_VENDOR_MASTER WHERE VENDOR='{0}'",v.Args.Value.Trim,v.Local.ssql)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sVendorName)
			f.Intrinsic.String.LTrim(v.Args.Value,v.Local.sMyVal)
			f.Intrinsic.String.RTrim(v.Local.sMyVal,v.Local.sMyVal)
			f.Data.DataTable.SetValue("dtAllM",v.Args.rowindex,"VENDORNAME",v.Local.sVendorName.Trim)
			f.Data.DataTable.SetValue("dtAllM",v.Args.rowindex,"SelectWO",true)
			f.Data.DataTable.SetValue("dtAllM",v.Args.rowindex,"Vendor",v.Local.sMyVal)
			
		F.Intrinsic.Control.CaseAny("TEXT","text")
			F.Intrinsic.Control.If(v.Local.sPO.Trim,=,"")
				'f.Intrinsic.UI.Msgbox("Purchase Order not found.")
				F.Intrinsic.UI.SleepMS(1)
			f.Intrinsic.Control.Else	
				f.Intrinsic.String.Build("SELECT * FROM PO_LN_TEXT WHERE PO_NUM='{0}' AND LINE='{1}0'",v.LOCAL.sPO,v.Local.sPOLine,v.Local.ssql)
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sret)
				f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
					F.Intrinsic.String.Build("UPDATE PO_LN_TEXT SET TEXT='{0}' WHERE PO_NUM='{1}' AND LINE='{2}0'",v.Args.value.PSQLFriendly,v.Local.sPO,v.Local.sPOLine,v.Local.sSQL)
					f.ODBC.Connection!con.Execute(v.Local.sSQL)
					f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sPO,"SUFFIX",v.Local.sPOLine,"Field","PONotes","Notes",v.Args.value.PSQLFriendly)		
				f.Intrinsic.Control.Else
					F.Intrinsic.String.Build("INSERT INTO PO_LN_TEXT (PO_NUM,LINE,TEXT) VALUES('{0}','{1}0','{2}')",v.Local.sPO,v.Local.sPOLine,v.Args.value.PSQLFriendly,v.Local.sSQL)
					f.ODBC.Connection!con.Execute(v.Local.sSQL)
					f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sPO,"SUFFIX",v.Local.sPOLine,"Field","PONotes","Notes",v.Args.value.PSQLFriendly)
					'f.Intrinsic.UI.Msgbox("Purchase Order not found.")
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.CaseAny("SALES_ORDER","sales_order")
			'Set Row Change and SO Number
			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"RowChange","X")
			V.Local.sSONum.Set(V.Args.VALUE)
			f.Intrinsic.String.LPad(v.Local.sSONum,"0",7,v.Local.sSONum)
			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"SALES_ORDER",v.Local.sSONum)
			
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET SALES_ORDER='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sSONum,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Sales Order","Notes",v.Local.sSONum)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Run the query to grab the pertinent fields
			F.Intrinsic.String.Build("select CUSTOMER, CUSTOMER_PO, SALESPERSON, PROJECT from V_ORDER_HEADER where ORDER_NO='{0}'",v.Local.sSONum,v.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sret)
			f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
			v.Local.sCust.Set(v.Local.sret(0))
			v.Local.sCustPO.Set(v.Local.sret(1))
			v.Local.sSP.Set(v.Local.sret(2))
			v.Local.sProj.Set(v.Local.sret(3))
			
			'Do Project
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET PROJECT='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sProj.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Project","Notes",v.Local.sProj)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Do Sales Person
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET SALESPERSON='{0}', SALESPERSON_OLD='{1}' WHERE JOB='{2}' AND SUFFIX='{3}'",v.Local.sSP.Trim,v.Local.sSP.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Salesperson","Notes",v.Local.sSP)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Do Customer PO
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET CUSTOMER_PO='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sCustPO.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Cust PO","Notes",v.Local.sCustPO)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Do Name of Customer
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET CUSTOMER='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sCust.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Customer","Notes",v.Local.sCust)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
	F.Intrinsic.Control.EndSelect
	
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcAllM_CellValueChanged.End

Program.Sub.gsgcOper_RowCellClick.Start
f.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sJob.Declare
	v.Local.sSuf.Declare
	v.Local.sSOH.Declare
	v.Local.sSOL.Declare
	v.Local.sPart.Declare
	v.Local.sLoc.Declare
	V.Local.sParams.Declare
	V.Local.iDayTrf.Declare
	V.Local.iMonthTrf.Declare
	V.Local.iYearTrf.Declare
	V.Local.sSQL.Declare
	V.Local.sWC.Declare
	V.Local.sWG.Declare
	V.Local.iPID.Declare
	V.Local.sGabFile.Declare
	V.Local.sHold.Declare
	v.Local.sWOLabel.Declare
	v.Local.sLinkID.Declare
	v.Local.iLinkID.Declare
	V.Local.iHold.Declare
	V.Local.bHold.Declare
	V.Local.bRel.Declare
	V.Local.iRet.Declare
	v.Local.bEdit.Declare
	v.Local.iRefID.Declare

	'f.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(v.Args.Column)
		F.Intrinsic.Control.CaseAny("Part","PART")
			f.Intrinsic.Control.If(v.Global.bLongPart)
				f.Global.Inventory.GetGSSPart(v.Args.cellvalue,"",v.Local.sPart)
				F.Intrinsic.String.Build("{0}!*!{1}!*!M",v.Local.sPart,"",V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
				gui.FrmMaster..SetFocus
			f.Intrinsic.Control.Else
				v.Local.sPart.Set(v.Args.callvalue)
				F.Intrinsic.String.Build("{0}!*!{1}!*!M",v.Local.sPart,"",V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
				gui.FrmMaster..SetFocus
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.caseany("PrtDocCntrl")
			Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","PART",V.Args.RowIndex,V.Local.sPart)
			f.Global.DocumentControl.GetLinkID(v.Local.sPart.Trim,30,v.Local.iRefID)
			f.Intrinsic.Control.If(v.Local.irefid,=,-1)
				F.ODBC.Connection!con.ExecuteAndReturn("SELECT MAX(LINK_ID) AS 'LinkID' FROM LINK_DATA",v.Local.sLinkID)
				f.Intrinsic.Math.ConvertToLong(v.Local.sLinkID,v.Local.iLinkID)
				f.Intrinsic.Math.Add(v.Local.iLinkID,1,v.Local.iLinkID)
				f.Intrinsic.string.LPad(v.Local.iLinkID,"0",9,v.Local.sLinkID)
				V.Local.iRefID.Set(v.Local.iLinkID)
				F.Global.DocumentControl.CreateReference(V.Local.sPart,"00030",V.Local.iRefID)
			f.Intrinsic.Control.EndIf
			F.Global.DocumentControl.Invoke(V.Local.sPart,30,"(Inventory Master)",V.Local.iPID)
			
		F.Intrinsic.Control.CaseAny("WOLABEL","WOLabel")
			Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","WOLabel",V.Args.RowIndex,V.Local.sWOLabel)
			f.Intrinsic.String.Split(v.Local.sWOLabel,"-",v.Local.sWOLabel)
			v.Local.sJob.Set(v.Local.sWOLabel(0))
			v.Local.sSuf.Set(v.Local.sWOLabel(1))
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				F.Intrinsic.Control.If(v.Global.bEditWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sJob,V.Local.sSuf,V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(2009,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.Elseif(v.Global.bViewWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sJob,"!*!",V.Local.sSuf,"!*!","A",V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(450000,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sJob,V.Local.sSuf,V.Local.sParams)
				Gui.FrmMaster..Enabled(False)
				F.Global.General.CallWrapperSync(450150,V.Local.sParams)
				F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
					F.Intrinsic.Control.Case(1)
						F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.Case(2)
						'Do Not Print
					F.Intrinsic.Control.Case(3)
						F.Intrinsic.UI.Msgbox("Print Audit Trail?","Print",4,V.Local.iRet)
						F.Intrinsic.Control.If(V.Local.iRet,=,6)
							F.Global.General.CallWrapperSync(50,"JB0057")
						F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndSelect
				
				gui.FrmMaster..SetFocus
				Gui.FrmMaster..Enabled(True)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sJob,V.Local.sSuf,V.Local.sParams)
				Gui.FrmMaster..Enabled(False)
				F.Global.General.CallWrapperSync(2003,V.Local.sParams)
				F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
					F.Intrinsic.Control.Case(1)
						F.Global.General.CallWrapperSync(50,"JB0057/C")
					F.Intrinsic.Control.Case(2)
						'Do Not Print
					F.Intrinsic.Control.Case(3)
						F.Global.General.CallWrapperSync(50,"JB0057/C")
				F.Intrinsic.Control.EndSelect
				gui.FrmMaster..SetFocus
				Gui.FrmMaster..Enabled(True)
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sJob,"!*!",V.Local.sSuf,"!*!","A",V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(450000,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("DISPLAY_PART")
			Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","PART",V.Args.RowIndex,V.Local.sPart)
			Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","LOCATION",V.Args.RowIndex,V.Local.sLoc)
			F.Intrinsic.Control.If(V.Local.sPart,<>,"MULTI-PART")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
					f.Intrinsic.Control.If(v.Global.bViewPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.Else
					f.Intrinsic.Control.If(v.Global.bEditPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.Elseif(v.Global.bViewPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				'Load Multi-Part screen
				f.Intrinsic.Control.If(v.Global.bViewPart)
					Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					Gui.FrmMaster..Enabled(False)
					f.Intrinsic.Control.CallSub(LoadMultiPart,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("Printed","PRINTED","Print","PRINT")
			Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","JOB",V.Args.RowIndex,v.Local.sJob)
			Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
			f.Intrinsic.Control.If(v.Local.sJob.Trim,<>,"")
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = 'Y' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sParams)
				F.Global.General.CallWrapperSync(900100,V.Local.sParams)
			f.Intrinsic.Control.Else
				f.Intrinsic.UI.Msgbox("No work order for the selected line")
			f.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
			F.Intrinsic.Control.If(V.Global.bExists)
			f.Intrinsic.Control.AndIf(v.Global.bReplUpdReschedUtility,=,True)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)				
					F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
					F.Intrinsic.Control.If(V.Local.sWC,<>,"")
						F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
						F.Intrinsic.String.Build("{0}\GAB_5556_Repl_Upd_Resched_Utility_WC_WG.g2u",V.Caller.GasDir,V.Local.sGabFile)
						F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
						F.Global.General.ResetPassedDataElements
						gui.FrmMaster.cmdAllData.BackColor(255)
						'Gui.FrmMaster.lblStatus.ForeColor(255)
						'Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Open Work Orders to pickup changes from WC Dashboard")
						'Gui.FrmMaster.lblStatus.Visible(True)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
						F.Intrinsic.Control.If(V.Local.sWG,<>,"")
							F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
							F.Intrinsic.String.Build("{0}\GAB_5556_Repl_Upd_Resched_Utility_WC_WG.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
							gui.FrmMaster.cmdAllData.BackColor(255)
							'Gui.FrmMaster.lblStatus.ForeColor(255)
							'Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Open Work Orders to pickup changes from WC Dashboard")
							'Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("FLAG_HOLD")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
			f.Intrinsic.Control.AndIf(v.Global.bEditWO)
				Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue)
					V.Local.sHold.Set("N")
					V.Local.iHold.Set(0)
					V.Local.bHold.Set(False)
					Gui.FrmMaster.gsgcOper.SetCellValueByColumnName("gvOper","FLAG_HOLD",V.Args.RowIndex,False)
				F.Intrinsic.Control.Else
					V.Local.sHold.Set("Y")
					V.Local.iHold.Set(1)
					V.Local.bHold.Set(True)
					Gui.FrmMaster.gsgcOper.SetCellValueByColumnName("gvOper","FLAG_HOLD",V.Args.RowIndex,True)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bHold,"GV","gvOper","Flag","FLAG_HOLD")
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("RELEASED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
			f.Intrinsic.Control.AndIf(v.Global.bEditWO)
				Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.gsgcOper.GetCellValueByColumnName("gvOper","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue,=,False)
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = 'Y', DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Ambient.Date.FormatMMDDYY,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(True)
					Gui.FrmMaster.gsgcOper.SetCellValueByColumnName("gvOper","RELEASED",V.Args.RowIndex,True)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = '', DATE_RELEASED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(False)
					Gui.FrmMaster.gsgcOper.SetCellValueByColumnName("gvOper","RELEASED",V.Args.RowIndex,False)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bRel,"GV","gvOper","Flag","FLAG_REL")
			F.Intrinsic.Control.EndIf
			
	f.Intrinsic.Control.EndSelect
			
f.Intrinsic.Control.Catch

	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(FrmMaster_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcOper_RowCellClick.End

Program.Sub.GsGCAll_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sJob.Declare
	v.Local.sSuf.Declare
	v.Local.sSOH.Declare
	v.Local.sSOL.Declare
	v.Local.sPart.Declare
	v.Local.sLoc.Declare
	V.Local.sParams.Declare
	V.Local.iDayTrf.Declare
	V.Local.iMonthTrf.Declare
	V.Local.iYearTrf.Declare
	V.Local.sSQL.Declare
	V.Local.sWC.Declare
	V.Local.sWG.Declare
	V.Local.iPID.Declare
	V.Local.sGabFile.Declare
	V.Local.sHold.Declare
	v.Local.sWOLabel.Declare
	v.Local.sLinkID.Declare
	v.Local.iLinkID.Declare
	V.Local.iHold.Declare
	V.Local.bHold.Declare
	V.Local.bRel.Declare
	V.Local.iRet.Declare
	v.Local.bEdit.Declare
	v.Local.iRefID.Declare

	'f.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(v.Args.Column)
		F.Intrinsic.Control.CaseAny("Part","PART")
			f.Intrinsic.Control.If(v.Global.bLongPart)
				f.Global.Inventory.GetGSSPart(v.Args.cellvalue,"",v.Local.sPart)
				F.Intrinsic.String.Build("{0}!*!{1}!*!M",v.Local.sPart,"",V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
				gui.FrmMaster..SetFocus
			f.Intrinsic.Control.Else
				v.Local.sPart.Set(v.Args.CELLVALUE)
				F.Intrinsic.String.Build("{0}!*!{1}!*!M",v.Local.sPart,"",V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
				gui.FrmMaster..SetFocus
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.caseany("SALES_ORDER","SALES_ORDER_LINE")
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER",V.Args.RowIndex,V.Local.sSOH)
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER_LINE",V.Args.RowIndex,V.Local.sSOL)
			f.Intrinsic.Control.If(v.Local.sSOH.Trim,<>,"")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				 	F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sSOH,"O","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperAsync(200000,V.Local.sParams)
				f.Intrinsic.Control.Else
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sSOH,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperAsync(200000,V.Local.sParams)
				F.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.caseany("PrtDocCntrl")
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
			f.Global.DocumentControl.GetLinkID(v.Local.sPart.Trim,30,v.Local.iRefID)
			f.Intrinsic.Control.If(v.Local.irefid,=,-1)
				F.ODBC.Connection!con.ExecuteAndReturn("SELECT MAX(LINK_ID) AS 'LinkID' FROM LINK_DATA",v.Local.sLinkID)
				f.Intrinsic.Math.ConvertToLong(v.Local.sLinkID,v.Local.iLinkID)
				f.Intrinsic.Math.Add(v.Local.iLinkID,1,v.Local.iLinkID)
				f.Intrinsic.string.LPad(v.Local.iLinkID,"0",9,v.Local.sLinkID)
				V.Local.iRefID.Set(v.Local.iLinkID)
				F.Global.DocumentControl.CreateReference(V.Local.sPart,"00030",V.Local.iRefID)
			f.Intrinsic.Control.EndIf
			F.Global.DocumentControl.Invoke(V.Local.sPart,30,"Inventory Master",V.Local.iPID)
			
			
		F.Intrinsic.Control.CaseAny("WOLABEL","WOLabel")
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","WOLabel",V.Args.RowIndex,V.Local.sWOLabel)
			f.Intrinsic.String.Split(v.Local.sWOLabel,"-",v.Local.sWOLabel)
			v.Local.sJob.Set(v.Local.sWOLabel(0))
			v.Local.sSuf.Set(v.Local.sWOLabel(1))
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				F.Intrinsic.Control.If(v.Global.bEditWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sJob,V.Local.sSuf,V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(2009,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.Elseif(v.Global.bViewWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sJob,"!*!",V.Local.sSuf,"!*!","A",V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(450000,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sJob,V.Local.sSuf,V.Local.sParams)
				Gui.FrmMaster..Enabled(False)
				F.Global.General.CallWrapperSync(450150,V.Local.sParams)
				F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
					F.Intrinsic.Control.Case(1)
						F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.Case(2)
						'Do Not Print
					F.Intrinsic.Control.Case(3)
						F.Intrinsic.UI.Msgbox("Print Audit Trail?","Print",4,V.Local.iRet)
						F.Intrinsic.Control.If(V.Local.iRet,=,6)
							F.Global.General.CallWrapperSync(50,"JB0057")
						F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndSelect
				
				gui.FrmMaster..SetFocus
				Gui.FrmMaster..Enabled(True)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sJob,V.Local.sSuf,V.Local.sParams)
				Gui.FrmMaster..Enabled(False)
				F.Global.General.CallWrapperSync(2003,V.Local.sParams)
				F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
					F.Intrinsic.Control.Case(1)
						F.Global.General.CallWrapperSync(50,"JB0057/C")
					F.Intrinsic.Control.Case(2)
						'Do Not Print
					F.Intrinsic.Control.Case(3)
						F.Global.General.CallWrapperSync(50,"JB0057/C")
				F.Intrinsic.Control.EndSelect
				gui.FrmMaster..SetFocus
				Gui.FrmMaster..Enabled(True)
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewWO)
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sJob,"!*!",V.Local.sSuf,"!*!","A",V.Local.sParams)
					Gui.FrmMaster..Enabled(False)
					F.Global.General.CallWrapperSync(450000,V.Local.sParams)
					gui.FrmMaster..SetFocus
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("DISPLAY_PART")
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
			F.Intrinsic.Control.If(V.Local.sPart,<>,"MULTI-PART")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
					f.Intrinsic.Control.If(v.Global.bViewPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.Else
					f.Intrinsic.Control.If(v.Global.bEditPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.Elseif(v.Global.bViewPart)
						F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
						Gui.FrmMaster..Enabled(False)
						F.Global.General.CallWrapperSync(300011,V.Local.sParams)
						gui.FrmMaster..SetFocus
						Gui.FrmMaster..Enabled(True)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				'Load Multi-Part screen
				f.Intrinsic.Control.If(v.Global.bViewPart)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					Gui.FrmMaster..Enabled(False)
					f.Intrinsic.Control.CallSub(LoadMultiPart,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					Gui.FrmMaster..Enabled(True)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("Printed","PRINTED","Print","PRINT")
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
			f.Intrinsic.Control.If(v.Local.sJob.Trim,<>,"")
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = 'Y' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sParams)
				F.Global.General.CallWrapperSync(900100,V.Local.sParams)
			f.Intrinsic.Control.Else
				f.Intrinsic.UI.Msgbox("No work order for the selected line")
			f.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
			F.Intrinsic.Control.If(V.Global.bExists)
			f.Intrinsic.Control.AndIf(v.Global.bReplUpdReschedUtility,=,True)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)				
					F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
					F.Intrinsic.Control.If(V.Local.sWC,<>,"")
						F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
						F.Intrinsic.String.Build("{0}\GAB_5556_Repl_Upd_Resched_Utility_WC_WG.g2u",V.Caller.GasDir,V.Local.sGabFile)
						F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
						F.Global.General.ResetPassedDataElements
						gui.FrmMaster.cmdAllData.BackColor(255)
						'Gui.FrmMaster.lblStatus.ForeColor(255)
						'Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Open Work Orders to pickup changes from WC Dashboard")
						'Gui.FrmMaster.lblStatus.Visible(True)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
						F.Intrinsic.Control.If(V.Local.sWG,<>,"")
							F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
							F.Intrinsic.String.Build("{0}\GAB_5556_Repl_Upd_Resched_Utility_WC_WG.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
							gui.FrmMaster.cmdAllData.BackColor(255)
							'Gui.FrmMaster.lblStatus.ForeColor(255)
							'Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Open Work Orders to pickup changes from WC Dashboard")
							'Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("FLAG_HOLD")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
			f.Intrinsic.Control.AndIf(v.Global.bEditWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue)
					V.Local.sHold.Set("N")
					V.Local.iHold.Set(0)
					V.Local.bHold.Set(False)
					Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Args.RowIndex,False)
				F.Intrinsic.Control.Else
					V.Local.sHold.Set("Y")
					V.Local.iHold.Set(1)
					V.Local.bHold.Set(True)
					Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Args.RowIndex,True)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bHold,"GV","gvAll","Flag","FLAG_HOLD")
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("RELEASED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
			f.Intrinsic.Control.AndIf(v.Global.bEditWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue,=,False)
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = 'Y', DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Ambient.Date.FormatMMDDYY,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(True)
					Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,True)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = '', DATE_RELEASED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(False)
					Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,False)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bRel,"GV","gvAll","Flag","FLAG_REL")
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("PURCHASE_ORDER2")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
			f.Intrinsic.Control.AndIf(v.Global.bEditWO)
				F.Intrinsic.String.Concat("O!*!",v.Args.cellvalue,"!*!",V.Local.sParams)
				F.Global.General.CallWrapperASync(175200,V.Local.sParams)
			f.Intrinsic.Control.Else
				F.Intrinsic.String.Concat("V!*!",v.Args.cellvalue,"!*!",V.Local.sParams)
				F.Global.General.CallWrapperASync(175200,V.Local.sParams)
			F.Intrinsic.Control.EndIf
			
						
		F.Intrinsic.Control.Case("PURCHASE_ORDER")
			f.Intrinsic.Control.If(v.Args.cellvalue.Trim,<>,"")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				f.Intrinsic.Control.AndIf(v.Global.bEditWO)
					F.Intrinsic.String.Concat("O!*!",v.Args.cellvalue,"!*!",V.Local.sParams)
					F.Global.General.CallWrapperASync(175200,V.Local.sParams)
				f.Intrinsic.Control.Else
					F.Intrinsic.String.Concat("V!*!",v.Args.cellvalue,"!*!",V.Local.sParams)
					F.Global.General.CallWrapperASync(175200,V.Local.sParams)
				F.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
			
	F.Intrinsic.Control.EndSelect
	
	'f.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.Control.Catch
		f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
		f.Intrinsic.Control.CallSub(FrmMaster_UnLoad)
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCAll_RowCellClick.End

Program.Sub.cmdSave_Click.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.sWO.Declare
	v.Local.sSuf.Declare
	v.Local.sTextLbl.Declare
	v.Local.sQueries.Declare
	v.Local.srows.Declare
	
	F.Intrinsic.UI.InvokeWaitDialog("Saving Records to Database.")
	f.Intrinsic.String.Split(v.Global.sSQLQueries,";",v.local.sQueries)
	f.Intrinsic.Control.For(v.Local.i,0,v.local.sQueries.UBound,1)
		f.Intrinsic.Control.If(v.Local.sQueries(v.Local.i).trim,<>,"")
			f.ODBC.Connection!con.execute(v.Local.sQueries(v.Local.i))
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.String.Split(v.Global.sRows,";",v.local.sRows)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.sRows.UBound,1)
		f.Intrinsic.Control.If(v.Local.srows(v.Local.i).trim,<>,"")
			f.Data.DataTable.SetValue("dtAll2",v.Local.sRows(v.Local.i),"RowChange","")
		f.Intrinsic.control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	v.Global.sSQLQueries.Set("")
	v.Global.sRows.Set("")
	
	f.Intrinsic.UI.CloseWaitDialog
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(FrmMaster_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSave_Click.End

Program.Sub.InsertNote.Start
f.Intrinsic.Control.Try
	V.Local.SSQL.Declare
	f.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTESLOG (JOB_PO,SUFFIX,FIELD,NOTES,USERID) VALUES ('{0}','{1}','{2}','{3}','{4}')",v.Args.Job,v.Args.Suffix,v.Args.Field,v.Args.notes,v.Caller.User,v.Local.SSQL)
	f.ODBC.Connection!con.Execute(v.Local.ssql)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(FrmMaster_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.InsertNote.End

Program.Sub.GsGCAll_CellValueChanged.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sWO.Declare
	V.Local.sSuf.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextLbl.Declare
	v.Local.sTextTbl.Declare
	v.Local.sTextTbl.Redim(0,1)
	v.Local.sName.Declare
	V.Local.sHold.Declare
	V.Local.iHold.Declare
	v.Local.sret.Declare
	v.Local.sCust.Declare
	v.Local.lSize.Declare
	V.Local.sSONum.Declare
	v.local.sCustPO.Declare
	v.Local.sSP.Declare
	v.Local.sProj.Declare

	Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
	Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf) 

	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.CaseAny("SALES_ORDER","sales_order")
			'Set Row Change and SO Number
			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"RowChange","X")
			V.Local.sSONum.Set(V.Args.VALUE)
			f.Intrinsic.String.LPad(v.Local.sSONum,"0",7,v.Local.sSONum)
			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"SALES_ORDER",v.Local.sSONum)
			
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET SALES_ORDER='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sSONum,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			F.ODBC.Connection!con.Execute(v.Local.sSQL)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Sales Order","Notes",v.Local.sSONum)
			
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Run the query to grab the pertinent fields
			F.Intrinsic.String.Build("select CUSTOMER, CUSTOMER_PO, SALESPERSON,PROJECT from v_ORDER_HEADER where ORDER_NO='{0}'",v.Local.sSONum,v.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sret)
			f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
			v.Local.sCust.Set(v.Local.sret(0))
			v.Local.sCustPO.Set(v.Local.sret(1))
			v.Local.sSP.Set(v.Local.sret(2))
			v.Local.sProj.Set(v.Local.sret(3))

			'Do Project
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET PROJECT='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sProj.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			F.ODBC.Connection!con.Execute(v.Local.sSQL)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Project","Notes",v.Local.sProj)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Do Sales Person
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET SALESPERSON='{0}', SALESPERSON_OLD='{1}' WHERE JOB='{2}' AND SUFFIX='{3}'",v.Local.sSP.Trim,v.Local.sSP.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			F.ODBC.Connection!con.Execute(v.Local.sSQL)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Sales Person","Notes",v.Local.sSP)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Do Customer PO
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET CUSTOMER_PO='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sCustPO.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			F.ODBC.Connection!con.Execute(v.Local.sSQL)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Customer PO","Notes",v.Local.sCustPO)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
			'Do Name of Customer
			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET CUSTOMER='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sCust.Trim,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			F.ODBC.Connection!con.Execute(v.Local.sSQL)
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Customer","Notes",v.Local.sCust)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			
		
		F.Intrinsic.Control.CaseAny("PHASE","Phase")
			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"RowChange","X")
			v.Local.sTextLbl.Set(v.DataTable.dtAll2(V.ARGS.ROWINDEX).PHASE!fieldvaltrim)
			F.Intrinsic.String.Replace(V.local.sTextLbl,"'","''",V.Local.sTextTbl)
			'f.Intrinsic.String.Split(v.Local.sTextTbl,"~",v.Local.sTextTbl)
			F.Intrinsic.Control.If(v.Local.sTextTbl.UBound,=,0)
				f.Intrinsic.String.Build("UPDATE JOB_HEADER SET PHASE='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'","",v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			f.Intrinsic.Control.Else
				f.Intrinsic.String.Build("UPDATE JOB_HEADER SET PHASE='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sTextTbl,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
			F.Intrinsic.Control.EndIf
			F.ODBC.Connection!con.Execute(v.Local.sSQL)
			
			f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","Phase","Notes",v.Local.sTextTbl)
			'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
			'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
	
		F.Intrinsic.Control.CaseAny("WO_NOTE")
			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"RowChange","X")
			v.Local.sTextLbl.Set(v.DataTable.dtAll2(V.ARGS.ROWINDEX).WO_NOTE!fieldvaltrim)
			F.Intrinsic.String.Replace(V.local.sTextLbl,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM GAB_4169_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTES(JOB,SUFFIX,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(v.Local.sSQL)
				f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","WO Note","Notes",v.Local.sTextTbl)
				'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
				'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GAB_4169_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(v.Local.sSQL)
				f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","WO Note","Notes",v.Local.sTextTbl)
				'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
				'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close

		F.Intrinsic.Control.CaseAny("WO_NOTE2")
			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"RowChange","X")
			v.Local.sTextLbl.Set(v.DataTable.dtAll2(V.ARGS.ROWINDEX).WO_NOTE2!fieldvaltrim)
			F.Intrinsic.String.Replace(V.local.sTextLbl,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(v.Local.sSQL)
				f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","User 6","Notes",v.Local.sTextTbl)
				'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
				'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(v.Local.sSQL)
				f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","User 6","Notes",v.Local.sTextTbl)
				'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
				'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			
		F.Intrinsic.Control.CaseAny("SOUSER_5")
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER_LINE",V.Args.RowIndex,V.Local.sSuf)
			f.Intrinsic.String.Build("SELECT * FROM V_ORDER_LINES WHERE ORDER_NO='{0}' AND RECORD_NO='{1}0'",v.Local.sWO,v.Local.sSuf,v.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
				f.Intrinsic.UI.Msgbox("Error: Sales Order not found in open sales.")
			f.Intrinsic.Control.Else
				f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"RowChange","X")
				v.Local.sTextLbl.Set(v.DataTable.dtAll2(V.ARGS.ROWINDEX).SOUSER_5!fieldvaltrim)
				F.Intrinsic.String.Replace(V.local.sTextLbl,"'","''",V.Local.sTextTbl)
				f.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_5='{0}' WHERE ORDER_NO='{1}' AND RECORD_NO='{2}0'",v.Local.sTextTbl,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
				F.ODBC.Connection!con.Execute(v.Local.sSQL)
				f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","SO User Field 5","Notes",v.Local.sTextTbl)
				'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
				'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			f.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.CaseAny("SOUSER_4")
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER_LINE",V.Args.RowIndex,V.Local.sSuf)
			f.Intrinsic.String.Build("SELECT * FROM V_ORDER_LINES WHERE ORDER_NO='{0}' AND RECORD_NO='{1}0'",v.Local.sWO,v.Local.sSuf,v.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
				f.Intrinsic.UI.Msgbox("Error: Sales Order not found in open sales.")
			f.Intrinsic.Control.Else
				f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"RowChange","X")
				v.Local.sTextLbl.Set(v.DataTable.dtAll2(V.ARGS.ROWINDEX).SOUSER_4!fieldvaltrim)
				F.Intrinsic.String.Replace(V.local.sTextLbl,"'","''",V.Local.sTextTbl)
				f.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_4='{0}' WHERE ORDER_NO='{1}' AND RECORD_NO='{2}0'",v.Local.sTextTbl,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
				F.ODBC.Connection!con.Execute(v.Local.sSQL)
				f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","SO User Field 4","Notes",v.Local.sTextTbl)
				'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
				'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
			f.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("SONotes")
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER_LINE",V.Args.RowIndex,V.Local.sSuf)
			f.Intrinsic.String.Build("SELECT * FROM V_ORDER_LINES WHERE ORDER_NO='{0}' AND RECORD_NO='{1}0'",v.Local.sWO,v.Local.sSuf,v.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
				f.Intrinsic.UI.Msgbox("Error: Sales Order not found in open sales.")
			f.Intrinsic.Control.Else
				f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"RowChange","X")
				v.Local.sTextLbl.Set(v.DataTable.dtAll2(v.ARGS.ROWINDEX).SONOTES!fieldvaltrim)
				F.Intrinsic.String.Replace(V.local.sTextLbl,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GAB_4167_SO_NOTES WHERE SO = '{0}' AND SOLINE = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					f.Intrinsic.String.Build("INSERT INTO GAB_4167_SO_NOTES (Notes,SO,SOLINE) VALUES ('{0}','{1}','{2}')",v.Local.sTextTbl,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
					F.ODBC.Connection!con.Execute(v.Local.sSQL)
					f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","SO Notes","Notes",v.Local.sTextTbl)
					'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
					'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
				F.Intrinsic.Control.Else
					f.Intrinsic.String.Build("UPDATE GAB_4167_SO_NOTES SET Notes='{0}' WHERE SO='{1}' AND SOLINE='{2}'",v.Local.sTextTbl,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
					F.ODBC.Connection!con.Execute(v.Local.sSQL)
					f.Intrinsic.Control.CallSub(InsertNote,"JOB",v.Local.sWO,"SUFFIX",v.Local.sSuf,"Field","SO Notes","Notes",v.Local.sTextTbl)
					'f.Intrinsic.String.Concat(v.Global.sSQLQueries,v.Local.sSQL,";",v.Global.sSQLQueries)
					'f.Intrinsic.String.Concat(v.Global.sRows,v.Args.rowindex,";",v.Global.sRows)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
			f.Intrinsic.Control.EndIf

			
	F.Intrinsic.Control.EndSelect
	

''''OLD LOGIC FOR UPDATING A CELL INSTANTLY, LEAVING BEHIND IN CASE IT NEEDS TO BE REFERRED AGAIN
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'	F.Intrinsic.Control.SelectCase(V.Args.column)
'		f.Intrinsic.Control.Case("SALESPERSON")
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
'			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
'			f.Intrinsic.String.Split(v.Local.sTextTbl,"~",v.Local.sTextTbl)
'			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"Salesperson",v.Local.sTextTbl)
'			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET SALESPERSON='{0}', SALESPERSON_OLD='{1}' WHERE JOB='{2}' AND SUFFIX='{3}'",v.Local.sTextTbl(1),v.Local.sTextTbl(0),v.Local.sWO,v.Local.sSuf,v.Local.ssql)
'			f.ODBC.Connection!con.execute(v.Local.ssql)
'			
'		f.Intrinsic.Control.Case("SOUSER_5")
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER",V.Args.RowIndex,V.Local.sWO)
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER_LINE",V.Args.RowIndex,V.Local.sSuf)
'			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
'			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"SOUser_5",v.Local.sTextTbl)
'			f.Intrinsic.String.Build("SELECT * FROM V_ORDER_LINES WHERE ORDER_NO='{0}' AND RECORD_NO='{1}0'",v.Local.sWO,v.Local.sSuf,v.Local.sSQL)
'			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
'			f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
'				f.Intrinsic.UI.Msgbox("Warning: Sales Order not found in open sales.  Note will not be saved.")
'			f.Intrinsic.Control.EndIf
'			f.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_5='{0}' WHERE ORDER_NO='{1}' AND RECORD_NO='{2}0'",v.Local.sTextTbl,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
'			f.ODBC.Connection!con.execute(v.Local.ssql)
'			
'		f.Intrinsic.Control.Case("SOUSER_4")
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER",V.Args.RowIndex,V.Local.sWO)
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER_LINE",V.Args.RowIndex,V.Local.sSuf)
'			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
'			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"SOUser_4",v.Local.sTextTbl)
'			f.Intrinsic.String.Build("SELECT * FROM V_ORDER_LINES WHERE ORDER_NO='{0}' AND RECORD_NO='{1}0'",v.Local.sWO,v.Local.sSuf,v.Local.sSQL)
'			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
'			f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
'				f.Intrinsic.UI.Msgbox("Warning: Sales Order not found in open sales.  Note will not be saved.")
'			f.Intrinsic.Control.EndIf
'			f.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_4='{0}' WHERE ORDER_NO='{1}' AND RECORD_NO='{2}0'",v.Local.sTextTbl,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
'			f.ODBC.Connection!con.execute(v.Local.ssql)
'			
'		f.Intrinsic.Control.Case("SONotes")
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER",V.Args.RowIndex,V.Local.sWO)
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SALES_ORDER_LINE",V.Args.RowIndex,V.Local.sSuf)
'			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
'			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"SONotes",v.Local.sTextTbl)
'			f.Intrinsic.String.Build("SELECT * FROM V_ORDER_LINES WHERE ORDER_NO='{0}' AND RECORD_NO='{1}0'",v.Local.sWO,v.Local.sSuf,v.Local.sSQL)
'			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
'			f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
'				f.Intrinsic.UI.Msgbox("Warning: Sales Order not found in open sales.")
'			f.Intrinsic.Control.EndIf
'			
'			F.Intrinsic.String.Build("SELECT * FROM GAB_4167_SO_NOTES WHERE SO = '{0}' AND SOLINE = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
'			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
'			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
'				f.Intrinsic.String.Build("INSERT INTO GAB_4167_SO_NOTES (Notes,SO,SOLINE ) VALUES ('{0}','{1}','{2}')",v.Local.sTextTbl,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
'				f.ODBC.Connection!con.execute(v.Local.ssql)
'			F.Intrinsic.Control.Else
'				f.Intrinsic.String.Build("UPDATE GAB_4167_SO_NOTES SET Notes='{0}' WHERE SO='{1}' AND SOLINE='{2}'",v.Local.sTextTbl,v.Local.sWO,v.Local.sSuf,v.Local.ssql)
'				f.ODBC.Connection!con.execute(v.Local.ssql)
'			F.Intrinsic.Control.EndIf
'			
'		f.Intrinsic.Control.Case("NAME_CUSTOMER")
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
'			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
'			f.Intrinsic.String.Split(v.Local.sTextTbl,"~",v.Local.sTextTbl)
'			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"NAME_CUSTOMER",v.Local.sTextTbl)
'			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET CUSTOMER='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sTextTbl(1),v.Local.sWO,v.Local.sSuf,v.Local.ssql)
'			f.ODBC.Connection!con.execute(v.Local.ssql)
'			
'		f.Intrinsic.Control.Case("PROJECT")
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
'			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
'			f.Intrinsic.String.Split(v.Local.sTextTbl,"~",v.Local.sTextTbl)
'			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"PROJECT",v.Local.sTextTbl)
'			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET PROJECT='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sTextTbl(1),v.Local.sWO,v.Local.sSuf,v.Local.ssql)
'			f.ODBC.Connection!con.execute(v.Local.ssql)
'		
'		f.Intrinsic.Control.Case("PHASE")
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
'			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
'			f.Intrinsic.String.Split(v.Local.sTextTbl,"~",v.Local.sTextTbl)
'			f.Data.DataTable.SetValue("dtAll2",v.Args.rowindex,"PHASE",v.Local.sTextTbl)
'			f.Intrinsic.String.Build("UPDATE JOB_HEADER SET PHASE='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sTextTbl(1),v.Local.sWO,v.Local.sSuf,v.Local.ssql)
'			f.ODBC.Connection!con.execute(v.Local.ssql)
'			
'		F.Intrinsic.Control.Case("WO_NOTE")
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
'			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
'			F.Intrinsic.String.Build("SELECT * FROM GAB_4169_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
'			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
'			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
'				F.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTES(JOB,SUFFIX,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
'				F.ODBC.Connection!con.Execute(V.Local.sSQL)
'			F.Intrinsic.Control.Else
'				F.Intrinsic.String.Build("UPDATE GAB_4169_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
'				F.ODBC.Connection!con.Execute(V.Local.sSQL)
'			F.Intrinsic.Control.EndIf
'			F.ODBC.con!rstNotes.Close
'			'F.Intrinsic.Control.CallSub(CheckNote,"Job",V.Local.sWO,"Suffix",V.Local.sSuf,"FieldName",V.Args.Column,"Text",V.Args.Value)

'		F.Intrinsic.Control.Case("WO_NOTE2")
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
'			Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
'			F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
'			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
'			F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
'			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
'			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
'				F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
'				F.ODBC.Connection!con.Execute(V.Local.sSQL)
'			F.Intrinsic.Control.Else
'				F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
'				F.ODBC.Connection!con.Execute(V.Local.sSQL)
'			F.Intrinsic.Control.EndIf
'			F.ODBC.con!rstNotes.Close
'			'F.Intrinsic.Control.CallSub(CheckNote,"Job",V.Local.sWO,"Suffix",V.Local.sSuf,"FieldName",V.Args.Column,"Text",V.Local.sText)
'	F.Intrinsic.Control.EndSelect
'	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCAll_CellValueChanged.End

Program.Sub.LockScreen.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	gui.FrmMaster.tabProd.Enabled(false)
'	Gui.FrmMaster.frameButtons.Enabled(False)
'	Gui.FrmMaster.framePermissions.Enabled(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LockScreen.End

Program.Sub.EnableScreen.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
'	Gui.FrmMaster.frameButtons.Enabled(True)
'	Gui.FrmMaster.framePermissions.Enabled(True)
'	Gui.FrmMaster.lblStatus.Visible(False)
'	Gui.FrmMaster.pbStatus.Visible(False)
	gui.FrmMaster.tabProd.Enabled(true)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.EnableScreen.End

Program.Sub.tabMaster_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Function.Intrinsic.Control.SelectCase(V.Screen.FrmMaster!tabMaster.Tab)
		Function.Intrinsic.Control.Case(0)
			Gui.FrmMaster.txtLate.Visible(True)
		Function.Intrinsic.Control.Case(1)
			Gui.FrmMaster.txtLate.Visible(False)
		Function.Intrinsic.Control.Case(2)
			Gui.FrmMaster.txtLate.Visible(True)
	Function.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.tabMaster_Click.End

Program.Sub.CheckNote.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFilter.Declare
	
	'dtAllShip
	F.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Args.Job,V.Args.Suffix,V.Local.sFilter)
	F.Data.DataView.Create("dtAll2","dvNote",22,V.Local.sFilter,"")
	F.Data.DataView.SetValue("dtAll2","dvNote",-1,V.Args.FieldName,V.Args.Text)
	F.Data.DataView.Close("dtAll2","dvNote")
	
	'dtDueShip
	F.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Args.Job,V.Args.Suffix,V.Local.sFilter)
	F.Data.DataView.Create("dtLate","dvNote",22,V.Local.sFilter,"")
	F.Data.DataView.SetValue("dtLate","dvNote",-1,V.Args.FieldName,V.Args.Text)
	F.Data.DataView.Close("dtLate","dvNote")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckNote.End

Program.Sub.picGSSLogo_DblClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://www.globalshopsolutions.com/login-customer","","",0)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.picGSSLogo_DblClick.End

Program.Sub.CheckFlag.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sWO.Declare
	V.Local.sSuf.Declare
	V.Local.iRows.Declare
	V.Local.iCnt.Declare

	F.Intrinsic.Control.If(V.Args.Flag,=,"FLAG_HOLD")
		F.Intrinsic.Control.If(V.Args.GV,=,"gvAll")
			F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
				F.Intrinsic.Control.If(V.Local.sWO,=,V.Args.WO)
				F.Intrinsic.Control.AndIf(V.Local.sSuf,=,V.Args.Suf)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.Else
			Gui.FrmMaster.GsGCAll.GetRowCount("gvAll",V.Local.iRows)
			F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Local.iCnt,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Local.iCnt,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Local.sWO,=,V.Args.WO)
				F.Intrinsic.Control.AndIf(V.Local.sSuf,=,V.Args.Suf)
					Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Local.iCnt,V.Args.bFlag)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Args.GV,=,"gvAll")
			F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
				F.Intrinsic.Control.If(V.Local.sWO,=,V.Args.WO)
				F.Intrinsic.Control.AndIf(V.Local.sSuf,=,V.Args.Suf)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.Else
			Gui.FrmMaster.GsGCAll.GetRowCount("gvAll",V.Local.iRows)
			F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Local.iCnt,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Local.iCnt,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Local.sWO,=,V.Args.WO)
				F.Intrinsic.Control.AndIf(V.Local.sSuf,=,V.Args.Suf)
					Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Local.iCnt,V.Args.bFlag)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.EndIf	
	F.Intrinsic.Control.EndIf	
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckFlag.End

Program.Sub.Serialize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	V.Local.sSerialize2.Declare
	V.Local.sSerialize3.Declare
	V.Local.sSerialize4.Declare
	
	F.Intrinsic.Control.If(V.Caller.GSSVersion,>=,"2020.1")
		Gui.FrmMaster.GsGCAll.Serialize("gvAll",true,V.Local.sSerialize)
		Gui.FrmMaster.gsgcOper.Serialize("gvOper",true,V.Local.sSerialize2)
		Gui.FrmMaster.gsgcAllM.Serialize("gvALLM",true,V.Local.sSerialize3)
		gui.FrmMaster.gsgcAllO.Serialize("gvAllO",true,v.Local.sSerialize4)
	F.Intrinsic.Control.Else
		Gui.FrmMaster.GsGCAll.Serialize("gvAll",V.Local.sSerialize)
		Gui.FrmMaster.gsgcOper.Serialize("gvOper",V.Local.sSerialize2)
		Gui.FrmMaster.gsgcAllM.Serialize("gvALLM",V.Local.sSerialize3)
		gui.FrmMaster.gsgcAllO.Serialize("gvAllO",v.Local.sSerialize4)
	F.Intrinsic.Control.EndIf
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVOPER",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize2)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVallM",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize3)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVallO",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize4)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"chkForce",5657,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,v.Screen.FrmMaster!chkForce.Value)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sfile.Declare
	V.Local.sSerialize.Declare
	V.Local.sSerialize2.Declare
	V.Local.sChkForce.Declare
	v.Local.iCnt.Declare
	v.Local.lCol.Declare
	
	'Delete old registry records
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5657,0,5,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
		F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 5657 And Seq < 1000;")
		F.ODBC.Connection!common.Close
	F.Intrinsic.Control.EndIf
	
	'GvAll
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5657,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.FrmMaster.GsGCAll.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
		
	'GvOper
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVOPER",5657,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.FrmMaster.gsgcOper.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	'gvAllM
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvAllM",5657,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.FrmMaster.gsgcAllM.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	'gvAllO
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvAllO",5657,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.FrmMaster.gsgcAllO.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	'Force
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"chkForce",5657,1000,6,"",V.Local.sChkForce)
	F.Intrinsic.Control.If(V.Local.sChkForce.Trim,<>,"")
		gui.FrmMaster.chkForce.Value(v.Local.sChkForce)
	F.Intrinsic.Control.EndIf
	

'Loop through the records and set the colour accordingly
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.frmMulti_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmMulti..Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.frmMulti_UnLoad.End

Program.Sub.LoadMultiPart.Start
	V.Local.sSQL.Declare
	V.Local.sCaption.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtMulti.Exists)
		F.Data.DataTable.Close("dtMulti")
	F.Intrinsic.Control.EndIf
	
	V.Local.sJob.Set(V.Args.Job)
	V.Local.sSuffix.Set(V.Args.Suffix)
	
	F.Intrinsic.Control.If(V.Local.sSuffix.Trim,=,"")
		F.Intrinsic.String.Build("Work Order: {0}",V.Local.sJob,V.Local.sCaption)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("Work Order: {0}-{1}",V.Local.sJob,V.Local.sSuffix,V.Local.sCaption)
	F.Intrinsic.Control.EndIf
	Gui.frmMulti..Caption(V.Local.sCaption)
	
	F.Intrinsic.String.Build("Select Job,Suffix,Part,RTrim(Descr) As Descr,Qty From Job_Mult_Parts Where Job = '{0}' And Suffix = '{1}';",V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtMulti","con",V.Local.sSQL,True)
	
	Gui.frmMulti.GsGCMulti.AddGridviewFromDatatable("gvMulti","dtMulti")
	Gui.frmMulti.GsGCMulti.MainView("gvMulti")
	Gui.frmMulti.GsGCMulti.SuspendLayout()
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","MultiSelect",True)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","AllowSort",True)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","AllowFilter",True)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","OptionsDetailShowDetailTabs",False)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","OptionsViewShowGroupPanel",False)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","OptionsMenuShowAutoFilterRowItem",False)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","OptionsFilterUseNewCustomFilterDialog",True)
	
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","Visible",False)
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","Visible",False)
	
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","Caption","Job")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","Caption","Suffix")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Part","Caption","Part")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Descr","Caption","Description")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Qty","Caption","Qty")

	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","AllowEdit",False)
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","AllowEdit",False)
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Part","AllowEdit",False)
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Descr","AllowEdit",False)
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Qty","AllowEdit",False)

	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","MinWidth","20")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","MinWidth","20")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Part","MinWidth","120")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Descr","MinWidth","200")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Qty","MinWidth","50")

	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","HeaderHAlignment","Center")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","HeaderHAlignment","Center")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Part","HeaderHAlignment","Center")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Descr","HeaderHAlignment","Center")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Qty","HeaderHAlignment","Center")

	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","CellHAlignment","Center")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","CellHAlignment","Center")

	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Qty","DisplayCustomNumeric","#,###,###,##0.00")
	
	Gui.frmMulti.GsGCMulti.ResumeLayout()
	
	Gui.frmMulti..Show
Program.Sub.LoadMultiPart.End

Program.Sub.cmdCache_click.Start
f.Intrinsic.Control.Try
	v.Local.sFileXML.Declare
	v.Local.sfilematl.Declare
	v.Local.sfilelabr.Declare
	v.Local.sfileouts.Declare
	v.Local.sfilemulti.Declare
	
	f.Intrinsic.Control.CallSub(disableAll)
	
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtall2.xml",v.Local.sfilexml)
	f.Data.DataTable.CreateFromXML("dtAll2",v.Local.sFileXML,true)
	
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtAllM.xml",v.Local.sFileXML)
	f.Data.DataTable.CreateFromXML("dtAllM",v.Local.sFileXML,true)
	f.Data.DataView.Create("dtAllM","dvAllM")
	
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtAllO.xml",v.Local.sFileXML)
	f.Data.DataTable.CreateFromXML("dtAllO",v.Local.sFileXML,true)
	f.Data.DataView.Create("dtAllO","dvAllO")
	
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtoper.xml",v.Local.sfilexml)
	f.Data.DataTable.CreateFromXML("dtOper",v.Local.sFileXML,true)
	f.Data.DataView.Create("dtOper","dvOper")
	
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtChild.xml",v.Local.sFileXML)
	f.Data.DataTable.CreateFromXML("dtChild",v.Local.sFileXML,true)
	
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtChildLabr.xml",v.Local.sFileXML)
	f.Data.DataTable.CreateFromXML("dtChildLabr",v.Local.sFileXML,true)
	
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\5657dtChildOuts.xml",v.Local.sFileXML)
	f.Data.DataTable.CreateFromXML("dtChildOuts",v.Local.sFileXML,true)
	
 	f.Intrinsic.String.Concat(v.Caller.LocalGSSTempDir,"\",v.Caller.CompanyCode,"_5657_ViewMatl.xml",v.Local.sfilematl)
 	f.Intrinsic.String.Concat(v.Caller.LocalGSSTempDir,"\",v.Caller.CompanyCode,"_5657_ViewLabr.xml",v.Local.sfilelabr)
 	f.Intrinsic.String.Concat(v.Caller.LocalGSSTempDir,"\",v.Caller.CompanyCode,"_5657_ViewOuts.xml",v.Local.sfileouts)
 	f.Intrinsic.String.Concat(v.Caller.LocalGSSTempDir,"\",v.Caller.CompanyCode,"_5657_ViewMulti.xml",v.Local.sfilemulti)
	f.Data.DataTable.SaveToXML("dtChild",0,true,v.Local.sfileMatl)
	f.Data.DataTable.SaveToXML("dtChildLabr",0,true,v.Local.sfilelabr)
	f.Data.DataTable.SaveToXML("dtChildOuts",0,true,v.Local.sfileouts)
		
	'Load from XML, creating new data table, add relation
	f.Intrinsic.Control.Try
		f.Data.DataTable.CreateFromXML("dtAll2$dtChild",v.Local.sfileMatl,true)
		F.Data.DataView.Create("dtAll2$dtChild","dvMatl")
		F.Data.DataTable.AddRelation("dtAll2","JS","dtAll2$dtChild","JS","Material")
	f.Intrinsic.Control.Catch
	f.Intrinsic.Control.EndTry
	
	f.Intrinsic.Control.Try
		f.Data.DataTable.CreateFromXML("dtAll2$dtChildLabr",v.Local.sfilelabr,true)
		F.Data.DataView.Create("dtAll2$dtChildLabr","dvLabr")
		F.Data.DataTable.AddRelation("dtAll2","JS","dtall2$dtChildLabr","JS","Labour")
	f.Intrinsic.Control.Catch
	f.Intrinsic.Control.EndTry
	
	f.Intrinsic.Control.Try
		f.Data.DataTable.CreateFromXML("dtAll2$dtChildOuts",v.Local.sfileouts,true)
		F.Data.DataView.Create("dtAll2$dtChildOuts","dvOuts")
		F.Data.DataTable.AddRelation("dtAll2","JS","dtall2$dtChildOuts","JS","Outside")
	f.Intrinsic.Control.Catch
	f.Intrinsic.Control.EndTry

	f.Intrinsic.Control.CallSub(loadgvall)
	gui.FrmMaster.lblCache.Visible(false)
	F.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.Control.CallSub(Deserialize)
	f.Intrinsic.Control.CallSub(enableAll)
	GUI.FrmMaster.tabProd.Visible(true)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaster_Unload)
f.Intrinsic.Control.endtry
Program.Sub.cmdCache_click.End

Program.Sub.cmdProcess_Click.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.BlockEvents
	GUI.FrmMaster.tabProd.Visible(FALSE)
	f.Intrinsic.Control.CallSub(disableAll)

	
	f.Intrinsic.Control.CallSub(ProgramData,"Customer",v.Screen.FrmMaster!txtCustomer.text,"SalesOrder",v.Screen.FrmMaster!txtSO.text,"Switch","Y")
	f.Intrinsic.Control.CallSub(loadgvall)
	
	v.Global.bLoadData.Set(true)
	gui.FrmMaster.lblCache.Visible(false)
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.CallSub(Deserialize)
	f.Intrinsic.Control.CallSub(enableAll)
	
	GUI.FrmMaster.tabProd.Visible(true)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaster_Unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdProcess_Click.End

Program.Sub.cmdSelectAll_Click.Start
f.Intrinsic.Control.Try
	'All WOs
	f.Intrinsic.Control.If(v.Screen.FrmMaster!tabProd.Tab,=,0)
		f.Intrinsic.Control.If(v.DataView.dtAll2!dvAll2FilteredRows.Exists)
			f.Data.DataView.Close("dtAll2","dvAll2FilteredRows")
		f.Intrinsic.Control.EndIf
		F.Data.DataView.Create("dtAll2","dvAll2FilteredRows",22,v.Global.sAllWOFilter,"")
   		F.Data.DataView.SetValue("dtAll2","dvAll2FilteredRows",-1,"SelectWO",True)

	'All Material
	f.Intrinsic.Control.elseif(v.Screen.FrmMaster!tabProd.Tab,=,1)
		f.Intrinsic.Control.If(v.DataView.dtAllM!dvAllMFilteredRows.Exists)
			f.Data.DataView.Close("dtAllM","dvAllMFilteredRows")
		f.Intrinsic.Control.EndIf
		F.Data.DataView.Create("dtAllM","dvAllMFilteredRows",22,v.Global.sAllMatFilter,"")
   		F.Data.DataView.SetValue("dtAllM","dvAllMFilteredRows",-1,"SelectWO",True)
   	
   	'All Outside
	f.Intrinsic.Control.elseif(v.Screen.FrmMaster!tabProd.Tab,=,2)
		f.Intrinsic.Control.If(v.DataView.dtAllO!dvAllOFilteredRows.Exists)
			f.Data.DataView.Close("dtAllO","dvAllOFilteredRows")
		f.Intrinsic.Control.EndIf
		F.Data.DataView.Create("dtAllO","dvAllOFilteredRows",22,v.Global.sAllOutFilter,"")
   		F.Data.DataView.SetValue("dtAllO","dvAllOFilteredRows",-1,"SelectWO",True)
	
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaster_Unload)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSelectAll_Click.End

Program.Sub.lookupVendor_SelectionMade.Start
F.Intrinsic.UI.Sleep(1)
f.Data.DataTable.SetValue("dtAllM",v.Global.iVendRow,"VENDOR",v.DataTable.lookupVendor_Result(0).VENDOR!FIELDVALTRIM,"VENDORNAME",v.DataTable.lookupVendor_Result(0).NAME_VENDOR!FIELDVALTRIM,"SelectWO",true)
V.Global.iVendRow.Set(0)
Program.Sub.lookupVendor_SelectionMade.End

Program.Sub.lookupVendorOut_SelectionMade.Start
F.Intrinsic.UI.Sleep(1)
f.Data.DataTable.SetValue("dtAllO",v.Global.iVendRow,"VENDOR",v.DataTable.lookupVendorOut_Result(0).VENDOR!FIELDVALTRIM,"VENDORNAME",v.DataTable.lookupVendorOut_Result(0).NAME_VENDOR!FIELDVALTRIM,"SelectWO",true)
V.Global.iVendRow.Set(0)
Program.Sub.lookupVendorOut_SelectionMade.End

Program.Sub.cmdSerialize_Click.Start
f.Intrinsic.Control.CallSub(Serialize)
Program.Sub.cmdSerialize_Click.End

Program.Sub.cmdDeserialize_Click.Start
f.Intrinsic.Control.CallSub(DeSerialize)
Program.Sub.cmdDeserialize_Click.End

Program.Sub.cmdSaveOutput_Click.Start
f.Intrinsic.Control.Try
	v.Local.sfile.Declare
	v.Local.sStamp.Declare
	v.Local.sSerial.Declare
	f.Intrinsic.String.Format(v.Ambient.Now,"YYYYMMDD HHNNSS",v.Local.sStamp)
	
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\DATA ",v.Local.sStamp,".xml",v.Local.sfile)
	f.Data.Datatable.SaveToXML("dtAll2",0,true,v.Local.sfile)
	
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\SERIAL ",v.Local.sStamp,".txt",v.Local.sfile)
	gui.FrmMaster.GsGCAll.Serialize("gvAll",v.Local.sSerial)
	f.Intrinsic.File.String2File(v.Local.sFile,v.Local.sSerial)
	
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry

Program.Sub.cmdSaveOutput_Click.End

Program.Sub.FrmMaster_SaveButtonClick.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.sWO.Declare
	v.Local.sSuf.Declare
	v.Local.sTextLbl.Declare
	v.Local.sQueries.Declare
	v.Local.srows.Declare
	
	F.Intrinsic.UI.InvokeWaitDialog("Saving Records to Database.")
	f.Intrinsic.String.Split(v.Global.sSQLQueries,";",v.local.sQueries)
	f.Intrinsic.Control.For(v.Local.i,0,v.local.sQueries.UBound,1)
		f.Intrinsic.Control.If(v.Local.sQueries(v.Local.i).trim,<>,"")
			f.ODBC.Connection!con.execute(v.Local.sQueries(v.Local.i))
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.String.Split(v.Global.sRows,";",v.local.sRows)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.sRows.UBound,1)
		f.Intrinsic.Control.If(v.Local.srows(v.Local.i).trim,<>,"")
			f.Data.DataTable.SetValue("dtAll2",v.Local.sRows(v.Local.i),"RowChange","")
		f.Intrinsic.control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	v.Global.sSQLQueries.Set("")
	v.Global.sRows.Set("")
	
	f.Intrinsic.UI.CloseWaitDialog
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(FrmMaster_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.FrmMaster_SaveButtonClick.End

Program.Sub.FrmMaster_RefreshClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.CallSub(cmdProcess_Click)
	
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(FrmMaster_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.FrmMaster_RefreshClick.End

Program.Sub.FrmMaster_ExportClick.Start
f.Intrinsic.Control.Try
	gui.FrmMaster.GsGCAll.enabled(false)
	gui.FrmMaster.gsgcOper.enabled(false)
	
	f.Intrinsic.Control.CallSub(MenuClickExport)
	
	gui.FrmMaster.GsGCAll.enabled(true)
	gui.FrmMaster.gsgcOper.enabled(true)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.FrmMaster_ExportClick.End

Program.Sub.FrmMaster_UserButtonClicked.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	v.Local.sCust.Declare
	
	f.Intrinsic.Control.SelectCase(v.Args.Button)
		f.Intrinsic.Control.Case("cmdCustomer")
			V.Local.sSQL.Set("SELECT CUSTOMER, NAME_CUSTOMER FROM V_CUSTOMER_MASTER order by NAME_CUSTOMER")
			'Split Column Names into an array (*!* delimited string)
			F.Intrinsic.String.Split("CUSTOMER*!*NAME_CUSTOMER","*!*",V.Local.sCol)
			'Split Column widths into an array (*!* delimited string)
			F.Intrinsic.String.Split("600*!*3000","*!*",V.Local.sColW)
			F.Intrinsic.UI.Browser("Select a Customer","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
				f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
				gui.FrmMaster.txtBCustomer.Text(v.Local.sRet(0))
				gui.FrmMaster.txtCustomer.Text(v.Local.sRet(0))
				GUI.FrmMaster..SetFocus(1)
			F.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Case("cmdSalesOrder")
			f.Intrinsic.Control.If(v.Global.sCustomer.Trim,<>,"")
				f.Intrinsic.String.Build("select A.CUSTOMER, A.ORDER_NO, A.CUSTOMER_PO, A.CODE_SORT,  B.NAME_CUSTOMER from V_ORDER_HEADER A left join V_ORDER_BILL_TO B ON A.ORDER_NO = B.ORDER_NO WHERE A.CUSTOMER='{0}' order by A.CUSTOMER, A.ORDER_NO",v.Local.sCust,v.Local.sSQL)
				F.Intrinsic.String.Split("Customer*!*Order#*!*Customer PO#*!*Order Sort 1*!*Name Customer","*!*",V.Local.sCol)
				F.Intrinsic.String.Split("1200*!*1600*!*2100*!*2100*!*3200","*!*",V.Local.sColW)
			f.Intrinsic.Control.Else
				V.Local.sSQL.Set("select A.CUSTOMER, A.ORDER_NO, A.CUSTOMER_PO, A.CODE_SORT,  B.NAME_CUSTOMER from V_ORDER_HEADER A left join V_ORDER_BILL_TO B ON A.ORDER_NO = B.ORDER_NO order by A.CUSTOMER, A.ORDER_NO")
				F.Intrinsic.String.Split("Customer*!*Order#*!*Customer PO#*!*Order Sort 1*!*Name Customer","*!*",V.Local.sCol)
				F.Intrinsic.String.Split("1200*!*1600*!*2100*!*2100*!*3200","*!*",V.Local.sColW)
			f.Intrinsic.Control.EndIf
			
			F.Intrinsic.UI.Browser("Select a Order","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
				f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
				gui.FrmMaster.txtBCustomer.Text(v.Local.sRet(1))
				
				'gui.FrmMaster.txtSO.Text(v.Local.sRet(1))
				
				'gui.FrmMaster.txtCustomer.Text(v.Local.sRet(0))
				
				GUI.FrmMaster..SetFocus(1)
				f.Intrinsic.Control.CallSub(cmdProcess_click)
			F.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Case("cmdProcess")
			f.Intrinsic.Control.CallSub(cmdProcess_click)
			
	f.Intrinsic.Control.EndSelect
	
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaster_Unload)
f.Intrinsic.Control.EndTry

Program.Sub.FrmMaster_UserButtonClicked.End

Program.Sub.FrmMaster_UserTextBoxEditValueChanged.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.SelectCase(v.Args.TextBox)
		f.Intrinsic.Control.Case("txtBCustomer")
			v.Global.sCustomer.Set(v.Args.Text)
		f.Intrinsic.Control.Case("txtBSalesOrder")
			v.Global.sSalesOrder.Set(v.Args.Text)
	f.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaster_Unload)
f.Intrinsic.Control.EndTry
Program.Sub.FrmMaster_UserTextBoxEditValueChanged.End

Program.Sub.accAllWO_ElementClick.Start
F.Intrinsic.Control.Try
	gui.FrmMaster.GsGCAll.enabled(false)
	gui.FrmMaster.gsgcOper.enabled(false)
	
	f.Intrinsic.Control.SelectCase(v.Args.Caption)
		f.Intrinsic.Control.Case("Close WO Seq")
			f.Intrinsic.Control.CallSub(MenuCloseSeq)
		f.Intrinsic.Control.Case("New WO")
			F.Intrinsic.Control.CallSub(MenuClickNew)
		f.Intrinsic.Control.Case("WIP to FG (Expedited)")
			f.Intrinsic.Control.CallSub(MenuClickWIPFG)
		f.Intrinsic.Control.Case("Issue Material")
			f.Intrinsic.Control.CallSub(MenuClickAllWOIssue)
		f.Intrinsic.Control.Case("Complete Task")
			f.Intrinsic.Control.CallSub(MenuClickTask)
		f.Intrinsic.Control.Case("Backwards Schedule")
			f.Intrinsic.Control.CallSub(MenuClickBWD)
	f.Intrinsic.Control.EndSelect

	gui.FrmMaster.GsGCAll.enabled(TRUE)
	gui.FrmMaster.gsgcOper.enabled(TRUE)
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.accAllWO_ElementClick.End

Program.Sub.MenuClickBWD.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.iFlag.Declare
	v.Local.sJob.Declare
	v.Local.sSuf.Declare
	v.Local.sMsg.Declare
	V.Local.sSql.Declare
	v.Local.sDte.Declare
	v.Local.dDueDate.Declare
	
	f.Intrinsic.Control.If(v.DataView.dtAll2!dvAll2Selected.Exists)
		f.Data.DataView.Close("dtAll2","dvAll2Selected")
	f.Intrinsic.Control.EndIf
	F.Data.DataView.Create("dtAll2","dvAll2Selected",22,"SelectWO=True","")
	
	f.Intrinsic.String.Concat(v.Local.sMsg,"Backwards Schedule Job #s: ",v.Ambient.NewLine,v.Local.sMsg)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataView.dtall2!dvAll2Selected.RowCount--,1)
		f.Intrinsic.String.Concat(v.Local.sMsg,v.DataView.dtAll2!dvAll2Selected(v.Local.i).JOB!FIELDVALTRIM,"-",V.DataView.DTALL2!dvAll2Selected(v.Local.i).SUFFIX!FIELDVALTRIM,v.Ambient.NewLine,v.Local.sMsg)
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Intrinsic.UI.MsgBox(v.Local.sMsg,"Backwards Schedule",4,v.Local.iFlag)
	
	f.Intrinsic.Control.If(v.Local.iFlag,=,6)
		f.Intrinsic.Control.For(v.Local.i,v.dataview.dtall2!dvAll2Selected.rowcount--,0,-1)
			v.Local.sJob.Set(v.dataview.dtall2!dvAll2Selected(v.Local.i).JOB!FIELDVALTRIM)
			v.Local.sSuf.Set(v.dataview.dtall2!dvAll2Selected(v.Local.i).SUFFIX!FIELDVALTRIM)
			v.Local.dDueDate.Set(v.dataview.dtall2!dvAll2Selected(v.Local.i).DATE_DUE!FIELDVAL)
			f.Intrinsic.String.Format(v.Local.dDueDate,"MMDDYY",V.Local.sDte)
			F.Intrinsic.String.Build("UPDATE JOB_HEADER SET DATE_DUE='{0}' WHERE JOB='{1}' AND SUFFIX='{2}'",v.Local.sDte,v.Local.sJob,v.Local.sSuf,v.Local.sSql)
			f.ODBC.Connection!con.Execute(v.Local.sSql)
			f.Global.APS.ScheduleJob(v.Local.sJob,v.Local.sSuf,"B",v.Local.dDueDate)
			f.Data.DataView.SetValue("dtAll2","dvAll2Selected",v.Local.i,"SelectWO",False)
		f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.MenuClickBWD.End

Program.Sub.accOper_ElementClick.Start
F.Intrinsic.Control.Try
	gui.FrmMaster.GsGCAll.enabled(false)
	gui.FrmMaster.gsgcOper.enabled(false)
	
	f.Intrinsic.Control.SelectCase(v.Args.Caption)
		f.Intrinsic.Control.Case("Close WO Seq")
			f.Intrinsic.Control.CallSub(MenuCloseSeq)
		f.Intrinsic.Control.Case("Backflush Labour")
			f.Intrinsic.Control.CallSub(MenuBackFlush)
	f.Intrinsic.Control.EndSelect
	
	gui.FrmMaster.GsGCAll.enabled(TRUE)
	gui.FrmMaster.gsgcOper.enabled(TRUE)
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.accOper_ElementClick.End

Program.Sub.MenuBackFlush.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sDate.Declare
	v.Local.sTime.Declare
	v.Local.sEmpl.Declare
	v.Local.sJobH.Declare
	v.Local.sSuff.Declare
	v.Local.sSequ.Declare
	v.Local.sWrkC.Declare
	v.Local.sClsd.Declare
	v.Local.sSTme.Declare
	v.Local.sETme.Declare
	v.Local.fGood.Declare
	v.Local.fBadP.Declare
	V.Local.fHour.Declare
	v.Local.i.Declare
	
	f.Intrinsic.UI.Inputbox("Employee#","Employee","99999",v.Local.sempl)
	f.Intrinsic.String.Format(v.Ambient.Date,"MMDDYY",v.Local.sDate)
	f.Intrinsic.String.Format(v.Ambient.Now,"HHNNSSss",v.Local.sTime)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtOper.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtOper(v.Local.i).SelectWO!fieldval)
			v.Local.sJobH.Set(v.DataTable.dtOper(v.Local.i).JOB!FIELDVALTRIM)
			v.Local.sSuff.Set(v.DataTable.dtOper(v.Local.i).SUFFIX!FIELDVALTRIM)
			v.Local.sSequ.Set(v.DataTable.dtOper(v.Local.i).SEQ!FIELDVALTRIM)
			f.Intrinsic.String.LPad(v.Local.sSequ,"0",6,v.Local.sSequ)
			v.Local.sWrkC.Set(v.DataTable.dtOper(v.Local.i).CUR_OPER!FIELDVALTRIM)
			v.Local.fHour.Set(v.DataTable.dtOper(v.Local.i).REM_HRS!fieldval)
			V.Local.sClsd.Set("Y")
			v.Local.fGood.Set(v.DataTable.dtOper(v.Local.i).PCS_REM1!fieldvalfloat)
			f.Intrinsic.Math.Mult(v.Local.fGood,10000,v.Local.fGood)
			f.Intrinsic.Control.CallSub(TimeFormat,"Hours",v.Local.fHour)
			f.Intrinsic.Variable.ArgToVar("BeginTime",v.Local.sSTme)
			f.Intrinsic.Variable.ArgToVar("EndTime",v.Local.sETme)
			f.Data.DataTable.AddRow("JB0455","Date",v.Local.sDate,"Employee",V.Local.sEmpl,"Job",v.Local.sJobH,"Suffix",v.Local.sSuff,"Seq",v.Local.sSequ,"WC",v.Local.sWrkC,"Closed",v.Local.sClsd,"Indirect","D","StartTime",v.Local.sSTme,"StopTime",v.Local.sETme,"RateType","R","GoodPcs",v.Local.fGood,"ScrapPcs",v.Local.fBadP)
			f.Data.DataTable.SetValue("dtOper",v.Local.i,"SelectWO",false)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.CallSub(JB0455Sync)
	
F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.MenuBackFlush.End

Program.Sub.TimeFormat.Start
f.Intrinsic.Control.Try
	v.Local.fInput.Declare
	v.Local.sVals.Declare
	v.Local.iHour.Declare
	v.Local.iMinute.Declare
	v.Local.fMinuteDec.Declare
	v.Local.dBeginTime.Declare
	v.Local.dEndTime.Declare
	v.Local.sBeginTime.Declare
	v.Local.sEndTime.Declare
	v.Local.sStampHour.Declare
	v.Local.sStampDay.Declare
	v.Local.dBeginTime.Set(v.Ambient.Now)
	
	v.Local.fInput.Set(v.Args.Hours)
	
	'gET LEFT OF DECIMAL
	f.Intrinsic.String.Split(v.Local.fInput,".",v.Local.sVals)
	v.Local.iHour.Set(v.Local.sVals(0))
	f.Intrinsic.String.Concat(".",v.Local.sVals(1),v.Local.fMinuteDec)
	
	f.Intrinsic.Date.DateAdd("H",v.Local.iHour,v.Local.dBeginTime,v.Local.dEndTime)
	f.Intrinsic.Math.Mult(v.Local.fMinuteDec,60,v.Local.iMinute)
	f.Intrinsic.Date.DateAdd("N",v.Local.iMinute,v.Local.dEndTime,v.Local.dEndTime)	
	
	f.Intrinsic.String.Format(v.Local.dBeginTime,"HHMM",v.Local.sBeginTime)
	f.Intrinsic.String.Format(v.Local.dEndTime,"HHMM",v.Local.sEndTime)
	
	f.Intrinsic.Variable.AddRV("BeginTime",v.Local.sBeginTime)
	f.Intrinsic.Variable.AddRV("EndTime",v.Local.sEndTime)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmHeatTime_unload)
f.Intrinsic.Control.EndTry
Program.Sub.TimeFormat.End

Program.Sub.accMat_ElementClick.Start
F.Intrinsic.Control.Try
	gui.FrmMaster.GsGCAll.enabled(false)
	gui.FrmMaster.gsgcOper.enabled(false)
	
	f.Intrinsic.Control.SelectCase(v.Args.Caption)
		f.Intrinsic.Control.Case("Automated Purchasing")
			f.Intrinsic.Control.CallSub(MenuClickCreatePO,"dt","dtAllM","dv","dvAllM","GV","gvAllM","GC","gsgcAllM")
		f.Intrinsic.Control.Case("Issue Material")
			f.Intrinsic.Control.CallSub(MenuClickIssue)
		f.Intrinsic.Control.Case("Issue Material (Backflush)")
			f.Intrinsic.Control.CallSub(MenuClickIssueBF)
		f.Intrinsic.Control.Case("Close WO Seq")
			f.Intrinsic.Control.CallSub(MenuCloseSeq)
	f.Intrinsic.Control.EndSelect
	
	gui.FrmMaster.GsGCAll.enabled(TRUE)
	gui.FrmMaster.gsgcOper.enabled(TRUE)
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.accMat_ElementClick.End

Program.Sub.accOut_ElementClick.Start

F.Intrinsic.Control.Try
	gui.FrmMaster.GsGCAll.enabled(false)
	gui.FrmMaster.gsgcOper.enabled(false)
	
	f.Intrinsic.Control.SelectCase(v.Args.Caption)
		f.Intrinsic.Control.Case("Automated Purchasing")
			f.Intrinsic.Control.CallSub(MenuClickCreatePO,"dt","dtAllO","dv","dvAllO","GV","gvAllO","GC","gsgcAllO")
		f.Intrinsic.Control.Case("Close WO Seq")
			f.Intrinsic.Control.CallSub(MenuCloseSeq)
	f.Intrinsic.Control.EndSelect
	
	gui.FrmMaster.GsGCAll.enabled(TRUE)
	gui.FrmMaster.gsgcOper.enabled(TRUE)
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.accOut_ElementClick.End

Program.Sub.MenuClickTask.Start
F.Intrinsic.Control.Try
	f.Global.General.CallWrapperSync(50,"JB0028")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.MenuClickTask.End

Program.Sub.cmdBrowseSO_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	v.Local.sCust.Declare
	v.Local.sCust.Set(v.Screen.frmMaster!txtCustomer.Text)
	f.Intrinsic.Control.If(v.Local.sCust,<>,"")
		f.Intrinsic.String.Build("select A.CUSTOMER, A.ORDER_NO, A.CUSTOMER_PO, A.CODE_SORT,  B.NAME_CUSTOMER from V_ORDER_HEADER A left join V_ORDER_BILL_TO B ON A.ORDER_NO = B.ORDER_NO WHERE A.CUSTOMER='{0}' order by A.CUSTOMER, A.ORDER_NO",v.Local.sCust,v.Local.sSQL)
		F.Intrinsic.String.Split("Customer*!*Order#*!*Customer PO#*!*Order Sort 1*!*Name Customer","*!*",V.Local.sCol)
		F.Intrinsic.String.Split("1200*!*1600*!*2100*!*2100*!*3200","*!*",V.Local.sColW)
	f.Intrinsic.Control.Else
		V.Local.sSQL.Set("select A.CUSTOMER, A.ORDER_NO, A.CUSTOMER_PO, A.CODE_SORT,  B.NAME_CUSTOMER from V_ORDER_HEADER A left join V_ORDER_BILL_TO B ON A.ORDER_NO = B.ORDER_NO order by A.CUSTOMER, A.ORDER_NO")
		F.Intrinsic.String.Split("Customer*!*Order#*!*Customer PO#*!*Order Sort 1*!*Name Customer","*!*",V.Local.sCol)
		F.Intrinsic.String.Split("1200*!*1600*!*2100*!*2100*!*3200","*!*",V.Local.sColW)
	f.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.UI.Browser("Select a Order","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		'gui.FrmMaster.txtBCustomer.Text(v.Local.sRet(1))
		
		gui.FrmMaster.txtSO.Text(v.Local.sRet(1))
		
		gui.FrmMaster.txtCustomer.Text(v.Local.sRet(0))
		
		GUI.FrmMaster..SetFocus(1)
		f.Intrinsic.Control.CallSub(cmdProcess_click)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End

f.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseSO_Click.End

Program.Sub.cmdBrowseCust_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	v.Local.sCust.Declare
	V.Local.sSQL.Set("SELECT CUSTOMER, NAME_CUSTOMER FROM V_CUSTOMER_MASTER order by NAME_CUSTOMER")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("CUSTOMER*!*NAME_CUSTOMER","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*3000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Customer","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		'gui.FrmMaster.txtBCustomer.Text(v.Local.sRet(0))
		gui.FrmMaster.txtCustomer.Text(v.Local.sRet(0))
		GUI.FrmMaster..SetFocus(1)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End

f.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseCust_Click.End

Program.Sub.tabProd_Click.Start
F.Intrinsic.Control.Try
'	f.Intrinsic.Control.If(v.Screen.FrmMaster!tabProd.Tab,=,0)
'		gui.FrmMaster.GsGCAll.Visible(true)
'		gui.FrmMaster.gsgcAllM.Visible(false)
'		gui.FrmMaster.gsgcAllO.Visible(false)
'		gui.FrmMaster.gsgcOper.Visible(false)
'	f.Intrinsic.Control.elseif(v.Screen.FrmMaster!tabProd.Tab,=,1)
'		gui.FrmMaster.GsGCAll.Visible(false)
'		gui.FrmMaster.gsgcAllM.Visible(true)
'		gui.FrmMaster.gsgcAllO.Visible(false)
'		gui.FrmMaster.gsgcOper.Visible(false)
'	f.Intrinsic.Control.elseif(v.Screen.FrmMaster!tabProd.Tab,=,2)
'		gui.FrmMaster.GsGCAll.Visible(false)
'		gui.FrmMaster.gsgcAllM.Visible(false)
'		gui.FrmMaster.gsgcAllO.Visible(true)
'		gui.FrmMaster.gsgcOper.Visible(false)
'	f.Intrinsic.Control.elseif(v.Screen.FrmMaster!tabProd.Tab,=,3)
'		gui.FrmMaster.GsGCAll.Visible(false)
'		gui.FrmMaster.gsgcAllM.Visible(false)
'		gui.FrmMaster.gsgcAllO.Visible(false)
'		gui.FrmMaster.gsgcOper.Visible(true)
'	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.tabProd_Click.End

Program.Sub.Comments.Start
${$5$}$20.1.8413.19752$}$1
${$6$}$sstanka$}$20230213110103420$}$mP+zz5Tw3sT2/nyap+FbWm4triMPqjXD8jGDcO9oZZjZUAOBXgHcIuaXAby3CWNtXtETAewdiD4=
Program.Sub.Comments.End